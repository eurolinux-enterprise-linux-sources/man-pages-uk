." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "setserial" "1" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

.SH " Назва "
.PP
setserial \- отримати або встановити параметри послідовного порту Linux 

.SH " Сислий огляд "
.PP
\fBsetserial [ \-abqvVWz ] \fR\fIпристрій\fR\fB [ \fR\fIпараметр\fR\fB [ \fR\fIаргумент\fR\fB ] ] ...\fR 
.br

.br
 \fBsetserial \-g [ \-abGv ] \fR\fIпристрій\fR\fB ...\fR 

.SH " Опис "
.PP
\fBsetserial\fR являється програмою встановлення або звітування конфігурації послідовного порту. До конфігурації входять порт вводу\-виводу (I/O, input/output), переривання (IRQ, interrupt request), яке використовується окремим послідовним портом і чи розглядати клавішу переривання як безпечний сигнал уваги (Secure Attention Key) і.т.д. 

Під час звичайного завантаження, тільки порти COM від 1 до 4 будуть ініційовані, використовуючи стандартні порти вводу\-виводу і значення IRQ, перечислені нижче. Для ініціалізації будь\-яких додаткових послідовних портів або поміняти стандартні параметри COM\-портів 1\-4, вам слід використати \fBsetserial\fR. Типово він викликається скриптом \fIrc.serial\fR, який в свою чергу запускається з \fI/etc/rc.local\fR. 

Аргумент \fIпристрою\fR вказує який саме саме послідовний пристрій налагодити або запитати інформацію. Пристрій вказується у формі \fB/dev/cua[0\-3]\fR. 

Якщо не вказано додаткових параметрів, \fBsetserial\fR виведе інформацію про тип UART (Universal Asynchronous Receiver Transmitter) послідовного порту (тобто 8250, 16450, 16550, 16550A і.т.д), апаратний порт вводу\-виводу і лінію переривання (IRQ), швидкість передавання у бодах і деякі додаткові прапорці оперування. 

Якщо вказано опцію \fB\-g\fR, аргументи \fBsetserial\fR розглядаються як список пристроїв для видруку їхньої характеристики. 

Без опції \fB\-g\fR, перший аргумент \fBsetserial\fR розглядається як пристрій для зміни налаштувань або виводу виводу інформації, і будь\-які додаткові аргументи програми вважаються параметрами, призначеними для цього пристрою. 

В більшості випадків для зміни налаштувань послідовного пристрою необхідно привілеї користувача root. Деякі параметри послідовного порту можуть бути встановлені звичайними користувачами, тим не менш, ми звернемо на них увагу. 

.SH " Опції "
.PP
\fBsetserial\fR розуміє наступні опції: 

.TP
.B \fB\-a\fR
 Під час звітування про конфігурацію послідовного пристрою, вивести всю доступну інформацію. 

.TP
.B \fB\-b\fR
 Під час звітування про конфігурацію послідовного пристрою, вивести лише підсумок здобутої інформації. Це може бути використаним для виводу повідомлень під час завантаження системи, при виконанню скрипта(ів) /etc/rc. 

.TP
.B \fB\-G\fR
 Виводить інформацію про конфігурацію послідовного порту у формі, придатній для вживання як аргумент на командному рядку для \fBsetserial\fR. 

.TP
.B \fB\-q\fR
 Малослівний режим. \fBsetserial\fR виведе менше рядків. 

.TP
.B \fB\-v\fR
 Багатослівний режим. \fBsetserial\fR виведе додаткову інформацію статусу. 

.TP
.B \fB\-V\fR
 Показ версії програми. 

.TP
.B \fB\-W\fR
 Здійснює загальну ініціалізацію переривань. Ця опція не є дійсною після ядер Linux 2.1 і вище. 

.TP
.B \fB\-z\fR
 Обнулить будь\-які послідовні прапорці перед встановленням нових. Ця опція пов'язана з опцією автоматичного збереження послідовних прапорців, використовуючи опцію \fB\-G\fR. 

.SH " Параметри "
.PP
Наступні параметри можна призначити послідовному порту. 

Всі значення аргументів вважаються десятковими, хіба були вжиті з передуючим "0x". 

.TP
.B \fBport \fR\fIномер_порту\fR
 Опція \fBport\fR встановлює порт вводу\-виводу. 

.TP
.B \fBirq \fR\fIIRQ_номер\fR
 Встановлює номер апаратного переривання. 

.TP
.B \fBuart \fR\fIuart_тип\fR
 Ця опція використовується для встановлення типу UART. Дозволеними типами є \fBnone\fR, 8250, 16450, 16550, 16550A, 16650, 16650V2, 16654, 16750, 16850, 16950 і 16954. Використання \fBnone\fR внеможливлює порт.
.br

.br
Деякі внутрішні модеми стверджують, що мають тип "16550A UART з 1к буфером". Це не відповідає істині, вони в дійсності не сумісні з 16550A UART, натомість мають 16450 UART з 1k приймальним буфером для запобігання переповнювання приймача. Це важливо, оскільки вони не володіють передавальним FIFO. Автоматична конфігурація, ак правило, правильно визначає такі пристрої як 16450. Якщо ви спробуєте обійти цей параметр за допомогою \fBuart\fR, ви можете зіткнутися з відкинутими знаками під час передачі даних. Ці UART, часом мають додаткові вади, в таких випадках варто вживати \fBskip_test\fR. 

.TP
.B \fBautoconfig\fR
 Коли надано цей параметр, \fBsetserial\fR попросить ядро спробувати автоматично конфігурувати послідовний порт. Порт вводу\-виводу повинен бути наставлений правильно; ядро спробує визначити тип UART і, якщо додатково надано опцію \fBauto_irq\fR, Linux спробує автоматично визначити IRQ. Опція \fBautoconfig\fR повинна вживатись після того як було вказано \fBport\fR, \fBauto_irq\fR і \fBskip_test\fR. 

.TP
.B \fBauto_irq\fR
 Під час автоматично конфігурації, спробувати визначити IRQ. Ця можливість не гарантує завжди вірних результатів; деякі налагодження пристроїв можуть обманути ядро Linux\-а. Як правило, безпечніше не вживати \fBauto_irq\fR можливість, натомість явно вказувати IRQ через опцію \fBirg\fR. 

.TP
.B \fB^auto_irq\fR
 Під час автоматичної конфігурації \fIне\fR намагатися автоматично визначити IRQ. 

.TP
.B \fBskip_test\fR
 Під час автоматичної конфігурації пропустити тестування UART. Деякі внутрішні модеми не включають сумісні з National Semiconductor типи UART, лише дешеві імітації передавача. Деякі з цих кумедних імітацій UART не мають цілковитої підтримки виявлення кільцевого режиму (loopback detection mode), використованого ядром для підтвердження, що дійсно існує передавач UART, прив'язаний до певної адреси, перед тим як конфігурувати прилад. Тож для деяких внутрішніх модемів вам необхідно буде використати цю опцію, щоб Linux зміг правильно ініціювати UART. 

.TP
.B \fB^skip_test\fR
 Під час автоматичної конфігурації \fIне\fR намагатися пропустити тестування UART. 

.TP
.B \fBbaud_base \fR\fIбод\-база\fR
 Ця опція встановлює базу частоти бод, що відповідає частоті годинника машини, поділеної на 16. Як правило, це значення дорівнює 115200, що одночасно являється найшвидшою частотою бод, яку передавачі UART підтримують.

<!== baud \- the signaling rate of a line, which is the number of transitions \e" (voltage or frequency changes) that are made per second. The term has \e" often been erroneously used to specify bits per second. However, only at \e" very low speeds is baud equal to bps; for example, 300 baud is the same \e" as 300 bps. Beyond that, one baud can be made to represent more than one \e" bit. For example, a V.22bis modem generates 1,200 bps at 600 baud. 
==>

.TP
.B \fBspd_hi\fR
 Використовувати 57.6kb коли додаток вимагає 38.4kb. Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBspd_vhi\fR
 Використовувати 115kb коли додаток вимагає 38.4kb. Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBspd_shi\fR
 Використовувати 230kb коли додаток вимагає 38.4kb. Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBspd_warp\fR
 Використовувати 460kb коли додаток вимагає 38.4kb. Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBspd_cust\fR
 Використати власний дільник, вказаний як параметр опції \fBdivisor\fR для встановлення швидкості, коли додаток вимагає 38.4kb. У цьому випадку, частота бод буде \fBbod_base\fR поділене на \fBdivisor\fR. Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBspd_normal\fR
 Використовувати 38.4kb коли додаток вимагає 38.4kb. Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBdivisor\fR\fI дільник\fR
 Ця опція вказує власний дільник, що використовується, якщо було вибрано опцію \fBspd_cust\fR і послідовний порт було встановлено до 38.4kb додатком.  Ця опція може бути вказана звичайним користувачем. 

.TP
.B \fBsak\fR
 Встановити клавішу переривання для безпечного сигналу уваги (Secure Attention Key). 

.TP
.B \fB^sak\fR
 Внеможливлює безпечний сигнал уваги (Secure Attention Key). 

.TP
.B \fBfourport\fR
 Конфігурує порт як для картки AST Fourport. 

.TP
.B \fB^fourport\fR
 Внеможливлює AST Fourport конфігурацію. 

.TP
.B \fB"close_delay " пауза\fR
 Вказує проміжок часу у сотих долях секунди під час якого DTR (Data Terminal Ready) повинен залишатись опущеним на послідовній лінії після того як викликаючий пристрій завершив роботу і до того як блокований пристрій\-відповідач підніме DTR знову. Значенням за замовчуванням для цієї опції є 50, тобто пів\-секунди. \e" DTR \- (Data Terminal Ready) An RS\-232 signal sent from the computer or \e" terminal to the modem indicating that it is able to accept data. Contrast \e" with DSR. (http://computing\-dictionary.thefreedictionary.com/DTR) 

.TP
.B \fBclosing_wait\fR\fI пауза\fR
 Вкаже проміжок часу у сотих долях секунди, який ядро повинне зачекати для передачі даних через послідовний порт, до того як закрити його. Якщо вказано "none", не буде жодної затримки перед закриттям. Якщо вказано "infinite", ядро очікуватиме необмежену кількість часу на те, щоб дані, що знаходяться у буфері, були передані. Значенням за замовчуванням є 3000, або 30\-секундна затримка. Це значення, як правило, є прийнятним для більшості пристроїв. Якщо встановити занадто велику перерву, послідовний порт може зависнути на довгий період у випадку обриву під'єднання і наявності даних у буфері. І навпаки, якщо занадто коротку \- існує ризик втрати частини переданих даних. У випадку надзвичайно повільних пристроїв, варто збільшити значення \fBclosing_wait\fR. 

.TP
.B \fBsession_lockout\fR
 Заблокує від доступу порт (/dev/cuaXX) для різних сесій. Іншими словами, як тільки процес відкрив порт, не дозволяє іншим процесам, з відмінним ідентифікатором ID відкривати цей порт доти, доки його не замкнуто першим процесом. 

.TP
.B \fB^session_lockout\fR
 Не блокувати доступ до викликаючого порту для різних сесій. 

.TP
.B \fBpgrp_lockout\fR
 Заблокує доступ до викликаючого порту (/dev/cuaXX) для різних груп процесів. Іншими словами, як тільки процес відкрив порт, не дозволяє іншим процесам з відмінної групи процесів відкривати цей порт доти, доки його не замкнуто першим процесом. 

.TP
.B \fB^pgrp_lockout\fR
 Не блокувати доступ до викликаючого порту для різних груп процесів. 

.TP
.B \fBhup_notify\fR
 Сповістить процес, блокований на відкритті лінії відповідача, про завершення вживання іншим процесом лінії виклику (або через її закриття, або через сигнал відбою), повертаючи EAGAIN функції open. 
.br

.br
 Цей параметр застосовується з процесами getty, заблокованими на лінії відповідача послідовного порту. Це дозволяє getty перезаладувати модем (який може мати змінену конфігурацію іншими програмами, що використовують пристрій виклику) перед тим як заблокувати лінію для open знову. 

.TP
.B \fB^hup_notify\fR
 Не сповіщати процес, заблокований під час відкриття лінії відповідача, що пристрій виклику здійснив відбій. 

.TP
.B \fBsplit_termios\fR
 Розглядати окремо налаштування termios, використовувані пристроєм виклику і налаштування termios пристроїв\-відповідачів. 

.TP
.B \fB^split_termios\fR
 Використовувати ту саму структуру termios для обох, портів виклику і потрів\-відповідачів. Ця опція використовується за замовчуванням. 

.TP
.B \fBcallout_nohup\fR
 Якщо саме цей послідовний порт відкрито як пристрій виклику, не здійснювати відбій для tty, коли виявлення носія скасовано (відкинуто). 

.TP
.B \fB^callout_nohup\fR
 Не нехтувати відбоєм для tty, коли послідовний порт відкрито як пристрій виклику. Звичайно, HUPCL прапорець для termios повинен бути включеним для можливості відбою. 

.TP
.B \fBlow_latency\fR
 Зменшити затримку приймання даних на послідовному порті за рахунок збільшення вживання процесору. (Як правило існує 5\-10 мілісекунд затримки перед тим як символи посилаються до лінійного алгоритму, щоб зменшити навантаження). Цю опцію вимкнено за замовчуванням, але деякі додатки реального часу можуть вимагати цього. 

.TP
.B \fB^low_latency\fR
 Оптимізувати ефективність обробки процесором знаків послідовного порту за рахунок затримки на 5\-10 мілісекунд до обробки. Цю опцію включено за замовчуванням. 

.SH " Конфігурація послідовного порту "
.PP
Важливо зауважити, що \fBsetserial\fR лише підказує ядру, де воно повинно шукати порти вводу\-виводу і лінії IRQ певного послідовного порту. Ця програма \fIне\fR налагоджує прилад, саму послідовну картку, вказуючи певний порт вводу\-виводу. Для того, щоб здійснити це, вам необхідно фізично запрограмувати картку, як правило через переключення перемичок або перемикача DIP. 

Цей розділ надасть вам невелику допомогу у вирішенню того як би вам хотілось налагодити послідовні порти. 

Ось відповідність портів Лінукса зі "стандартними DOS": 

.RS
.nf
  /dev/ttys0 (COM1), port 0x3f8, irq 4
  /dev/ttys1 (COM2), port 0x2f8, irq 3
  /dev/ttys2 (COM3), port 0x3e8, irq 4
  /dev/ttys3 (COM4), port 0x2e8, irq 3

.fi
.RE
З\-за обмежень архітектури шини AT/ISA, як правило, лінія IRQ не може поділятися між двома або більше послідовними портами. Якщо ви спробуєте здійснити це, порти можуть виявитись ненадійними, у випадку одночасного використання обох. Це обмеження обійшли, так називаємі, багатопортні послідовні картки, яких спроектовано, щоб вони могли поділяти той самий IRQ між багатьма портами. Серед підтримуваних Лінуксом карток можна назвати AST FourPort, Accent Async, Usenet Serial II, Bocaboard  BB\-1004, BB\-1008, BB\-2016 і HUB\-6. 

Вибір альтернативного IRQ дещо ускладнено тим що більшість з них вже використано. Наступне є переліком вибору IRQ у DOS: .IP 

.RS
.nf
  IRQ 3: COM2
  IRQ 4: COM1
  IRQ 5: LPT2
  IRQ 7: LPT1

.fi
.RE
Більшість користувачів можуть вибрати IRQ 5 за умови, що активним є лише один паралельний порт у комп'ютері. Також можна вибрати IRQ 2 (те саме що IRQ 9), хоча цей переривач часом використовується сітьовими картками і зрідка картками VGA. Якщо ваша карка VGA використовує цей IRQ, спробуйте внеможливити його для неї, тож переривач можна буде вживати з іншими пристроями. 

Іншими можливими лініями IRQ можуть бути 3, 4 і 7, хоча навіть вони можуть вже бути зайнятими іншими послідовними або паралельними портами. Якщо ваша карка має 16\-бітне сполучення, і підтримує вищі IRQ, тоді можна використати IRQ 10, 11, 12 і 15. 

На машинах класу AT, IRQ 2 сприймається як IRQ 9, і Лінукс саме так і інтерпретує його. 

Решта IRQ, крім 2 (9), 3, 4, 5, 7, 10, 11, 12 і 15 \fIне\fR повинні використовуватись, оскільки ці переривання належать іншим пристроям і не можуть, як правило, бути поміняними. Ось стандартні призначення номерів IRQ: .RS 

.TP
.B IRQ 0
 Канал датчика часу 0 

.TP
.B IRQ 1
 Клавіатура 

.TP
.B IRQ 2
 Каскад для контролера 2 

.TP
.B IRQ 3
 Послідовний порт 2 

.TP
.B IRQ 4
 Послідовний порт 1 

.TP
.B IRQ 5
 Паралельний порт 2 (Резервний у випадку PS/2) 

.TP
.B IRQ 6
 Дисковод гнучкого диску 

.TP
.B IRQ 7
 Паралельний порт 1 

.TP
.B IRQ 8
 Годинник реального часу 

.TP
.B IRQ 9
 Перенаправлене до IRQ 2 

.TP
.B IRQ 10
 Вільний 

.TP
.B IRQ 11
 Вільний 

.TP
.B IRQ 12
 Вільний (Допоміжний пристрій у випадку PS/2) 

.TP
.B IRQ 13
 Математичний сопроцесор 

.TP
.B IRQ 14
 Контролер жорсткого диску 

.TP
.B IRQ 15
 Вільний 

.SH " Конфігурація багатопортовиг карток "
.PP
Деякі послідовні багатопортові картки, що поділяють багато портів на одному IRQ, використовують один або більше портів для вказівки, чи очікують певні порти обробки. Якщо ваша картка є однією з таких, вам потрібно використати цю рису, щоб запобігти можливого блокування, при западанні IRQ. 

Щоб уможливити такі порти, надайте опцію \fBset_mutiport\fR з додатковими параметрами для багатопортових карток. Ці параметри повинні вказувати який саме з портів є контрольним, маску, що визначає, які з бітів у регістрі є значущими, і накінець параметр \fImatch\fR, який визначає, з чим значущі біти у регістрі співпадатимуть, коли вся робота зроблена і жодні порти не знаходяться у стані очікування. 

Можна вказувати до чотирьох таких порт/маска/match комбінацій. Перша з цих комбінацій повинна бути задана як \fBport1\fR, \fBmask1\fR і \fBmatch1\fR. Друга \- \fBport2\fR, \fBmask2\fR і \fBmatch2\fR і.т.д. Щоб вимкнути цю багатопортову перевірку, встановіть \fBport1\fR до нуля. 

Для того, щоб бути в змозі побачити поточні налаштування багатопортових карток, задайте \fBget_multiport\fR на командному рядку. 

Ось типові параметри для деяких послідовних багатопортових карток: 

.TP
.B AST FourPort
 port1 0x1BF mask1 0xf match1 0xf 

.TP
.B Boca BB\-1004/8
 port1 0x107 mask1 0xff match1 0 

.TP
.B Boca BB\-2016
 port1 0x107 mask1 0xff match1 0 
port2 0x147 mask2 0xff match2 0 

.SH " Конфігурація Hayes ESP "
.PP
Знаряддям \fBsetserial\fR може також налагодити порти на послідовній картці Hayes ESP (Enhanced Serial Port). 

Наступні параметри чинні для портів ESP: 

.TP
.B \fBrx_trigger\fR
 Це випускна межа (у байтах) приймального FIFO. Більші значення означатимуть менше процесорних переривань і отже покращену ефективність; тим не менш, завищене значення може призвести до втрати даних. Чинними значеннями є 1 до 1023. 

.TP
.B \fBtx_trigger\fR
 Це випускна межа (у байтах) передавального FIFO. Більші значення означатимуть менше процесорних переривань і отже покращену ефективність; тим не менш, завищене значення може призвести до погіршення ефективності передачі. Чинними значеннями є 1 до 1023. 

.TP
.B \fBflow_off\fR
 Це межа (у байтах), при якій порт ESP повідомить віддаленого передавача припинити відправку. Чинними значеннями є 1 до 1023. Це значення повинне бути більшим за \fBrx_trigger\fR і \fBtx_trigger\fR. 

.TP
.B \fBflow_on\fR
 Це рівень (у байтах), при якій порт ESP повідомить віддаленого передавача відновити відправку після зупинки. Чинними значеннями є 1 до 1023. Це значення повинне бути меншим за \fBrx_trigger\fR і \fBtx_trigger\fR. 

.TP
.B \fBrx_timeout\fR
 Час, який порт ESP зачекає після отримання останнього знаку перед тим як сигналізувати через переривач. Чинними значеннями є 0 до 255. Завищене значення призведе до сповільнення, тоді як занадто низьке викличе зайві переривання. 

.SH " Вади "
.PP
ПОПЕРЕДЖЕННЯ: Конфігурація послідовного порту з неправильним портом вводу\-виводу може завісити вашу машину. 

.SH " Файли "
.PP
\fI/etc/rc.local\fR 

.br

\fI/etc/rc.serial\fR 

.SH " Дивіться також "
.PP
\fBtty\fR(4), \fBttys\fR(4), \fIkernel/chr_drv/serial.c\fR 

.SH " Автори "
.PP
Оригінальна версія setserial була написана Rick Sladkey (jrs@world.std.com), і модифікована Michael K. Johnson (johnsonm@stolaf.edu). Ця версія була переписана наново Theodore  Ts'o (tytso@mit.edu) у 1993 році. 

