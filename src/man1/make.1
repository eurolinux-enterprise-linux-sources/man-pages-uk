." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "make" "1" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

.SH "Назва"
.PP
make \- знаряддя make GNU для підтримки в робочому стані багаточисельних програм 

.SH "Стисло"
.PP
\fBmake\fR [\fB\-f\fR \fImake\-файл\fR] [\fIопції\fR]... [\fIадресати\fR]... 

.SH "Опис"
.PP
Метою знаряддя \fBmake\fR являється автоматичне визначення, які частини великої програми необхідно перекомпілювати, і віддати відповідні команди для їхньої компіляції. В цьому посібнику описано GNU втілення \fBmake\fR, написане Richard Stallman і Roland McGrath. В прикладах використовуються C\-програми, оскільки вони найпоширеніші, але ви можете вживати \fBmake\fR з будь\-якими мовами програмування, чий компілятор можна запустити за допомогою команд оболонки. Насправді, \fBmake\fR не обмежується програмами. Ви можете використати його для опису якого\-завгодно завдання, де якісь файли необхідно автоматично оновити з інших, коли ці інші змінено. 

Для підготовки до використання \fBmake\fR, необхідно створити make\-файл, з описом взаємовідношень різноманітних файлів вашої програми, і командами для оновлення кожного з них. В програмах, типово, виконуваний файл оновлюється через об'єктні файли, які, у власну чергу, створено завдяки компіляції вихідних текстів програми. 

Як тільки існуватиме задовільний make\-файл, кожний раз, як ви поміняєте щось у вихідних текстах, вистачить простої оболонкової команди 

.RS
.nf
       
    make

.fi
.RE
для того, щоб було виконано всі необхідні перекомпіляції. Програма \fBmake\fR використовує дані з make\-файлу і час останньої модифікації файлів для того, щоб вирішити, які файли потрібно оновити. Для кожного такого файлу, вона виконує відповідну команду з даних make\-файлу. 

\fBmake\fR виконує команди make\-файлу для того, щоб оновити одне або більше ім'я\-адресат, де ім'ям, типово, являється програма. Якщо опція \fB\-f\fR відсутня, \fBmake\fR шукатиме make\-файли \fIGNUmakefile\fR, \fImakefile\fR або \fIMakefile\fR (у поточному каталозі) саме в цій послідовності. 

За звичайних обставин, вам слід назвати ваш make\-файл як \fImakefile\fR або \fIMakefile\fR. (Ми радимо назву \fIMakefile\fR, оскільки її краще видно на початку переліку файлів каталогу, поруч з іншими важливими файлами, як скажімо \fIREADME\fR.) Перше ім'я, що перевіряється, не рекомендовано вживати в більшості випадків. Воно призначено для make\-файлів, характерних для \fBmake\fR GNU, не зрозумілих іншим версіям \fBmake\fR. Якщо make\-файл вказано як `\fB\-\fR', читатиметься стандартний пристрій вводу. 

Оновлення адресату залежить від складових, що можливо було модифіковано з часу останньої зміни самого адресату, або якщо адресату не існує. 

.SH "Ключі"
.PP

.TP
.B \fB\-b\fR
 
.TP
.B \fB\-m\fR
 Ці ключі ігноруються заради сумісності з іншими версіями \fBmake\fR. 

.TP
.B \fB\-C \fR\fIкаталог\fR
 Перейти до вказаного \fIкаталогу\fR перед читанням make\-файлів або здійсненням інших дій. Якщо задано декілька опцій \fB\-C\fR, кожна інтерпретується відносно попередньої: \fB\-C / \-C /etc\fR рівнозначне \fB\-C /etc\fR. Типово, використовується для рекурсивних викликів \fBmake\fR. 

.TP
.B \fB\-d\fR
 Вивести інформацію зневадження, наряду зі звичайною обробкою. Зневаджувальні повідомлення вказують, які файли необхідно оновити, які мітки часу порівнюються, які файли перекомпільовано, які правила застосовано \- словом, все, що може видатись цікавим щодо операцій, здійснюваних \fBmake\fR. 

.TP
.B \fB\-f \fR\fIфайл\fR
 Використати \fIфайл\fR як make\-файл. 

.TP
.B \fB\-i\fR
 Ігнорує всі помилки команд, виконаних для оновлення файлів. 

.TP
.B \fB\-I \fR\fIкаталог\fR
 Вказує \fIкаталог\fR для пошуку там make\-файлів. Якщо використати декілька опцій \fI\-I\fR, пошук здійснюватиметься у вказаному порядку. На відміну від аргументів решти прапорців \fBmake\fR, каталоги, що стоять після \fI\-I\fR можна друкувати одразу після прапорця, тобто дозволяється \fB\-I\fR\fIкаталог\fR, так само як \fB\-I\fR \fIкаталог\fR. Такий синтаксис передбачено для сумісності з прапорцем \fB\-I\fR препроцесору C. 

.TP
.B \fB\-j \fR\fIзавдань\fR
 Вказує кількість \fIзавдань\fR (команд), що можна одночасно запустити. Якщо існує більше однієї опції \fB\-j\fR, остання візьме гору. Якщо ж вказати \fB\-j\fR без аргументу, кількість процесів не обмежуватиметься. 

.TP
.B \fB\-k\fR
 Продовжити, наскільки це можливо після помилки. Навіть, якщо адресат і те, що залежить від нього не можна перезібрати, решта взаємозалежностей цих адресатів буде оброблено як звичайно. 

.TP
.B \fB\-l\fR
 
.TP
.B \fB\-l \fR\fIнавантаження\fR
 Не розпочинатиме жодних завдань (команд), якщо виконуються інші, і середнє навантаження системи, щонайменше дорівнює вказаному (числу з плаваючою точкою). Без жодних аргументів, скасовує попереднє обмеження навантаження. 

.TP
.B \fB\-n\fR
 Виведе команди, які би було виконано, але не виконуватиме їх. 

.TP
.B \fB\-o \fR\fIфайл\fR
 Не чіпати \fIфайл\fR, навіть якщо він старший за залежні від нього, так само не перезбирати нічого, пов'язаного зі змінами у файлі. Фактично, \fIфайл\fR вважатиметься дуже старим, і його правила ігноруватимуться. 

.TP
.B \fB\-p\fR
 Виведе дані make\-файлу (правила і значення змінних), після чого продовжити звичайне виконання, або таке, яке вказано. Це також виводить інформацію про версію \fBmake\fR, ніби було вжито ключ \fB\-v\fR (дивіться нижче). Щоб вивести дані make\-файлу, без перезібрання, скористайтеся з "make \-p \-f/dev/null". 

.TP
.B \fB\-q\fR
 Режим запиту. Не виконувати жодних команд, або виводити що\-небудь; просто повернути статус рівний нулю, якщо адресати осучаснені, і ненульовий статус, якщо ні. 

.TP
.B \fB\-r\fR
 Скасує використання вбудованих, прихованих правил. Також очистить стандартний список суфіксів, вживаних у суфіксних правилах. 

.TP
.B \fB\-s\fR
 Безмовний режим; не друкуватиме команд під час їхнього виконання. 

.TP
.B \fB\-S\fR
 Скасовує дію ключа \fB\-k\fR. В цьому, звичайно, немає необхідності, за винятком рекурсивного \fBmake\fR, де \fB\-k\fR, можливо, успадковано від попереднього \fBmake\fR рівнем вище, зі встановленою змінною \fBMAKEFLAGS\fR, або коли \fBMAKEFLAGS\fR вашого середовища включає \fB\-k\fR. 

.TP
.B \fB\-t\fR
 Зачіпає файли (помічає їх як сучасні, не змінюючи їх насправді), замість виконати, внесені там команди. Це застосовується для удавання, ніби команди було виконано, для того, щоб обманути наступні виклики \fBmake\fR. 

.TP
.B \fB\-v\fR
 Виводить версію програми \fBmake\fR, а також авторські права, список авторів, і попередження про відсутність гарантії. 

.TP
.B \fB\-w\fR
 Виведе повідомлення з вказівкою робочого каталогу до і після іншої обробки. Це може виявитись корисним для виявлення помилок під час складного гніздування, або рекурсивних викликів \fBmake\fR. 

.TP
.B \fB\-W \fR\fIфайл\fR
 Прикинутись, ніби адресований файл щойно модифіковано. При використанні з прапорцем \fB\-n\fR, це продемонструє, що би сталося, якби ви змінили цей файл. Без \fB\-n\fR, це рівнозначно виконанню команди \fBtouch\fR(1) перед запуском \fBmake\fR, за винятком того, що час модифікації змінено тільки в уяві \fBmake .\fR 

.SH "Дивіться також"
.PP
Посібник make GNU 

.SH "Вади"
.PP
Дивіться розділ "Проблеми і вади" в "Посібнику make GNU". 

.SH "Автор"
.PP
Цю сторінку посібника складено Dennis Morse зi Стенфордського Університету, і допрацьовано Roland McGrath.   

