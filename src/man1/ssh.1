." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "ssh" "1" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

.SH "Назва"
.PP
ssh \- клієнт захищеної оболонки OpenSSH 

.SH "Стисло"
.PP

.RS
.nf
    <b>ssh</b> [<b>\-afgknqstvxACNTVX1246</b>] [<b>\-b</b> <i>вихідна_адреса</i>] [<b>\-c</b> <i>специфікація_шифру</i>]
        [<b>\-D</b> <i>порт</i>]       [<b>\-e</b> <i>знак_екранування</i>]        [<b>\-F</b> <i>файл_конфігурації</i>]
        [<b>\-i</b> <i>файл_ідентифікації</i>]  [<b>\-L</b> [<i>вихідна_адреса</i><b>:</b>]<i>порт</i><b>:</b><i>хост</i><b>:</b><i>порт_хосту</i>]
        [<b>\-l</b> <i>реєстраційне_ім'я</i>] [<b>\-m</b> <i>автент_ключ</i>] [<b>\-O</b> <i>кер_команда</i>] [<b>\-o</b> <i>опція</i>]
        [<b>\-p</b> <i>порт</i>] [<b>\-R</b> [<i>вихідна_адреса</i><b>:</b>]<i>порт</i><b>:</b><i>хост</i><b>:</b><i>порт_хосту</i>] [<b>\-S</b> <i>кер_сокет</i>]
        [<i>користувач@</i>]<i>хост</i> [<i>команда</i>]

.fi
.RE

.SH "Опис"
.PP
\fBssh\fR (клієнт SSH) є програмою для реєстрації на віддаленій машині і виконанню на ній команд. Її задумано як заміну \fBrlogin\fR(1) і \fBrsh\fR(1), надаючи можливість захищеної шифрованої комунікації між двома хостами через незахищену мережу. Сполучення X11 і довільні порти TCP/IP також можна перенаправити через захищений канал. 

\fBssh\fR з'єднується і реєструється на вказаному \fIхості\fR. Користувач повинен засвідчити свою ідентичність віддаленій машині, використовуючи одну з декількох метод, в залежності від версії діючого протоколу: 

.SS " Протокол SSH версії 1 "
.PP
Перша метода автентифікації полягає у використанні файлів \fIrhost\fR або \fIrhost.equiv\fR у поєднанні із RSA\-перевіркою хосту. Якщо машина, з якої долучився користувач, згадується у \fI/etc/hosts.equiv\fR або \fI/etc/ssh/shosts.equiv\fR на віддаленій машині, і назви користувача збігаються на обох кінцях, користувачеві дозволяється негайно зареєструватись. Також, якщо в користувацькому домашньому каталозі на віддаленій машині присутні файли \fI~/.rhosts\fR або \fI~/.shosts\fR, що містять рядок з назвою клієнтської машини з ім'ям її користувача, цьому користувачеві також дозволено реєструватися. Додатково, за умови, що сервер може перевірити клієнтський хост\-ключ (дивіться \fI/etc/ssh/ssh_known_hosts\fR і \fI~/.ssh/known_hosts\fR у розділі \fBФАЙЛИ\fR), тільки тоді дозволяється реєстрація. Ця форма автентифікації, закриває дірки в безпеці, пов'язані з підробкою IP, DNS або маршрутизації. (Примітка для адміністраторів: \fI/etc/hosts.equiv\fR, \fI~/.rhosts\fR і протоколи rlogin/rsh, загалом, небезпечні і необхідно заборонити, якщо прагнете безпеки.) 

Друга автентифікаційна метода основується на RSA. Ця схема спирається на шифруванні на основі публічних ключів: існують криптографічні (шифрувальні) системи де шифрування і розшифровування відбувається завдяки двом окремим ключам, при цьому неможливо здобути ключ розшифровування при наявному ключі шифрування. RSA саме і є однією з таких систем. Ідея полягає в тому, що кожний користувач створює власну публічну/приватну пару ключів з метою автентифікації. Сервер знатиме публічний ключ і тільки користувач на клієнті володітиме приватним ключем. 

Файл \fI~/.ssh/authorized_keys\fR містить перелік публічних ключів, яким дозволено реєструватися на сервері. Під час реєстрації користувача, програма \fBssh\fR вкаже серверу, яку пару ключів вона хоче використати для автентифікації. Сервер перевірить, чи цей ключ дійсний, і якщо так \- пошле користувачеві (насправді програмі \fBssh\fR, яка діє від імені користувача) виклик у формі довільного числа, зашифрованого користувацьким публічним ключем. Виклик може бути розшифровано тільки використовуючи відповідний приватний ключ. Клієнт повинен розшифрувати виклик за допомогою приватного ключа, доказуючи, що він знає приватний ключ (тобто є тим за кого себе видає), але не розкриваючи ключ серверу. 

\fBssh\fR втілює автентифікаційний протокол RSA автоматично. Користувач створює власну пару ключів RSA, запустивши програму \fBssh\-keygen\fR(1). Остання збереже приватний ключ у \fI~/.ssh/identity\fR, і публічний ключ у \fI~/.ssh/identity.pub\fR у домашньому каталозі користувача. Користувач потім повинен копіювати \fIidentity.pub\fR до \fI~/.ssh/authorized_keys\fR у його домашньому каталозі на віддаленій машині (файл \fIauthorized_keys\fR є відповідником традиційному \fI~/.rhosts\fR і містить по одному ключ на рядок, навіть якщо рядки дуже довгі від цього). Після цього, користувач може реєструватися без необхідності вводити гасло. RSA\-автентифікація набагато безпечніша за rhost. 

Найзручнішим способом використання RSA\-автентифікації, можливо, є у поєднанні з автентифікаційним агентом. Загляніть до \fBssh\-agent\fR(1) для додаткової інформації. 

Якщо інші автентифікаційні методи зазнають невдачі, ssh попросить користувача ввести гасло. Гасло буде посланим віддаленому хосту для перевірки, втім оскільки люба комунікація є зашифрованою, гасло неможливо буде прочитати комусь, хто підслуховує в мережі. 

.SS " Протокол SSH версії 2 "
.PP
Ті самі автентифікаційні методи доступні й тоді, коли користувач під'єднається, використовуючи протокол версії 2. За умови, що змінна \fBPreferredAuthentications\fR має стандартне значення, клієнт спробує спочатку засвідчитися звичайною, основаною на дозволених хостах, методою; якщо це зазнає невдачі, відбудеться спроба автентифікуватися за допомогою публічного ключа; і, нарешті, якщо перші дві спроби не вдалися, матиме місце інтерактивна автентифікація із введенням даних з клавіатури з перевіркою гасла. 

Методa публічного ключа схожa на RSA\-автентифікацію, описану в попередньому розділі, і дозволяє використання алгоритмів DSA або RSA. Клієнт застосує приватний ключ \fI~/.ssh/id_dsa\fR або \fI~/.ssh/id_rsa\fR для підпису ідентифікатора сеансу і пошле результат серверові. Сервер перевірить, чи відповідний публічний ключ перелічено у \fI~/.ssh/authorized_keys\fR, і надасть доступ, якщо ключ і підпис дійсні. Ідентифікатор сеансу утворюється зі спільного значення Dіffie\-Hellman, відомого тільки клієнту і серверові. 

Якщо перевірка публічним ключем зазнала невдачі або не доступна, на віддалену машину можна відправити зашифроване гасло для підтвердження особи користувача. 

Додатково, \fBssh\fR підтримує по\-машинну або "запит\-відповідь" автентифікацію. 

Протокол 2 забезпечує додаткові механізми для конфіденційності (мережний трафік шифрується за використанням 3DES, Blowfish, CAST128 або Arcfour) і перевірки цілісності (hmac\-sha1, hmac\-md5). Зверніть увагу, що протоколу 1 бракує хорошого механізму забезпечення цілісності даних. 

.SS " Вхід у систему і віддалене виконання "
.PP
Якщо ідентичність користувача схвалена сервером, то сервер або виконає вказану \fIкоманду\fR, або зареєструє користувача і надасть звичайну оболонку на віддаленій машині. Весь обмін даних із віддаленою командою або оболонкою буде автоматично зашифровано. 

Якщо надано псевдо\-термінал (звичайний сеанс після реєстрації з системою), то користувач може вживати керуючими послідовностями, описаними нижче. 

Якщо псевдо\-термінал не призначено, сеанс буде прозорим і може застосовуватися для передачі бінарних даних. На більшості систем, надання керівному символу значення "none" зробить сеанс прозорим , навіть якщо використовується термінал. 

Сеанс закінчиться, коли команда або оболонка на віддаленій машині завершить роботу і всі сполучення Х11 і TCP/IP обірвано. Статус виходу віддаленої програми повертається як статус виходу \fBssh\fR. 

.SS " Керівні послідовності "
.PP
Якщо було запитано псевдо\-термінал, то \fBssh\fR надає можливість використання деяких функцій за допомогою керівних послідовностей. 

Одинарний символ тильди можна послати як ~~, або якщо за тильдою слідує інший символом, відмінним від тих, що описано нижче). Керівний символ повинен завжди знаходитись на початку нового рядка, щоб бути розглянутим як спеціальний. Керівні символи можна поміняти у файлах конфігурації через змінну \fBEscapeChar\fR або на командному рядку опцією \fB\-e\fR. (Як правило, керівний символ не відображається під час його введення.) 

Підтримуваними послідовностями (припускаючи стандартну '~') являються: 

.TP
.B \fB~.\fR
 Здійснить відключення. 

.TP
.B \fB~^Z\fR
 Пошле \fBssh\fR у фоновий режим (використайте команду \fBfg\fR щоб вивести сесію на передній план). 

.TP
.B \fB~#\fR
 Надасть список випереджених сполучень. 

.TP
.B \fB~&\fR
 Пошле \fBssh\fR у фоновий режим під час виходу, очікуючи завершення випереджених сполучень або сесій Х11 (тільки для протоколу версії 1). 

.TP
.B \fB~?\fR
 Виведе список керуючих послідовностей. 

.TP
.B \fB~B\fR
 Пошле сигнал BREAK віддаленій системі (дійсне тільки для протоколу SSH версії 2, і тільки коли протилежна сторона підтримує це). 

.TP
.B \fB~C\fR
 Відкриє командний рядок \fBssh\fR. На сьогодні, це дозволяє випередження портів, використовуючи опії \fB\-L\fR і \fB\-R\fR (дивіться нижче), також відміну існуючого випередження віддалених портів за допомогою \fB\-KR\fR \fIпорт_хосту\fR. 

.TP
.B \fB~R\fR
 Запит на додатковий обмін ключами (тільки для протоколу SSH версії 2, і якщо протилежна сторона підтримує це). 

.SS " Перенаправлення X11 і TCP "
.PP
Якщо змінну \fBForwardX11\fR встановлено до ``yes'' у \fIssh_config\fR, (або дивіться опції \fB\-X\fR або \fB\-x\fR нижче). і користувач використовує X11 (зі встановленою змінною середовища \fBDISPLAY\fR), то підключення до дисплею Х11 буде автоматично перенаправлене до віддаленої машини таким чином, що будь\-яка Х11\-програма, запущена з оболонки (або команди) пройде через зашифрований канал і з'єднання з дійсним сервером Х відбудеться з локальної машини. Користувач не повинен власноруч встановлювати \fBDISPLAY\fR. Перенаправлення з'єднань X11 може бути ввімкнене з командного рядка або у файлах конфігурації. 

Значення \fBDISPLAY\fR, встановлене \fBssh\fR, вказуватиме на машину\-сервер, але з номером дисплея більшим за нуль. Це нормально, і відбувається тому, що \fBssh\fR створює посередницький (проксі) Х\-сервер на машині\-сервері для пересилання з'єднань через зашифрований канал. 

\fBssh\fR також автоматично налагодить дані з \fBXauthority\fR на сервері. Для цієї мети він створить випадкові ріп'яшки (cookie) авторизації, збереже їх у \fBXauthority\fR на сервері і впевниться, що перенаправлені з'єднання передають ці ріп'яшки і міняють їх на дійсні, коли встановленоe справжнє з'єднання . Дійсний автентифікаційний ріп'яшок ніколи відсилається назад серверу (і жоден з ріп'яшків не проходить незашифрованим). 

Якщо користувач використовує автентифікаційного агента (змінна \fBForwardAgent\fR встановлено до ``yes'', або використано \fB\-A\fR або \fB\-a\fR опції, описані нижче), то підключення до агента автоматично перенаправляється протилежній стороні. 

Перенаправлення довільних TCP/IP\-з'єднань через захищений канал, можна вказати або на командному рядкові, або у файлі конфігурації. Одне з можливих застосувань перенаправлення TCP/IP \- це захищене з'єднання з електронним гаманцем; інше \- проходження повз мережний екран (firewall). 

.SS " Автентифікація сервера "
.PP
\fBssh\fR автоматично обслуговує і перевіряє базу даних, що втримує ідентифікацію для всіх машин, з якими колись було сполучення. RSA\-ключі машини зберігаються в \fI~/.ssh/known_hosts\fR. Додатково автоматично перевіряється файл \fI/etc/ssh/ssh_known_hosts\fR щодо відомих хостів. Будь\-яку нову машину автоматично додано в користувацький файл. Якщо інформація по ідентифікації машини змінилася, то \fBssh\fR попередить про це й унеможливить автентифікацію гаслом, щоб уникнути здобуття користувацького гасла "троянським конем". Інше призначення цього механізму полягає в тому, щоб запобігти нападів типу man\-іn\-the\-middle, використовуваних для обходу шифрування. Можна використати параметр \fBStrictHostKeyChecking\fR, щоб заборонити вхід у систему з тих машин, чиї ключі не відомі або змінені. 

\fBssh\fR можна налагодити таким чином, щоб вона перевіряла ідентичність хосту за допомогою ресурсу записів відбитків (SSHFP), що видаються DNS. Для цього необхідно встановити параметр \fBVerifyHostKeyDNS\fR, що керуватиме тим як здійснюються запити DNS. Записи відбитків SSHFP можна відтворити за допомогою \fBssh\-keygen\fR(1). 

\fBssh\fR розпізнає наступні ключі: 

.TP
.B \fB\-1\fR
 Вимагає використання тільки протоколу версії 1. 

.TP
.B \fB\-2\fR
 Вимагає використання тільки протоколу версії 2. 

.TP
.B \fB\-4\fR
 Вимагає використання тільки адрес IPv4. 

.TP
.B \fB\-6\fR
 Вимагає використання тільки адрес IPv6. 

.TP
.B \fB\-A\fR
 Вмикає перенаправлення з'єднання агента автентифікації. Це можна також вказати на по\-машинній основі у файлі конфігурації. 

Слід обережно ставитись до вмикання перенаправлення агента. Користувачі з можливістю обійти дозволи на доступ до файлів на віддаленій машині (а саме, до сокету домену Юнікс, що належить агентові), можуть дістатися до локального агента через перенаправлене сполучення. Атакуючий не може отримати дані ключів від агента, однак вони спроможні здійснити операції, пов'язані з ключами, що дозволить їм засвідчитись, використовуючи ідентичності, завантажені агентом. 

.TP
.B \fB\-a\fR
 Вимикає перенаправлення з'єднання агента автентифікації. 

.TP
.B \fB\-b \fR\fIвихідна_адреса\fR
 Використає \fIвихідну_адресу\fR локальної машини, як джерело сполучення. Корисно для систем із кількома адресами. 

.TP
.B \fB\-C\fR
 Вимагає стиснення всіх даних (включаючи stdin, stdout, stderr і дані перенаправлених з'єднань X11 і TCP/IP). Алгоритм ущільнення відповідає тому, що застосовується  в \fBgzip\fR(1), а рівень стиснення можна регулювати параметром \fBCompressionLevel\fR для протоколу 1\-ї версії. Ущільнення даних є бажаним у випадку модемних ліній і інших повільних засобах сполучення, але сповільнить передачу у швидких мережах. Стандартні значення можна встановити на по\-машинній основі у файлі конфігурації; дивіться параметр \fBCompression\fR. 

.TP
.B \fB\-c \fR\fIспецифікація_шифру\fR
 Вибір специфікації шифру для зашифровування сесії. 

Протокол версії 1 дозволяє специфікацію одного шифру. Підтримуваними значеннями являються "3des", "blowfish" і "des". 3des (потрійний des) складається з послідовності зашифровування\-розшифровування\-зашифровування з трьома відмінними ключами. Він вважається безпечним. blowfish \- це швидкий блоковий шифр; він видається дуже надійним і набагато швидший за 3des. Останній, des, підтримується тільки для оберненої сумісності з первинним протоколом 1, що не підтримує 3des. Використання des не рекомендується, через криптографічну слабкість. Стандартним є 3des. 

Для протоколу версії 2, \fIспецифікацію_шифру\fR може бути визначено як, розділений комою, список шифрів у порядку їхнього пріоритету. Підтримуються "3des\-cbc", "aes128\-cbc", "aes192\-cbc", "aes256\-cbc", "aes128\-ctr", "aes192\-ctr", "aes256\-ctr", "arcfour128", "arcfour256", "arcfour", "blowfish\-cbc" і "cast128\-cbc". Стандартний список складається з 

.RS
.nf
        aes128\-cbc,3des\-cbc,blowfish\-cbc,cast128\-cbc,arcfour128,
        arcfour256,arcfour,aes192\-cbc,aes256\-cbc,aes128\-ctr,
        aes192\-ctr,aes256\-ctr

.fi
.RE
.TP
.B \fB\-D \fR\fIпорт\fR
 Вказує локальне "динамічне" перенаправлення порту на рівні додатка. Це працює шляхом виділення сокету для прослуховування порту на локальній машині, і як тільки відбулося під'єднання до цього порту, його перенаправлено через захищений канал, і протокол додатку потім вирішує куди з'єднається віддалена машина. На сьогоднішній день підтримуються протоколи SOCKS4 i SOCKS5, і \fBssh\fR поводитиметься як SOCKS\-сервер. Тільки користувач root може перенаправляти привілейовані порти. Динамічне перенаправлення портів можна також вказати у файлі конфігурації. 

.TP
.B \fB\-e ch\fR|\fB^ch\fR|\fBnone\fR
 Задає керівний символ для сеансів із псевдо\-терміналом (стандартний символ \- '~'). Керівний символ розпізнається тільки на початку рядка. Якщо за ним слідує крапка, ('.'), це завершить з'єднання; наступна control\-Z призупинить з'єднання і два керівних символи підряд передадуть один керівний символ. Ключ \fB\-e\fR з параметром "none" скасовує будь\-які керівні символи і робить сеанс прозорим. 

.TP
.B \fB\-F \fR\fIфайл_конфігурації\fR
 Дозволяє вказати альтернативний файл конфігурації. Якщо конфігураційний файл задано на командному рядкові, системний (\fI/etc/ssh/ssh_config\fR) буде проігноровано. Стандартним конфігураційним файлом користувача, який \fBssh\fR шукатиме, є \fI~/.ssh/config .\fR 

.TP
.B \fB\-f\fR
 Примушує \fBssh\fR перейти у фоновий режим перед самим виконанням команди. Це корисно, якщо \fBssh\fR збирається спитати гасло або вирази\-гасла, але користувач хоче зробити це у фоновому режимі. Це неявно вмикає \fB\-n\fR. Рекомендованим способом запуску програм Х11 на віддаленому комп'ютері є щось на зразок "ssh \-f host xterm". 

.TP
.B \fB\-g\fR
 Дозволяє віддаленим машинам звертатися до локальних перенаправлених портів. 

.TP
.B \fB\-I \fR\fIsmardcard\-пристрій\fR
 Вказує, який smardcard\-пристрій використати. Аргументом є пристрій, який \fBssh\fR використовуватиме для комунікації з карткою smartcard, що зберігає приватний ключ RSA користувача. 

.TP
.B \fB\-i \fR\fIфайл_ідентифікації\fR
 Вказує файл з якого зчитується ідентифікація (приватний ключ) для RSA або DSA автентифікації. Без задання, це \fI~/.ssh/identity\fR для протоколу версії 1, і \fI~/.ssh/id_dsa\fR для протоколу версії 2. Файли ідентифікації також можна зазначити на по\-машинній основі у файлі конфігурації. Можна вказати підряд кілька параметрів \fB\-i\fR (і кілька ідентифікаторів у конфігураційному файлі). 

.TP
.B \fB\-k\fR
 Забороняє перенаправлення (представлення) ідентифікаційної інформації GSSAPI серверу. 

.TP
.B \fB\-L\fR [\fIвихідна_адреса\fR\fB
\fR]\fIпорт\fR\fB:\fR\fIхост\fR\fB:\fR\fIпорт_хосту\fR: Вказує, що заданий порт на локальній (клієнтській) машині який буде перенаправлений до заданої машини і порту на протилежній стороні. Це втілено шляхом призначення сокету для прослуховування порту на локальній машині, можливо прив'язаний до вказаної \fIвихідної_адреси\fR. Кожний раз, як відбувається з'єднання із цим портом, його буде перенаправлено через захищений канал і здійснюється з'єднання до порту \fIпорт_хосту\fR віддаленої машини. Перенаправлення портів можна також вказати у файлі конфігурації. Адреси IPv6 можна вказати за допомогою альтернативного синтаксису 

.RS
.nf
     [<i>вихідна_адреса</i><b>/</b>]<i>порт</i><b>/</b><i>хост</i><b>/</b><i>порт_хосту</i> 

.fi
.RE
або шляхом включення адрес у квадратні дужки. Тільки надкористувач може здійснювати перенаправлення привілейованих портів. Типово, локальний порт прив'язано згідно з налаштуваннями \fBGatewayPorts\fR. Проте, можна явно вказати \fIвихідну_адресу\fR для прикріплення сполучення до певної адреси (інтерфейсу). \fIВихідна_адреса\fR локальної машини зазначає, що прослуховуваний порт є місцевого вжитку, тоді як порожня адреса або '\fB*\fR' вказує, що порт повинен бути досяжним для всіх інтерфейсів. 

.TP
.B \fB\-l \fR\fIреєстраційне_ім'я\fR
 Вказує ім'я користувача для реєстрації з віддаленою системою. Це можна також вказати на по\-машинній основі у файлі конфігурації. 

.TP
.B \fB\-M\fR
 Встановлює \fBssh\fR у "чільний" режим для спільного використання з'єднання. Зверніться до опису \fBControlMaster\fR сторінки \fBssh_config\fR(5) для повного опису. 

.TP
.B \fB\-m \fR\fImac\-ключ\fR
 Додатково, для протоколу версії 2 можна вказати, розділений комою, список алгоритмів MAC (код автентифікації повідомлення) у порядку пріоритету. Для додаткової інформації, шукайте по ключовому слову MAC. 

.TP
.B \fB\-N\fR
 Не виконувати віддаленої команди. Корисна тільки для перенаправлення портів (протокол версії 2). 

.TP
.B \fB\-n\fR
 Читає стандартний ввід з /dev/null (фактично, запобігає читання зі стандартного вводу). Це повинно використовуватися, коли \fBssh\fR виконується у фоновому режимі. Типовий трюк, використовуваний для запуску Х11\-програм на віддаленій машині. Наприклад, команда "ssh \-n shadows.cs.hut.fi emacs &" запустить emacs на shadows.cs.hut.fi, з'єднання X11 будучи автоматично перенаправлено через зашифрований канал. Програму \fBssh\fR буде переведено у фоновий режим. (Це не працює, якщо \fBssh\fR потрібно спитати гасла або виразу\-гасла; також дивіться опцію \fB\-f\fR.) 

.TP
.B \fB\-O \fR\fIкер_команда\fR
 Керує основним ущільнювальним процесом активного сполучення. За допомогою опції \fB\-O\fR, аргумент \fIкер_команда\fR буде інтерпретовано і передано основному процесові. Чинними командами являються "check" (перевіряє, чи активний основний процес) і "exit" (вимога завершення основного процесу). 

.TP
.B \fB\-o \fR\fIопція\fR
 Можна використати для задання опцій у форматі, використовуваному файлом конфігурації. Це корисно для вказівки параметрів, для яких не існує окремої опції командного рядка. Для повного опису параметрів, перелічених нижче, і їхніх можливих значень, дивіться \fBssh_config\fR(5). 

.RS
.nf
        AddressFamily
        BatchMode
        BindAddress
        ChallengeResponseAuthentication
        CheckHostIP
        Cipher
        Ciphers
        ClearAllForwardings
        Compression
        CompressionLevel
        ConnectionAttempts
        ConnectTimeout
        ControlMaster
        ControlPath
        DynamicForward
        EscapeChar
        ForwardAgent
        ForwardX11
        ForwardX11Trusted
        GatewayPorts
        GlobalKnownHostsFile
        GSSAPIAuthentication
        GSSAPIDelegateCredentials
        HashKnownHosts
        Host
        HostbasedAuthentication
        HostKeyAlgorithms
        HostKeyAlias
        HostName
        IdentityFile
        IdentitiesOnly
        KbdInteractiveDevices
        LocalForward
        LogLevel
        MACs
        NoHostAuthenticationForLocalhost
        NumberOfPasswordPrompts
        PasswordAuthentication
        Port
        PreferredAuthentications
        Protocol
        ProxyCommand
        PubkeyAuthentication
        RemoteForward
        RhostsRSAAuthentication
        RSAAuthentication
        SendEnv
        ServerAliveInterval
        ServerAliveCountMax
        SmartcardDevice
        StrictHostKeyChecking
        TCPKeepAlive
        UsePrivilegedPort
        User
        UserKnownHostsFile
        VerifyHostKeyDNS
        XAuthLocation

.fi
.RE
.TP
.B \fB\-p \fR\fIпорт\fR
 Порт сполучення з віддаленим хостом. Це можна вказати окремо для кожної машини у файлі конфігурації. 

.TP
.B \fB\-q\fR
 Тихий режим. Пригнічує всі попереджувальні і діагностичні повідомлення. 

.TP
.B \fB\-R\fR [\fIвихідна_адреса\fR\fB
\fR]\fIпорт\fR\fB:\fR\fIхост\fR\fB:\fR\fIпорт_хосту\fR: Вказує щоб порт на віддаленій (серверній) машині був перенаправлений до заданого хосту і локального порту. Це втілено шляхом призначення сокету, що прослуховуватиме порт на віддаленій машині і як тільки відбулося під'єднання до цього порту, це сполучення перенаправляється через захищений канал,  з'єднуючись до \fIхосту\fR i \fIпорту_хосту\fR локальної машини. 

Перенаправлення портів можна так само вказати у файлі конфігурації. Тільки надкористувач може здійснювати перенаправлення привілейованих портів. Адреси IPv6 позначаються альтернативним синтаксисом: 

.RS
.nf
     [<i>вихідна_адреса</i><b>/</b>]<i>порт</i><b>/</b><i>хост</i><b>/</b><i>порт_хосту</i> 

.fi
.RE
Без задання, слухаючий сокет на сервері буде прив'язаний до оберненого на себе інтерфейсу. Це можна змінити, якщо вказати \fIвихідну_адресу\fR. Порожнє значення \fIвихідної_адреси\fR, або '\fB*\fR', вказують віддаленому сокетові слухати на всіх інтерфейсах. Вказування віддаленої \fIвихідної_адреси\fR матиме успіх тільки якщо на сервері увімкнено опцію \fBGatewayPorts\fR (дивіться \fBsshd_config\fR(5)). 

.TP
.B \fB\-S \fR\fIкер_сокет\fR
 Вказує шлях до керівного сокету для спільного використання з'єднання. Зверніться до опису ControlPath і ControlMaster у \fBssh_config\fR(5). 

.TP
.B \fB\-s\fR
 Можна використати для виклику підсистеми на віддаленому хості. Підсистеми \- це риса протоколу SSH2, яка полегшує застосування SSH як захищений засіб передачі для інших додатків (наприклад \fBsftp\fR(1)). Підсистема вказується як віддалена команда. 

.TP
.B \fB\-T\fR
 Скасовує надання псевдо\-терміналу. .T \-t Наполягає на наданні псевдо\-терміналу. Це можна використати для виконання різноманітних, пов'язаних з екраном, програм на віддаленому сервері, що може виявитись корисним при втіленні сервісів меню. Багатократні опції \fB\-t\fR змушують призначення терміналу, навіть якщо \fBssh\fR не має локального. 

.TP
.B \fB\-V\fR
 Виведе інформацію про версію програми і завершить роботу. 

.TP
.B \fB\-v\fR
 Багатослівний режим. Спричинить вивід \fBssh\fR повідомлень відлагодження про власний прогрес. Це корисно для зневадження сполучень, автентифікації і конфігурації. Багатократні опції \fB\-v\fR (максимум 3) збільшують докладність повідомлень. 

.TP
.B \fB\-X\fR
 Вмикає перенаправлення X11. Це можна також вказати для окремого хосту у файлі конфігурації. 

Слід обережно ставитися до перенаправлення X11. Користувачі з можливістю обійти дозволи на доступ до файлів на віддаленій машині (а саме доступ до авторизаційної бази даних X11) можуть дістатися до локального дисплею X11 через перенаправлене сполучення. Атакуючий потім може здійснити такі речі як моніторинг натиснення клавіш. 

З цієї причини, перенаправлення X11 являється частиною обмежень розширення SECURITY X11. Зверніться до опції \fB\-Y\fR та директиви \fBForwardX11Trusted\fR (дивіться \fBssh_config\fR(5)) для додаткової інформації. 

.TP
.B \fB\-x\fR
 Забороняє перенаправлення X11. 

.TP
.B \fB\-Y\fR
 Дозволяє перенаправлення X11 тільки довіреним хостам. 

.SH "Файли конфігурації"
.PP
\fBssh\fR може додатково бути конфігуровано у файлах конфігурації окремих користувачів і системному файлі. Їхній формат і опції конфігурації описано в \fBssh_config\fR(5). 

.SH "Середовище"
.PP
\fBssh\fR, як правило, встановить наступні змінні середовища: \fBDISPLAY\fR Змінна \fBDISPLAY\fR вказує на місцезнаходження серверу X11. Воно автоматично встановлюється \fBssh\fR, вказуючи на значення, що має форму \fIхост\fR\fB:\fR\fIN\fR, де \fIхост\fR вказує на машину з оболонкою, а \fIN\fR \- це ціле >= 1. \fBssh\fR використовує це спеціальне значення для перенаправлення сполучень X11 через захищений канал. Користувач, за звичайних обставин, не повинен явно вказувати \fBDISPLAY\fR, оскільки це призведе до занепаду захищеності сполучення X11 (і вимагатиме ручного копіювання авторизаційних ріп'яшків). 

.TP
.B \fBHOME\fR
 Шлях до домашнього каталогу користувача. 

.TP
.B \fBLOGNAME\fR
 Синонім для \fBUSER\fR; ім'я користувача (для сумісності з тими системами, що використовують цю змінну). 

.TP
.B \fBMAIL\fR
 Шлях до поштової скриньки користувача. 

.TP
.B \fBPATH\fR
 Стандартні шляхи до виконуваних файлів, як було встановлено під час компіляції \fBssh\fR. 

.TP
.B \fBSSH_ASKPASS\fR
 Якщо \fBssh\fR потрібно вираз\-гасло, вона прочитає його з поточного терміналу, якщо \fBssh\fR запущено з терміналу. Якщо ж немає відповідного терміналу, але встановлено \fBDISPLAY\fR і \fBSSH_ASKPASS\fR, вона виконає програму, вказану \fBSSH_ASKPASS\fR щоб відкрити вікно X11 для прочитання виразу\-гасла. Це особливо корисно під час виклику \fBssh\fR з \fI.xsession\fR або подібного скрипту. (Зауважте, що на деяких машинах необхідно перенаправити \fI/dev/null\fR до стандартного вводу, щоб це працювало.) 

.TP
.B \fBSSH_AUTH_SOCK\fR
 Визначає шлях до сокету домену Юнікс для комунікації з агентом. 

.TP
.B \fBSSH_CONNECTION\fR
 Визначає клієнтський і серверний бік з'єднання. Ця змінна включає чотири, розділених комою значення: IP\-адреса клієнта, номер порту клієнта, IP\-адреса серверу і порт серверу. 

.TP
.B \fBSSH_ORIGINAL_COMMAND\fR
 Містить назву початкової команди, у випадку, якщо виконано примусову команду. Можна використати для здобуття оригінальних аргументів. 

.TP
.B \fBSSH_TTY\fR
 Встановлюється до назви терміналу (шляху до пристрою), пов'язаного з поточною командою або оболонкою. Якщо поточний сеанс не має терміналу, ця змінна не встановлюється. 

.TP
.B \fBTZ\fR
 Змінна часового поясу, якщо часовий пояс було встановлено під час запуску демону (тобто, демон передає це значення новим сполученням). 

.TP
.B \fBUSER\fR
 Ім'я користувача, що зареєструвався. 

На додаток, \fBssh\fR прочитає \fI~/.ssh/environment\fR і додасть рядки у форматі "ЗМІННА=значення" до середовища, якщо цей файл існує і користувачеві дозволяється змінити середовище. Для додаткової інформації, прочитайте про параметр \fBPermitUserEnvironment\fR у \fBsshd_config\fR(5). 

.SH "Файли"
.PP

.TP
.B \fI~/.ssh/known_hosts\fR
 Файл, в який здійснюється запис ключів усіх хостів, до яких підключився користувач, і які не внесені в \fI/etc/ssh/ssh_known_hosts\fR. Дивіться \fBsshd\fR(8). 

.TP
.B \fI~/.ssh/identity\fR, \fI~/.ssh/id_dsa\fR, \fI~/.ssh/id_rsa\fR
 Містять автентифікаційні дані користувача (приватний ключ). Ці файли відповідають, перший \- RSA протоколу 1, другий \- DSA протоколу 2, і третій \- RSA протоколу 2. Файли включають чутливу інформацію і повинні містити дозвіл на читання для користувача, але недосяжні для решти (жодного з дозволів на читання/запис/виконання). Зверніть увагу, що \fBssh\fR ігнорує файл приватних ключів, якщо до нього мають доступ інші, окрім користувача. Існує можливість вказати вираз\-гасло під час ґенерації ключа; вираз\-гасло використовуватиметься для зашифровування чутливої частини цього файлу, за допомогою 3DES. 

.TP
.B \fI~/.ssh/identity.pub\fR, \fI~/.ssh/id_dsa.pub\fR, \fI~/.ssh/id_rsa.pub\fR
 Містить публічний ключ для автентифікації (в людиночитаємій формі). Зміст файлу \fI~/.ssh/identity.pub\fR потрібно додати до \fI~/.ssh/authorized_keys\fR на всіх машинах, на яких користувач бажає зареєструватися, використовуючи RSA\-автентифікацію протоколу 1. Зміст \fI~/.ssh/id_dsa.pub\fR і \fI~/.ssh/id_rsa.pub\fR \- до \fI~/.ssh/authorized_keys\fR на всіх машинах, що використовують DSA або RSA\-автентифікацію протоколу 2\-ї версії. Ці файли не містять небезпечної інформації і можуть (не обов'язково) включати дозвіл на читання будь\-ким. Ці файли не використовуються автоматично не являються обов'язковими; їх надано тільки для зручності користувача. 

.TP
.B \fI~/.ssh/config\fR
 Це власний файл конфігурації кожного користувача. Формат і опції описано в \fBssh_config\fR(5). Через можливість зловживань, цей файл повинен включати суворий набір дозволів: на читання/запис користувачем і жодного для решти. 

.TP
.B \fI~/.ssh/authorized_keys\fR
 Перелік публічних ключів (RSA/DSA), які можуть використовуватись, якщо реєструватися як цей користувач. Формат цього файлу описано в \fBsshd\fR(8). У найпростішій його формі, формат збігається з тим, що використовується в ідентифікаційних файлах *.pub. Цей файл не надто чутливий, але рекомендованими дозволами є на читання/запис користувачем і жодного для решти. 

.TP
.B \fI/etc/ssh/ssh_known_hosts\fR
 Список відомих ключів хостів для використання цілою системою. Цей файл повинен скласти системний адміністратор так, щоби він включав публічні ключі всіх машин організації. Цей файл повинен бути читаємим усіма. Файл повинен містити публічні ключі, по одному на кожний рядок, у наступному форматі (поля розділяються пробілами): назва системи, публічний ключ і необов'язковий коментар. Якщо якась машина має декілька назв, потрібно вказати всі назви, розділяючи їх комою. Формат описано в \fBsshd\fR(8). 

\fBsshd\fR(8) використовує стандартну назву системи (так як її повертає іменний сервер) для перевірки хосту клієнта під час реєстрації; решта назв необхідні, оскільки \fBssh\fR не перетворює вказане користувачем назву на стандартну перед перевіркою ключа, оскільки хтось із доступом до іменних серверів зміг би обійти автентифікацію хосту. 

.TP
.B \fI/etc/ssh/ssh_config\fR
 Системний файл конфігурації. Формат і опції описано в \fBssh_config\fR(5). 

.TP
.B \fI/etc/ssh/ssh_host_key\fR, \fI/etc/ssh/ssh_host_dsa_key\fR, \fI/etc/ssh/ssh_host_rsa_key\fR
 Ці три файли містять приватні частини хостових ключів і використовуються для (як значення параметрів) \fBRhostsRSAAuthentication\fR і \fBHostbasedAuthentication\fR. Якщо застосовується \fBRhostsRSAAuthentication\fR з протоколом версії 1, \fBssh\fR необхідно встановити чинний користувацький ID (suid) до root, оскільки ключ хосту може прочитати тільки root. Для протоколу 2, \fBssh\fR користується \fBssh\-keysign (8)\fR для доступу до ключа хосту для \fBHostbasedAuthentication\fR. Це усуває необхідність встановлення чинного ID (suid) до root, коли використовується це метода автентифікації. 

.TP
.B \fI~/.rhosts\fR
 Цей файл використовується у автентифікаціях \fBRhostsRSAAuthentication\fR і \fBHostbasedAuthentication\fR для переліку пар хост/користувач, яким дозволено реєструватися з системою. (Зауважте, що цей файл також використовується \fBrlogin\fR(1) і \fBrsh\fR(1), що робить небезпечним використання цього файлу.) Кожний рядок \fI~/.rhosts\fR містить назву машини (стандартної форми, тієї, що повертається іменними серверами) і назву користувача цієї машини, розділені пробілом. Деякі машини вимагають загального дозволу на читання цього файлу, якщо домашній каталог користувача розміщено на одному з розділів NFS, оскільки \fBsshd\fR(8) читає його як root. Додатково, цей файл повинен належати користувачу і не включати дозволу на запис для решти. Рекомендованим набором дозволів для більшості машин є на читання/запис для користувача і жодного для решти. 

Майте на увазі, що \fBsshd\fR(8) дозволяє автентифікацію тільки в поєднанні з автентифікацією за хостовим ключем, до того, як дозволити користувачеві реєструватися. Якщо серверна машина не має клієнтського хостового ключа в \fI/etc/ssh/ssh_known_hosts\fR, його можна зберегти в \fI~/.ssh/known_hosts .\fR Найлегшим способом здійснити це, це з'єднатися з клієнтською машиною з серверу за допомогою \fBssh\fR; це автоматично додасть хостовий ключ до \fI~/.ssh/known_hosts\fR. 

.TP
.B \fI~/.shosts\fR
 Файл, аналогічний \fI.rhosts\fR. Його мета полягає в тому, щоб дозволити автентифікації \fBRhostsRSAAuthentication\fR і \fBHostbasedAuthentication\fR без можливості сполучення за допомогою \fBrlogin\fR(1) або \fBrsh\fR(1). 

.TP
.B \fI/etc/hosts.equiv\fR
 Цей файл використовується під час автентифікацій \fBRhostsRSAAuthentication\fR і \fBHostbasedAuthentication\fR. Він містить стандартні назви хостів, по одній на кожний рядок (повний формат описано в сторінці \fBsshd\fR(8)). Якщо клієнтська машина знаходиться в цьому файлі, автоматично буде дозволено реєстрацію, за умови, що ім'я користувача збігається на клієнті і сервері. Додатково, вимагається вдала автентифікація ключа машини. Цей файл повинен включати дозвіл на запис root\-користувачем. 

.TP
.B \fI/etc/ssh/shosts.equiv\fR
 Цей файл обробляється точно так само як \fI/etc/hosts.equiv\fR. Він дозволяє реєстрацію за допомогою \fBssh\fR, але не \fBrsh\fR(1) або \fBrlogin\fR(1). 

.TP
.B \fI/etc/ssh/sshrc\fR
 Команди з цього файлу буде виконано \fBssh\fR під час реєстрації користувача, перед тим як йому надано оболонку (або перед виконанням команди). Дивіться сторінку \fBsshd\fR(8) для додаткової інформації. 

.TP
.B \fI~/.ssh/rc\fR
 Команди з цього файлу буде виконано \fBssh\fR під час реєстрації користувача, перед тим як йому надано оболонку (або перед виконанням команди). Дивіться сторінку \fBsshd\fR(8) для додаткової інформації. 

.TP
.B \fI~/.ssh/environment\fR
 Містить означення змінних середовища, дивіться розділ \fBСЕРЕДОВИЩЕ\fR вище. 

.SH "Діагностика"
.PP
Код виходу \fBssh\fR дорівнює статусу (останньої) віддаленої команди, або 255, якщо мала місце помилка. 

.SH "Дивіться також"
.PP
\fBgzip\fR(1), 
\fBrsh\fR(1), 
\fBscp\fR(1), 
\fBsftp\fR(1), 
\fBssh\-add\fR(1), 
\fBssh\-agent\fR(1), 
\fBssh\-keygen\fR(1), 
\fBtelnet\fR(1), \fBhosts.equiv\fR(5), \fBssh_config\fR(5), 
\fBssh\-keysign\fR(8), 
\fBsshd\fR(8) 

T. Ylonen, T. Kivinen, M. Saarinen, T. Rinne, and S. Lehtinen, SSH Protocol Architecture, draft\-ietf\-secsh\-architecture\-12.txt, Січень 2002 року. (Цей матеріал постійно змінюється.)

.SH "Автори"
.PP
OpenSSH \- це похідна від початкового вільного релізу \fBssh\fR 1.2.12, автор \- Tatu Ylonen. Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo de Raadt і Dug Song усунули багато вад, додали нові риси і створили OpenSSH у сучасному його вигляді. Markus Friedl додав підтримку SSH протоколу 1.5 і 2.0.      

