." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "grep" "1" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

.SH "НАЗВА"
.PP

grep, egrep, fgrep \- вивід рядків узгоджених із зразком

.SH "СИНОПСИС"
.PP

\fBgrep [\fR \fIопції\fR \fB]\fR \fIЗРАЗОК\fR \fI[\fR \fIFILE\fR \fB...]\fR
.br

\fBgrep [\fR \fIопції\fR \fB] [ \-e\fR \fIЗРАЗОК\fR \fB| \-f\fR \fIФАЙЛ\fR \fB] [\fR \fIФАЙЛ\fR \fB...]\fR

.SH "ОПИС"
.PP

\fBGrep\fR шукає у вказаному вводі \fIФАЙЛ\fR(\fIИ\fR) (чи в звичному вводі, якщо не вказано файли, чи вказана назва файлу \- ) рядки, що містять збіг із наданим зразком \fIЗРАЗОК\fR . За замовчуванням, \fBgrep\fR друкує відповідні рядки.

Додатково, є два варіанти програм: \fBegrep\fR та \fBfgrep\fR . \fBEgrep\fR \- це те саме, що \fBgrep \-E\fR . \fBFgrep\fR \- це те саме, що \fBgrep \-F\fR.

.SH "ОПЦІЇ"
.PP

.TP
.B \-A \fIЧИСЛО\fR, \-\-after\-context=\fIЧИСЛО\fR
Вивести \fIЧИСЛО\fR рядків наступного контексту після відповідних рядків. Рядок складений з символів \-\- розмежує суміжні групи збігу. 

.TP
.B \-a , \-\-text
Обробляти двійковий файл, наче він текстовий; це тотожно опції \fB\-\-binary\-files=text\fR. 

.TP
.B \-B \fIЧИСЛО\fR, \-\-before\-context=\fIЧИСЛО\fR
Вивести \fIЧИСЛО\fR рядків попереднього контексту перед відповідними рядками. Рядок складений з символів \fI\-\-\fR розмежує суміжні групи збігу. 

.TP
.B \-C \fIЧИСЛО\fR, \-\-context=\fIЧИСЛО\fR
 Вивести \fIЧИСЛО\fR рядків контексту. Рядок складений з символів \fB\-\-\fR розмежує суміжні групи збігу. 

.TP
.B \-b, \-\-byte\-offset
Ставить перед кожним рядком номер блоку, в якому він був знайдений. Це може знадобитись при пошуку блоків за контекстом (блоки нумеруються з 0). 

.TP
.B \-\-binary\-files=\fIТИП\fR
Якщо перші декілька байтів файлу вказують що він утримує двійкові дані, припустити що файл буде \fIТИП\fR типу. За замовчуванням \fIТИП\fR вважається \fBbinary\fR (двійковим) і \fBgrep\fR виводить рядок повідомлення про співпадання ("binary file matches"), або жодних повідомлень у випадку неузгодження з зразком. Якщо вказати \fIТИП\fR як \fBwithout\-match\fR, \fBgrep\fR вважатиме що жодний двійковий файл не співпадає, це рівносильне \fB\-I\fR опції. Якщо \fIТИП\fR буде \fBtext\fR, \fBgrep\fR обробляє двійкові файли так ніби вони були звичайними текстовими, це рівносильне \fB\-a\fR опції. Попередження: \fB\-\-binary\-files=text\fR може також вивести двійкове сміття, що іноді матиме небажаний ефект якщо виводом служить термінал, чий двигун може сприйняти цей вивід за команди. 

.TP
.B \-\-colour[=\fIКОЛИ\fR], \-\-color[=\fIКОЛИ\fR]
Оточує рядок що співпав з зразком кольором, вказаним у змінній середовища \fBGREP_COLOR\fR. \fIКОЛИ\fR може бути `never' (ніколи), `always' (завжди) або `auto' (автоматично). 

.TP
.B \-c, \-\-count
Пригнічує звичайний вивід, натомість виводить число яке дорівнює кількості рядків що співпала у кожному файлі вводу. З \fB\-v\fR, \fB\-\-invert\-match\fR опцією (дивіться нижче) виводить число рядків що не співпала. 

.TP
.B \-D \fIДІЯ\fR, \-\-device=\fIДІЯ\fR
Якщо файл вводу є пристроєм, FIFO або сокетом, використає \fIДІЮ\fR щоб обробити ввід. За замовчуванням дією є \fBread\fR, що означає що пристрої будуть прочитані так, ніби вони є звичайними файлами. Якщо значенням \fIДІЇ\fR буде \fBskip\fR, пристрої на братимуться до уваги. 

.TP
.B \-d \fIДІЯ\fR, \-\-directories=\fIДІЯ\fR
Якщо файл вводу є каталогом, використає \fIДІЮ\fR щоб обробити його. За замовчуванням \fIДІЄЮ\fR є \fBread\fR, що означає що каталоги читаються так, ніби вони є звичайним файлами. Якщо значенням \fIДІЇ\fR буде \fBskip\fR, каталоги не братимуться до уваги. Якщо ж \fIДІЄЮ\fR буде \fBrecurse\fR, \fBgrep\fR прочитає кожний файл у кожному каталозі рекурсивно, це рівнозначно \fB\-r\fR опції. 

.TP
.B \-E, \-\-extended\-regexp
Розглядає \fIЗРАЗОК\fR як розширений регулярний вираз (дивіться нижче). 

.TP
.B \-e \fIЗРАЗОК\fR, \-\-regexp=\fIЗРАЗОК\fR
Використає \fIЗРАЗОК\fR як зразок. Зручно для використання зразків що починаються з \fB\-\fR (риски). 

.TP
.B \-F, \-\-fixed\-strings
Розгляне \fIЗРАЗОК\fR як список фіксованих рядків, розділених новою лінією; співпадання може відбутися з любим з них. 

.TP
.B \-P, \-\-perl\-regexp
Розгляне \fIЗРАЗОК\fR як Perl регулярний вираз. 

.TP
.B \-f \fIФАЙЛ\fR, \-\-file=\fIФАЙЛ\fR
Вкаже файл у якому знаходяться \fIЗРАЗКИ\fR, один на кожний рядок. Порожній файл утримує нуль зразків і тому не не співпадає з нічим. 

.TP
.B \-G, \-\-basic\-regexp
Розгляне \fIЗРАЗОК\fR як базовий регулярний вираз (дивіться нижче). Це є стандартним поводженням. 

.TP
.B \-H, \-\-with\-filename
Виведе назву файлу рядом з кожним рядком співпадання. 

.TP
.B \-h, \-\-no\-filename
Запобігає показу назви файлу рядом з кожним рядком що співпав. Використовується при пошуку по декільком файлам. 

.TP
.B \-\-help
Виводить коротке повідомлення з допомогою. 

.TP
.B \-I
Розглядатиме двійкові файли так, ніби вони не містять жодних співпадань; опція рівнозначна \fB\-\-binary\-files=without\-match\fR. 

.TP
.B \-i, \-\-ignore\-case
Ігнорує регістр символів при порівняннях. 

.TP
.B \-L, \-\-files\-without\-match
Пригнічує звичайний вивід, виводить тільки назви файлів де не відбулося співпадань. Пошук всередині файлів припиняється після першого ж співпадання. 

.TP
.B \-l, \-\-files\-with\-matches
Пригнічує звичайний вивід, видає тільки назви файлів, що містять збіги. Пошук всередині файлів припиняється після першого ж співпадання. 

.TP
.B \-m \fIЧИСЛО\fR, \-\-max\-count=\fIЧИСЛО\fR
 Припиняє пошук всередині файла після вказаного \fIЧИСЛА\fR рядків із співпаданнями. Якщо ввід відбувається з звичайного файла, \fBgrep\fR зупинить пошук одразу ж на наступному рядку після останнього рядка що співпав і припинить роботу. Останнє дозволяє виклик процесу для відновлення пошуку з місця зупинки.
.br

Коли додатково вживається \fB\-c\fR або \fB\-\-coun\fRt опція, \fBgrep\fR не виведе цифру більше за ЧИСЛО аргумент. Коли додатково вживається \fB\-v\fR або \fB\-\-invert\-match\fR опція, \fBgrep\fR припинить вивід після \fIЧИСЛА\fR рядків що не співпали. 

.TP
.B \-\-mmap
Якщо можливо, використає \fBmmap\fR(2) системний виклик для зчитування вводу, замість \fBread\fR(2) за замовчуванням. В деяких випадках, \fB\-\-mmap\fR призводить до кращих результатів. Тим не менш, \fB\-\-mmap\fR може викликати довільне поводження (включаючи дамп оперативної пам'яті) якщо файл вводу зменшився розміром під час дії \fBgrep\fR, або якщо виникла помилка вводу/виводу. 

.TP
.B \-n, \-\-line\-number
Виводить перед кожним рядком його номер у файлі (рядки нумеруються з 1). 

.TP
.B \-o, \-\-only\-matching
Покаже лише ту частину рядка що співпала із \fIЗРАЗКОМ\fR. (Зручно для тестування зразків.) 

.TP
.B \-\-label=\fIНАЗВА\fR
Вказує ніби ввід надходить з файла з назвою \fIНАЗВА\fR. Ця опція корисна у поєднанні з знаряддям на кшталт \fBzgrep\fR, тобто \fBgzip \-cd foo.gz | grep \-label=\fR\fIfoo\fR  \fIЗРАЗОК\fR. 

.TP
.B \-\-line\-buffering
Використає буферування рядків, може сказатися на ефективності. 

.TP
.B \-q, \-\-quiet, \-\-silent
Мовчазний вивід. Не виводитиме нічого на стандартний пристрій виводу. Зупиниться одразу, із нульовим статусом виходу (успіх), як тільки буде знайдене співпадання, навіть якщо виявиться якась помилка. Також дивіться \fB\-s\fR і \fB\-\-no\-message\fR опції. 

.TP
.B \-R, \-r, \-\-recursive
Прочитає кожний файл у кожному підкаталозі рекурсивно. Рівнозначна \fB\-d recurse\fR опції. 

.TP
.B \-\-include=\fIЗРАЗОК\fR
Рекурсивно шукатиме тільки у каталогах, назва яких співпадає із \fIЗРАЗКОМ\fR. 

.TP
.B \-\-exclude=\fIЗРАЗОК\fR
Рекурсивно шукатиме у всіх каталогах, окрім тих чия назва співпадає із \fIЗРАЗКОМ\fR. 

.TP
.B \-s, \-\-no\-messages
Пригнічує повідомлення про помилки про неіснуючі файли або файли, недоступні для прочитання. Примітка щодо переносності: на відміну від \fBgrep\fR GNU, традиційна \fBgrep\fR не узгоджувалась з POSIX.2 у тому що в останній була відсутня опція \fB\-q\fR і її опція \fB\-s\fR, натомість, поводилась як \fB\-s\fR GNU. Оболонкові скрипти які бажають бути сумісними з традиційною \fBgrep\fR, повинні уникати обидвох опцій, \fB\-q\fR і \fB\-s\fR, натомість переправляючи вивід до /dev/null. 

.TP
.B \-U, \-\-binary
Розглядатиме файл(и) як двійкові. За замовчуванням, у MS\-DOS та MS\-Windows системах, grep вгадує тип файлу прочитавши його перші 32 кілобайти. Якщо grep вирішить що це текстовий файл, вона видалить CR знаки з оригінального файлу (щоб забезпечити функціонування \fB^\fR та \fB$\fR). Вказування \fB\-U\fR відміняє це вгадування, зумовлюючи прочитання всіх файлів і буквальну передачу їх механізму порівнювання; якщо це був текстовий файл із CR/LF парою наприкінці кожного рядка, це може призвести до неспівпадання з деякими зразками. Ця опція не має жодного впливу на відмінних від MS\-DOS/MS\-Windows платформах. 

.TP
.B \-u, \-\-unix\-byte\-offsets
Звітувати розположення байтів типу Юнікс. Цей ключ змушує grep сприймати розположення байтів у файлі так ніби це був звичайний текстовий файл Юнікса, тобто із видаленими CR знаками. Це призведе до результатів ідентичних із запуском grep на Юнікс машинах. Ця опція не працює лише у поєднанні з \fB\-b\fR ключем і не має жодного впливу на відмінних від MS\-DOS/MS\-Windows платформах. 

.TP
.B \-V, \-\-version
Виведе номер версії програми grep у вигляді стандартної помилки. Номер версії програми повинен включатися у всі повідомлення про вади (дивіться нижче). 

.TP
.B \-v, \-\-invert\-match
Міняє зміст співпадань. Виводить усі рядки, за винятком тих, що містять співпадання. 

.TP
.B \-w, \-\-word\-regexp
Серед порівнювань із зразком вибирає лише ті що цілком співпадають і утворюють цілі "слова". Під цілковитим співпаданням мається на увазі що послідовність знаків тексту що співпала один до одного із зразком повинна обмежуватись з обох сторін знаками що не відносяться до "слова"; це може бути початок або кінець рядка, або любий знак крім літер, чисел і твердого пробілу (останні regex розглядатиме як такі що утворюють "слово"). 

.TP
.B \-x, \-\-line\-regexp
Вибере лише співпадання із цілим рядком. 

.TP
.B \-y
Застарілий синонім для \fB\-i\fR. 

.TP
.B \-Z, \-\-null
 Виведе нульовий байт (NULL знак ASCII) замість знака що звичайно слідує за назвою файла. Так, наприклад, \fBgrep \-lZ\fR помістить нульовий байт після кожного імені файла замість стандартної нової лінії. Ця опція забезпечує однозначний вивід, навіть у випадку назв файлів що містять незвичні знаки, такі як знак нового рядка. Ця опція може використовуватись разом з такими командами як \fBfind \-print\fR, \fBperl \-0\fR, \fBsort \-z\fR і \fBxargs\fR для обробки довільних назв файлів. 

.TP
.B \-z, \-\-null\-data
Розгляне ввід ак набір рядків, кожен з яких буде закінчуватись нульовим байтом (NULL знак ASCII) замість знака нового рядка. Так само як і \fB\-Z\fR або \fB\-\-null\fR опції, може бути використаною з командами на зразок \fBsort \-z\fR для обробки довільних назв файлів. 

.SH "РЕГУЛЯРНІ ВИРАЗИ"
.PP

Регулярний вираз \- це зразок що описує набір текстових ланцюжків. Побудова регулярних виразів дещо схожа на побудову арифметичних виразів у тому що використовуються різноманітні оператори для комбінації менших виразів.

Grep розуміє три, дещо відмінні, версії синтаксису регулярних виразів, а саме: "basic", "extended" і "perl" (базовий, розширений і perl). У \fBgrep\fR GNU немає різниці у функціональності при використанні перших двох версій. У інших втіленнях, базові регулярні вирази \- менш потужні. Наступне описує розширені регулярні вирази, відмінності від базових вказані в кінці. Perl регулярні вирази надають додаткову функціональність. Це нова риса програми \fBgrep\fR, не скрізь підтримувана. Ми не будемо озглядати цю версію тут, натомість зверніться до \fBperlrequick(\fR(1) або \fBperlre\fR(1).

Основною складовою частиною є регулярні вирази що співпадають з одним знаком. Більшість знаків, включаючи всі літери і цифри утворять регулярний вираз що співпадатиме з тим самим знаком. Любий знак із спеціальним значенням може бути екрановано за допомогою попереднього оберненого слешу.

Вирази в квадратних дужках (\fB[\fR і \fB]\fR) співпадатимуть із одним із знаків перелічених всередині дужок, за винятком коли першим знаком є шапочка (\fB^\fR), у такому разі цей вираз, навпаки, співпадатиме із любим знаком окрім перечислених у списку. Так, наприклад, вираз \fB[01234]\fR співпаде з однією з цих цифр, тоді як \fB[^24]\fR \- з любим знаком крім 2 і 4.

Всередині виразів у квадратних дужках можуть також знаходитись вирази діапазону знаків. Діапазон знаків складатиметься з двох знаків із рискою поміж ними. Діапазон співпадатиме із любим знаком що знаходиться між двома вказаними, включаючи самі вказівники. Пошук можливих співпадань здійснюється завдяки сортуванню, відповідно до впорядкованості і набору знаків локалі. Так, наприклад, у стандартній C локалі, \fB[a\-d]\fR рівнозначне \fB[abcd]\fR. Деякі локалі сортують у словниковій послідовності, в такому випадку \fB[a\-d]\fR може означати \fB[aBbCcDd]\fR, натомість. Щоб отримати традиційну інтерпретацію виразів у квадратних дужках, можете спробувати надати змінній середовища \fBLC_ALL\fR значення C (дивіться ЗМІННІ СЕРЕДОВИЩА нижче).

Накінець, певні класи знаків об'єднані і можуть вказуватись як одна назва всередині квадратних дужок. Їхні назви підказують що саме вони означають:

.SS "[:alnum:]"
.PP
(\fIalphanumeric\fR), літери і цифри, рівнозначне \fB[0\-9A\-Za\-z]\fR

.SS "[:alpha:]"
.PP
(\fIalphabet\fR), лише літери, рівнозначне \fB[A\-Za\-z]\fR.

.SS "[:cntrl:]"
.PP
(\fIcontrol characters\fR), керувальні знаки.

.SS "[:digit:]"
.PP
(\fInumeric digit\fR), числа, рівнозначне \fB[0\-9]\fR.

.SS "[:graph:]"
.PP
(\fIgraphical\fR), усі знаки що можна "надрукувати" (виключає пробіли).

.SS "[:lower:]"
.PP
(\fIlowercase\fR), літери нижнього регістру, рівнозначне \fB[a\-z]\fR.

.SS "[:print:]"
.PP
(\fIprintable\fR), усі знаки що можна "надрукувати" (виключає пробіли), аналогічний до \fBgraph\fR.

.SS "[:punct:]"
.PP
(\fIpunctuation\fR), знаки пунктуації.

.SS "[:space:]"
.PP
(\fIwhitespace\fR), пробіли, включаючи знак нового рядка.

.SS "[:upper:]"
.PP
(\fIuppercase letters\fR), літери верхнього регістру.

.SS "[:xdigit:]"
.PP
(\fIhexadecimal digit\fR), шістнадцяткові числа.

Класи знаків відрізняються від діапазонів тим що класи не залежать від C локалі і ASCII кодування знаків. (Зауважте що квадратні дужки у класах знаків являються частиною назв класів і повинні бути включені на додачу до квадратних дужок що оточують список у квадратних дужках. Тобто, щоб отримати список, нам необхідно використати дві пари квадратних дужок, наприклад, \fB[[:alpha:]]\fR.)

Більшість метазнаків (спеціальних знаків) втрачають своє особливе значення всередині списку у квадратних дужках. Щоб включити у список буквальний знак \fB]\fR, помістіть його першим у списку, буквальний \fB^\fR \- де завгодно, крім першим, буквальну \- (риску) \- помістіть її останньою в списку.

Крапка \fB.\fR співпадає з будь\-яким одним знаком. Символ \fB\ew\fR є синонімом для \fB[[:allnum:]]\fR, тоді як \fB\eW\fR для \fB[^[:alnum:]]\fR.

Шапочка \fB^\fR і знак долару \fB$\fR, це метазнаки що співпадають відповідно з початком і кінцем рядка. Символи \fB\e<\fR й \fB\e>\fR вказують на початок і кінець слова. Символ \fB\eb\fR співпадає з порожнім місцем на початку і кінці слова, тоді як \fB\eB\fR \- з порожнім місцем що не межує з словом.

За регулярними виразами можуть стояти кількісні оператори. Як вказує назва, останні вказують на можливу кількість повторень виразу:

.SS "?"
.PP
Попередній вираз є необов'язковим і може повторитись лише один раз.
.SS 
.SS "*"
.PP
Попередній вираз може повторитись нуль або більшу кількість разів.

.SS "+"
.PP
Попередній вираз повинен повторитись принаймні один раз і до нескінченості.

.SS "{"\fIn\fR"}"
.PP
	Попередній вираз повинен повторитись точно \fIn\fR разів.

.SS "{"\fIn\fR",}"
.PP
Попередній вираз повинен повторитись \fIn\fR або більше разів.

.SS "{"\fIn\fR","\fIm\fR"}"
.PP
Попередній вираз повинен повторитись щонайменше \fIn\fR разів, але не більше \fIm\fR раз.

Два або більше регулярних вирази можна об'єднати, регулярний вираз який отримаємо в результаті співпадатиме з ланцюжком що утворився з частин ланцюжків що співпадають з частинами регулярного виразу.

Два або більше регулярних вирази можуть бути об'єднаними інфіксним оператором \fB|\fR; регулярний вираз що отримаємо в результаті співпадатиме з любим ланцюжком що узгоджується з однією з, розділених інфіксом, частин регулярного виразу.

Кількісні оператори пересилюють об'єднання регулярних виразів, останнє, в свою чергу, пересилює інфіксний вибір. Передування виразів може бути змінено якщо частину виразу взяти в круглі дужки.

Обернене звертання (backreference) \fB\e\fR\fIn\fR, де \fIn\fR це одноцифрове число, співпадатиме з ланцюжком що відповідає \fIn\fR\-нній частині регулярного виразу, взятій у круглі дужки.

У базовій версії регулярних виразів, спеціальні знаки \fB?\fR, \fB+\fR, \fB{\fR, \fB|\fR, \fB(\fR й \fB)\fR втрачають своє особливе значення, використовуйте натомість їхню версію з оберненим слешом: \fB\e?\fR, \fB\e+\fR, \fB\e{\fR, \fB\e|\fR, \fB\e(\fR і \fB\e)\fR.

Традиційна \fBegrep\fR не підтримувала метазнак \fB{\fR, і деякі egrep втілення підтримують \fB\e{\fR натомість, тож машинонезалежні скрипти повинні уникати використання \fB{\fR у зразках \fBegrep\fR і вживати \fB[{]\fR для співпадання з буквальною фігурною дужкою.

GNU \fBegrep\fR схильна до традиційного вживання через те що припускає що \fB{\fR не є спеціальним знаком, таким як початок недійсного кількісного вказівника. Так, наприклад, команда \fBegrep\fR '\fB{1\fR' шукатиме ланцюжка що складається з двох знаків \fB{1\fR, замість того що видати синтаксичну помилку регулярного виразу. POSIX.2 дозволяє таке поводження як додаткове розширення, але мобільні скрипти повинні уникати цього.

.SH "ЗМІННІ СЕРЕДОВИЩА"
.PP

Поведінка \fBgrep\fR залежить від змінних середовища, описаних нижче. Для додаткової інформації про змінні середовища дивіться також сторінку посібника для \fBenviron\fR(5).

Локаль \fBLC_\fR\fIfoo\fR встановлюється через прочитання трьох змінних середовища, \fBLC_ALL\fR, \fBLC_\fR\fIfoo\fR, \fBLANG\fR, саме в цій послідовності. Найперша з цих змінних що буде встановленою вказуватиме локаль. Наприклад, якщо \fBLC_ALL\fR не встановлена, зате \fBLC_MESSAGES\fR надане значення \fBpt_BR\fR, тоді Бразільська Португальська мова використовуватиметься для \fBLC_MESSAGES\fR локалі. Локаль C вживатиметься якщо жодна з цих змінних середовища не є встановленою, або якщо locale каталог не інстальований, або, нарешті, якщо grep не була копільованою з підтримкою іноземних мов (NLS \- national language support).

.TP
.B GREP_OPTIONS
Ця змінна вказує на опції що додаватимуться попереду будь\-яких інших прапорців під час виклику програми. Так, наприклад, якщо \fBGREP_OPTIONS\fR матиме значення \fB'\-\-binary\-files=without\-match'\fR, grep поводитиметься так ніби обидві опції, \fB\-\-binary\-files=without\-match\fR та \fB\-\-directories=skip\fR були вказані поперед аргументів на командній лінії. Якщо ви хочете надати \fBGREP_OPTIONS\fR більше значень, розділяйте їх пробілами. Обернений слеш екранує наступний знак, тож ви можете вживати також опції що містять пробіли і обернені слеші. 

.TP
.B GREP_COLOR
Вказує колір для підсвітки співпадань. 

.TP
.B LC_ALL, LC_COLLATE, LC_ALL
Ці змінні встановлюють \fBLC_COLLATE\fR локаль, що відповідає за порядок сортування використованого для інтерпретації діапазонів на зразок \fB[a\-z]\fR. 

.TP
.B LC_ALL, LC_CTYPE, LANG
Ці змінні встановлюють \fBLC_TYPE\fR локаль, яка визначає типи знаків, тобто які з знаків є пробілами. 

.TP
.B LC_ALL, LC_MESSAGES, LANG
Ці змінні встановлюють \fBLC_MESSAGES\fR локаль, яка визначає мову повідомлень grep. За замовчуванням, C локаль послуговується американською англійською. 

.TP
.B POSIXLY_CORRECT
 Якщо ця змінна встановлена, \fBgrep\fR поводиться відповідно до POSIX.2 вимог; в протилежному випадку \- як решта програм GNU. POSIX.2 вимагає щоб опції що слідують за назвами файлів розглядались теж як назви файлів; за замовчуванням такі опції переносяться на початок списку операндів і розглядаються як опції. Також POSIX.2 наполягає щоб нерозпізнані опції діагнозувалися як заборонені, незаконні (illegal), тоді як звичайно вони діагнозуються як недійсні ("invalid"). \fBPOSIXLY_CORRECT\fR також робить неможливою \fB_\fR\fIN\fR\fB_GNU_nonoption_argv_flags_\fR, описану нижче. 

.TP
.B _\fIN\fR_GNU_nonoption_argv_flags_
(\fIN\fR у цьому випадку буде ідентифікаційним номером процесу \fBgrep\fR.) Якщо \fIx\fR\-ний елемент цієї змінної є одиницею (\fB1\fR), не братиметься до уваги \fBx\fR\-ний операнд \fBgrep\fR як опція, навіть якщо даний операнд виглядає нею. Оболонка в змозі помістити цю змінну у середовище для використання кожною запущеною командою. Це надає змогу підказати які з операндів являються результатом розкриття назви файла або байдужого символу і тому не розглядатися як прапорець або опція програми. Ця властивість доступна лише з GNU C бібліотекою і тільки коли \fBPOSIXLY_CORRECT\fR не є встановленою. 

.SH "ДІАГНОСТИКА"
.PP

Як правило, статусом виходу буде 0, якщо рядки що відповідають зразку знайдено і 1 у протилежному випадку. У випадку помилки, статусом виходу є 2, хіба використовувалась опція \fB\-q\fR, \fB\-\-quiet\fR або \fB\-\-silent\fR і рядок із співпаданням було знайдено.

.SH "ДИВІТЬСЯ ТАКОЖ"
.PP

\fBregcomp\fR(3), \fBregex\fR(7)

.SH "ВАДИ"
.PP

Повідомлення про вади надсилайте на bug\-gnu\-utils@gnu.org. Впевніться що ви включили слово "grep" десь у полі "Subject:".

Великі значення у \fB{\fR\fIn\fR\fB,\fR\fIm\fR\fB}\fR виразах можуть спричинити використання \fBgrep\fR значної кількості пам'яті. На додаток, деякі інші ускладнені регулярні вирази можуть вимагати значного часу і місця на обробку і зумовити недостачу пам'яті для \fBgrep\fR.

Обернені звертання досить повільні і можуть вимагати додаткового часу на обробку. 

."                ____ОРИГІНАЛ____                       
 

." .\" grep man page 

." .Id $Id: grep.1,v 1.23 2002/01/22 13:20:04 bero Exp $ 

." .TH GREP 1 \*(Dt "GNU Project" 

."
." == Назва ==
." grep, egrep, fgrep - вивід рядків узгоджених із зразком 
." == Звід ==
." '''grep''' [ ''опції'' ] ''ЗРАЗОК'' [ ''FILE'' ...] <br> '''grep''' [ ''опції'' ] [ '''-e''' ''ЗРАЗОК'' | '''-f''' ''ФАЙЛ'' ] [ ''ФАЙЛ'' ...]

." == Опис ==

." '''Grep''' шукає в іменованому вводі ''ФАЙЛ(И)'' (чи в звичному вводі, якщо не вказано файли, чи вказана назва файлу '''-''' ) рядки, що містять збіг із вказаним зразком ''ЗРАЗОК'' . Замовчально, '''grep''' друкує відповідні рядки. 

." Додатково, є два варіанти програм: '''egrep''' та '''fgrep''' . '''Egrep''' - це те саме, що  '''grep -E''' . '''Fgrep''' - це те саме, що '''grep -F''' . 
." == Ключі ==

." ; '''-A''' ''ЧИСЛО'', '''--after-context='''''ЧИСЛО''
." : Вивести ''ЧИСЛО'' рядків наступного контексту  після відповідних рядків. Рядок складений з символів '''--''' розмежує суміжні групи збігу. 
." ;'''-a''' ,  '''--text'''
." : Обробляти двійковий файл, наче він текстовий; це тотожно опції '''--binary-files=text''' . 
." ; '''-B''' ''ЧИСЛО'', '''--before-context='''''ЧИСЛО''
." : Вивести ''ЧИСЛО'' рядків попереднього контексту перед відповідними рядками. Рядок складений з символів '''--''' розмежує суміжні групи збігу. 
." ; '''-C''' ''ЧИСЛО'', '''--context='''''ЧИСЛО''
." : Вивести ''ЧИСЛО'' рядків контексту. Рядок складений з символів '''--''' розмежує суміжні групи збігу. 
." ; '''-b'''
." : ставить перед кожним рядком номер блоку, в якому він був знайдений. Це може знадобитись при пошуку блоків за контекстом (блоки нумеруються з 0).
." ; '''-h'''
." : запобігає показу назви файлу, що містить рядок, перед цим рядком. Використовується при пошуку по декільком файлам.
." ;'''-i'''
." : ігнорує регістр символів при порівняннях.
." ; '''-l'''
." : видає тільки назви файлів, що містять збіги, по одному в рядку. Якщо зразок знайдено в декількох рядках файлу, то назва файлу не повторюється.
." ;'''-n'''
." : показує перед кожним рядком його номер у файлі (рядки нумеруються з 1)
." ; '''-s'''
." : забороняє показ повідомлень про неіснуючі чи недоступні для читання файлів.
." ; '''-v'''
." : показує усі рядки, за винятком тих, що містять зразок.
." == Реґулярні вирази ==

." == Змінні оточення ==
." Опис наступних змінних оточення  '''LC_COLLATE''', '''LC_CTYPE''', '''LC_MESSAGES''' та '''NLSPATH''', що впливають на роботу команди '''grep''', див. на сторінці довідника '''[[man/man5/environ.5|environ (5)]]'''.

." == Діаґностика ==

." == Вади ==
." ; '''/usr/bin/grep'''
." : Рядки обмежені тільки розміром доступної віртуальної пам’яті. Якщо обробляється рядок з вбудованими нульовими символами, grep буде вести пошук лише до першого такого символу; якщо ця частина рядка буде відповідати зразку, буде показаний цілий рядок.
." ; '''/usr/xpg4/bin/grep'''
." :Якщо файл містить рядки довші ніж '''LINE_MAX''' байтів чи двійкових байтів, результати праці непередбачувані. Значення '''LINE_MAX''' визначено у файлі '''/usr/include/limits.h'''.
." 

