." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "find" "1" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

." Translation 2004 Ilya Korniyko <k_ilya@ukr.net> 

." .TH FIND 1L \" -*- nroff -*- 

.SH "НАЗВА"
.PP

find \- шукати файли в ієрархії тек 

.SH "ЗВІД"
.PP

\fBfind\fR [шлях...] [вираз]

.SH "ОПИС"
.PP

Ця сторінка допомоги описує GNU версію  \fBfind\fR . \fBfind\fR шукає в деревах тек, які починаються з кожної заданої назви шляху, обчислюючи даний вираз зліва направо, згідно з правилами пріоритету операцій (див. секцію ОПЕРАТОРИ), поки значення виразу не стане  відомим (ліва частина хибна для операцій \fIand\fR, істинна для \fIor\fR), після чого \fBfind\fR переходить до наступного файлу. 

перший арґумент, що починається з '\-', '(', ')', ',', або '!' береться за початок виразу; будь\-які арґументи перед нього є шляхами пошуку, і будь\-які арґументи після є рештою виразу.  Якщо не вказано жодного шляху, береться поточна тека. Якщо не вказано вираз, береться вираз '\-print'. 

\fBfind\fR вертає код завершення 0 якщо всі файли оброблено вдало, більший за 0 при помилках. 

.SH "ВИРАЗИ"
.PP

Вираз складається з опцій (що впливають на загальний хід виконання, а не обробку певного файлу, і завжди вертають істину), умов (на виході істинне чи хибне значення), та дій (що мають сторонній ефект і вертають істинне чи хибне значення), розділених операторами. Коли оператор пропущено вживається \-and. Якщо  немає дій крім \-prune, виконується \-print на всіх файлах, для яких вираз істинний. 

.SS "ОПЦІЇ"
.PP

Всі опції завжди вертають істину. Вони діють завжди, а не лише тоді, коли доходить їхня черга у виразі. Тому, для ясності, краще ставити їх на початку виразу. 

.SS \-daystart

.PP

Виміряти час (для \-amin, \-atime, \-cmin, \-ctime, \-mmin, та \-mtime) з початку цього дня, а не від 24 годин тому. 

.SS \-depth

.PP

Обробляти вміст кожної теки перед самою текою. 

.SS \-follow

.PP

Йти за символьними посиланнями. Неявно задає \-noleaf. 

.SS \-help, \-\-help

.PP

Вивести коротку допомогу з \fBfind\fR та вийти. 

.SS \-maxdepth \fIрівнень\fR

.PP

Спускатись не більше ніж на \fIрівень\fR (невід'ємне ціле) тек  нижче арґументів командного рядка. '\-maxdepth 0' означає застосувати умови та дії лише до арґументів командного рядка. 

.SS \-mindepth \fIрівень\fR

.PP

Не застосовувати умови та дії на рівнях менших за \fIрівень\fR ( невід'ємне ціле). '\-mindepth 1' вказує обробляти всі файли крім арґументів командного рядка. 

.SS \-mount

.PP

Не спускатись теками на інших файлових системах. Інша назва для \-xdev, для сумісності з деякими версіями  \fBfind\fR . 

.SS \-noleaf

.PP

Не оптимізувати припускаючи, що тека містить підтек на 2  менше ніж кількість своїх жорстких посилань. Ця опція потрібна при пошуку у файлових системах, що не узгоджені зі стандартом посилань тек Unix,  таких як файлові системи CD\-ROM чи MS\-DOS, або точки монтування томів AFS.  Кожна тека на звичайній файловій системі Unix має принаймні 2 жорстких посилання: її назва та запис '.'. Додатково, її підтеки мають прив'язаний до неї запис '..'. Коли \fBfind\fR перевіряє теку, після отримання статусу для підтек кількістю на 2 менше ніж кількість посилань теки він знає, що решта файлів у теці не є теками('листові (leaf)' файли в дереві тек). Якщо треба перевіряти лише назви файлів, немає  потреби отримувати статус; це значно прискорює пошук. 

.SS \-version, \-\-version

.PP

Вивести версію \fBfind\fR та вийти.

.SS \-xdev

.PP

Не спускатись теками на інших файлових системах. 

.SS "УМОВИ"
.PP

Числові арґументи можна задати так: 

.SS \fI+n\fR

.PP

для більше ніж \fIn\fR , 

.SS \fI\-n\fR

.PP

для менше ніж \fIn\fR , 

.SS \fIn\fR

.PP

для точно \fIn\fR . 

.SS \-amin \fIn\fR

.PP

Востаннє доступ до файлу був \fIn\fR хвилин тому. 

.SS \-anewer \fIфайл\fR

.PP

Доступ до файлу був пізніше ніж \fIфайл\fR був змінений. \-follow впливає на \-anewer лише якщо \-follow передує \-anewer у командному рядку. 

.SS \-atime \fIn\fR

.PP

Останній раз доступ до файлу був \fIn\fR*24 годин тому. 

.SS \-cmin \fIn\fR

.PP

Статус файлу востаннє змінено \fIn\fR хвилин тому. 

.SS \-cnewer \fIфайл\fR

.PP

Статус файлу востаннє змінено пізніше ніж змінено \fIфайл\fR. \-follow впливає на \-cnewer лише якщо \-follow передує \-cnewer у командному рядку. 

.SS \-ctime \fIn\fR

.PP

Статус файлу востаннє змінено \fIn\fR*24 годин тому. 

.SS \-empty

.PP

файл пустий і є звичайним файлом чи текою. 

.SS \-false

.PP

Завжди хибна. 

.SS \-fstype \fIтип\fR

.PP

Файл на файловій системі \fIтип\fR. Припустимі типи файлових систем різні у різних версіях Unix; Неповний перелік типів файлових систем, що приймаються на тій чи іншій версії Unix: ufs, 4.2, 4.3, nfs, tmp, mfs, S51K, S52K.  Вживайте \-printf з вказівкою %F щоб побачити типи ваших файлових систем. 

.SS \-gid \fIn\fR

.PP

числовий ідентифікатор (ID) групи файлу \fIn\fR. 

.SS \-group \fIім'я_групи\fR

.PP

Файл належить до групи \fIім'я_групи\fR (допускається числовий ідентифікатор (ID) групи). 

.SS \-ilname \fIзразок\fR

.PP

Як \-lname, але збіг не чутливий до реґістру. 

.SS \-iname \fIзразок\fR

.PP

Як \-name, але збіг не чутливий до реґістру. Наприклад,  зразки 'fo*' та 'F??' узгоджуються з назвами файлів 'Foo', 'FOO', 'foo', 'fOo', тощо. 

.SS \-inum \fIn\fR

.PP

Файл має число inode \fIn\fR. 

.SS \-ipath \fIзразок\fR

.PP

Як \-path, але збіг не чутливий до реґістру. 

.SS \-iregex \fIзразок\fR

.PP

Як \-regex, але збіг не чутливий до реґістру. 

.SS \-links \fIn\fR

.PP

Файл має \fIn\fR посилань. 

.SS \-lname \fIзразок\fR

.PP

Файл має символьне посилання, назва якого відповідна зразку оболонки \fIзразок\fR. Метасимволи не розглядають '/' чи '.' окремо. 

.SS \-mmin \fIn\fR

.PP

Дані файлу востаннє змінені \fIn\fR хвилин тому. 

.SS \-mtime \fIn\fR

.PP

Дані файлу востаннє змінені \fIn\fR*24 годин тому. 

.SS \-name \fIзразок\fR

.PP

Основа назви файлу (шлях з вилученими теками) відповідає зразку оболонки \fIзразок\fR. Метасимволи ('*', '?', та '[]') не відповідають '.' на початку основи назви. Для пропуску теки та її файдів, вживайте \-prune; дивіться приклад в  описі \-path. 

.SS \-newer \fIфайл\fR

.PP

файл змінено пізніше за \fIфайл\fR. \-follow впливає на \-newer лише якщо \-follow передує \-newer у командному рядку. 

.SS \-nouser

.PP

Жоден користувач не узгоджений з числовим ідентифікатором (ID) користувача файлу. 

.SS \-nogroup

.PP

Жодна група не узгоджена числовим ідентифікатором (ID) групи файлу. 

.SS \-path \fIзразок\fR

.PP

назва файлу відповідає зразку оболонки \fIзразок\fR. Метасимволи не розглядають '/' чи '.' окремо;  отже, наприклад, 
.br
 
." .in +1i 

find . \-path './sr*sc' 
.br
 
." .in -1i 

надрукує теку з назвою './src/misc' (якщо така існує). Для пропуску всього дерева тек, вживайте \-prune замість  перевірки кожного файлу в дереві. Наприклад, для пропуску теки 'src/emacs' та усіх файлів і тек у ній, і виводу назв усіх інших знайдених файлів, зробіть подібне: 
.br
 
." .in +1i 

find . \-path './src/emacs' \-prune \-o \-print 
.br
 
." .in -1i 

.SS \-perm \fIрежим\fR

.PP

Біти дозволів файлу є точно \fIрежим\fR (вісімковий чи символьний). Символьні режими беруть за відправну точку режим 0 . 

.SS \-perm \-\fIрежим\fR

.PP

Всі біти дозволу \fIрежим\fR встановлені для файлу. 

.SS \-perm +\fImode\fR

.PP

Будь\-який біт дозволу \fIрежим\fR встановлений для файлу. 

.SS \-regex \fIзразок\fR

.PP

назва файлу узгоджена з регулярним виразом \fIзразок\fR. Це збіг для всього шляху. Наприклад, для збігу з файлом './fubar3', придатні регулярні вирази '.*bar.' or '.*b.*3', але не 'b.*r3'. 

.SS \-size \fIn\fR[bckw]

.PP

файл бере \fIn\fR одиниць місця. Одиниця є блоком у 512 байтів за замовчанням чи якщо 'b' йде за \fIn\fR, байтом, якщо 'c' йде за \fIn\fR, кілобайтом, якщо 'k' йде за \fIn\fR, словом з двох байтів, якщо `w' йде за \fIn\fR. Цей розмір не містить непрямі блоки, але лічить блоки  у розріджених файлах, ніби вони дійсно виділені. 

.SS \-true

.PP

Завжди істина. 

.SS \-type \fIc\fR

.PP

Файл типу \fIc\fR: 

.SS b

.PP

блочний (буферований) особливий 

.SS c

.PP

символьний (небуферований) особливий 

.SS d

.PP

тека 

.SS p

.PP

названий канал (FIFO) 

.SS f

.PP

звичний файл 

.SS l

.PP

символьне посилання 

.SS s

.PP

сокет 

.SS D

.PP

двері (Solaris) 

.SS \-uid \fIn\fR

.PP

числовий ідентифікатор (ID) користувача файлу \fIn\fR. 

.SS \-used \fIn\fR

.PP

Востаннє доступ до файлу був \fIn\fR днів по останній зміні статусу. 

.SS \-user \fIім'я\fR

.PP

Файл належить користувачу \fIім'я\fR (допускається числовий ідентифікатор (ID) користувача). 

.SS \-xtype \fIc\fR

.PP

Те саме, що \-type поки файл не є символьним посиланням. Для символьних посилань:  Якщо не вказано \-follow, істина якщо файл є посиланням на файл типу \fIc\fR; якщо вказано \-follow , істина якщо \fIc\fR є 'l'. Іншими словами, для символьних посилань, \-xtype перевіряє тип файлу, чого не робить \-type. 

.SS "ДІЇ"
.PP

.SS \-exec \fIкоманда\fR ;

.PP

Виконати \fIкоманду\fR; Істина, якщо повернено стан 0. Всі наступні  арґументи \fBfind\fR є арґументами для команди, доки не зустрінеться арґумент, що складається з ';'. Рядок '{}' замінюється поточним ім'ям файлу, будь\-де він трапляється в арґументах команди,  не лише в арґументах, що містять лише його, як у деяких інших версіях  \fBfind\fR . Обидві ці конструкції може бути необхідним екранувати (символом '\e') чи взяти у лапки для захисту від обробки оболонкою. Команда виконується у початковій теці. 

.SS \-fls \fIфайл\fR

.PP

Істина; як \-ls але пише у \fIфайл\fR як \-fprint. 

.SS \-fprint \fIфайл\fR

.PP

Істина; друк повної назви файлу у \fIфайл\fR. Якщо \fIфайл\fR не існує при запуску \fBfind\fR, він створюється; якщо існує,  він очищується. Назви файлу "/dev/stdout" та "/dev/stderr" ; обробляються особливо, вони означають звичний вивід та звичний вивід для помилок, відповідно. 

.SS \-fprint0 \fIфайл\fR

.PP

Істина; як \-print0 але пише у \fIфайл\fR як \-fprint. 

.SS \-fprintf \fIфайл\fR \fIформат\fR

.PP

Істина; як \-printf але пише у \fIфайл\fR як \-fprint. 

.SS \-ok \fIкоманда\fR ;

.PP

Як \-exec але спочатку питає користувача (зі звичного вводу); якщо відповідь не починається з 'y' чи 'Y', не запускає команду, і повертає хибність. 

.SS \-print

.PP

Істина; друк повної назви файлу у на звичний вивід, з наступним прогоном рядка. 

.SS \-print0

.PP

Істина; друк повної назви файлу у на звичний вивід, з наступним нульовим символом.  Це дозволяє приймати файли з символом нового рядка у назві, програмам, що обробляють вивід \fBfind\fR. 

.SS \-printf \fIформат\fR

.PP

Істина; друкує \fIформат\fR на звичний вивід, обробляючи екранування '\e' та директиви '%'. Ширина і точність поля може бути задана як у функції мови Сі 'printf'. На відміну від \-print, \-printf не додає символ прогону рядка в кінець рядка. Екранування та директиви наступні: 

.SS \ea

.PP

Гудок тривоги. 

.SS \eb

.PP

Повернення на одну позицію (backspace). 

.SS \ec

.PP

Одразу припинити друк формату і завершити (flush) вивід . 

.SS \ef

.PP

Form feed. 

.SS \en

.PP

Новий рядок. 

.SS \er

.PP

Повернення каретки. 

.SS \et

.PP

Горизонтальна табуляція. 

.SS \ev

.PP

Вертикальна табуляція. 

.SS \e\e

.PP

Символ повернення ('\e'). 

.SS \eNNN

.PP

Символ з ASCII кодом NNN (вісімковим). 

Символ '\e' за яким будь\-який інший символ сприймається як звичайний символ, і обидва друкуються. 

.SS %%

.PP

Символ відсотка. 

.SS %a

.PP

Час останнього доступу до файлу у форматі, який вертає функція мови Сі 'ctime'. 

.SS %A\fIk\fR

.PP

Час останнього доступу до файлу у форматі, заданому \fIk\fR, що є або '@' або директивою для функції мови Сі 'strftime'. Можливі  значення \fIk\fR перелічені далі; деякі з них наявні не на всіх  системах, через відмінності у 'strftime' на різних системах. 

.SS @

.PP

секунди після 1 Січня 1970, 00:00 середнього часу за грінвічським меридіаном (GMT). 

Поля часу: 

.SS H

.PP

година (00..23) 

.SS I

.PP

година (01..12) 

.SS k

.PP

година ( 0..23) 

.SS l

.PP

година ( 1..12) 

.SS M

.PP

хвилина (00..59) 

.SS p

.PP

AM (до полудня) чи PM (після полудня), вживаючи настройку локалі 

.SS r

.PP

час, 12\-годинний (гг:хх:сс [AP]M) 

.SS S

.PP

секунда (00..61) 

.SS T

.PP

час, 24\-годинний (гг:хх:сс) 

.SS X

.PP

представлення часу у локалі (Г:Х:С) 

.SS Z

.PP

часова зона (наприклад, EDT), чи нічого, коли часова зона невизначена 

Поля дати: 

.SS a

.PP

Скорочена назва дня тижня у локалі (Нед..Суб) 

.SS A

.PP

Повна назва дня тижня у локалі, змінної довжини (Неділя..Субота) 

.SS b

.PP

Скорочена назва місяця у локалі (Січ..Гру) 

.SS B

.PP

Повна назва дня місяця у локалі, змінної довжини (Січень..Грудень) 

.SS c

.PP

Дата й час у локалі (Суб Лис 04 12:02:33 EST 1989) 

.SS d

.PP

день місяця (01..31) 

.SS D

.PP

дата (мм/дд/рр) 

.SS h

.PP

те саме, що b 

.SS j

.PP

день року (001..366) 

.SS m

.PP

місяць (01..12) 

.SS U

.PP

номер тижня року, тижні починаються з неділі (00..53) 

.SS w

.PP

день тижня (0..6) 

.SS W

.PP

номер тижня року, тижні починаються з понеділка (00..53) 

.SS x

.PP

представлення дати у локалі (мм/дд/рр) 

.SS y

.PP

Останні дві цифри року (00..99) 

.SS Y

.PP

рік (1970...) 

.SS %b

.PP

розмір файлу у блоках 512 байтів (округлений вгору). 

.SS %c

.PP

Час останньої зміни статусу файлу у форматі, який вертає функція мови Сі 'ctime'. 

.SS %C\fIk\fR

.PP

Час останньої зміни статусу файлу у форматі заданому \fIk\fR, яке те саме, що й для %A. 

.SS %d

.PP

глибина файлу в дереві тек; 0 означає, що файл є арґументом командного рядка. 

.SS %f

.PP

назва файлу з вилученими початковими теками (лише останній запис). 

.SS %F

.PP

Тип файлової системи на якій файл міститься; Це значення можна вжити для \-fstype. 

.SS %g

.PP

Назва групи файлу, чи числовий ідентифікатор (ID), якщо група безіменна. 

.SS %G

.PP

числовий ідентифікатор (ID) групи файлу. 

.SS %h

.PP

Початкові теки назви файлу (все крім останнього запису). 

.SS %H

.PP

Арґумент командого рядка, за яким знайдено файл. 

.SS %i

.PP

число inode файлу (десяткове). 

.SS %k

.PP

розмір файлу у блоках 1K (округлений вгору). 

.SS %l

.PP

Об'єкти символьного посилання (порожній рядок, якщо файл не є символьним посиланням). 

.SS %m

.PP

Біти дозволів файлу (вісімкові). 

.SS %n

.PP

Число жорстких посилань до файлу. 

.SS %p

.PP

Назва файлу. 

.SS %P

.PP

Назва файлу з прибраним арґументом командого рядка, за яким знайдено файл. 

.SS %s

.PP

Розмір файлу в байтах. 

.SS %t

.PP

Час останньої зміни файлу у форматі, який вертає функція мови Сі 'ctime'. 

.SS %T\fIk\fR

.PP

Час останньої зміни файлу у форматі заданому \fIk\fR, яке те саме, що й для %A. 

.SS %u

.PP

Назва користувача файлу, чи числовий ідентифікатор (ID), якщо користувач неназваний. 

.SS %U

.PP

числовий ідентифікатор (ID) користувача файлу. 

Символ '%', за яким йде будь\-який інший символ пропускається (але цей інший символ друкується). 

.SS \-prune

.PP

Якщо не задано \-depth, то істина; не спускатись поточною текою. 
.br
 Якщо \-depth не задано, то хибність; не має дії. 

.SS \-ls

.PP

Істина; вивести поточний файл у форматі 'ls \-dils' на звичний вивід. Блоки рахуються по 1K, але, якщо задана змінна оточення POSIXLY_CORRECT, то по 512 байтів. 

.SS "ОПЕРАТОРИ"
.PP

Перелік у порядку зниження пріоритету: 

.SS ( \fIвираз\fR )

.PP

Задає пріоритет. 

.SS ! \fIвираз\fR

.PP

Істина, якщо \fIвираз\fR хибний. 

.SS \-not \fIвираз\fR

.PP

Те саме, що ! \fIвираз\fR. 

.SS \fIвираз1 вираз2\fR

.PP

І (неявний); \fIвираз2\fR не обчислюється, якщо \fIвираз1\fR хибний. 

.SS \fIвираз1\fR \-a \fIвираз2\fR

.PP

Те саме, що \fIвираз1 вираз2\fR. 

.SS \fIвираз1\fR \-and \fIвираз2\fR

.PP

Те саме, що \fIвираз1 вираз2\fR. 

.SS \fIвираз1\fR \-o \fIвираз2\fR

.PP

Або; \fIвираз2\fR не обчислюється, якщо \fIвираз1\fR Істина. 

.SS \fIвираз1\fR \-or \fIвираз2\fR

.PP

Те саме, що \fIвираз1\fR \-o \fIвираз2\fR. 

.SS \fIвираз1\fR , \fIвираз2\fR

.PP

Перелік; і \fIвираз1\fR, і \fIвираз2\fR завжди обчислюються. Значення \fIвираз1\fR губиться; значення переліку є  значенням \fIвираз2\fR. 

.SH "ДИВІТЬСЯ ТАКОЖ"
.PP

\fBlocate\fR(1L), \fBlocatedb\fR(5L), \fBupdatedb\fR(1L), \fBxargs\fR(1L), \fBFinding files\fR (у Info, чи друкованій документації)

