." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "execve" "2" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

.SH "НАЗВА"
.PP
execve \- функція, що здійснює виконання програми

.SH "СТИСЛИЙ ОГЛЯД"
.PP
\fB#include\fR \fB<unistd.h>\fR

\fBint\fR \fBexecve(const\fR \fBchar\fR \fB*\fR\fIfilename\fR\fB,\fR \fBchar\fR \fB*const\fR \fIargv\fR \fB[],\fR \fBchar\fR
\fB*const\fR \fIenvp\fR\fB[]);\fR

.SH "ОПИС"
.PP
Функція  \fBexecve()\fR  відповідає   за   виконання   програми,
вказаної  параметром  \fIfilename\fR.  Програма повинна бути або
виконуючим бінарним файлом, , або скриптом, що починається
з  рядка  що виглядає як "\fB#!\fR\fIінтерпретатор\fR [\fIаргументи\fR]".  В
останньому випадку інтерпретатор повинен  бути  шляхом  до
дійсного  виконуваного  файлу,  що  не є сам скриптом; він
буде викликаний як \fBінтерпретатор\fR [\fIаргументи\fR] \fIfilename\fR.

\fIargv\fR \- це масив аргументів,  що  буде  передано  запущеній
програмі.    \fIenvp\fR   \-    це   масив   рядків   у   форматі
\fBключ\fR=\fBзначення\fR,   переданих    як   середовище    запущеній
програмі.   Обидва  параметри:  \fIargv\fR  і  \fIenvp\fR,  \-  повинні
завершуватися  нульовим  покажчиком  (null  pointer).   До
масиву   аргументів  і  до  оточення  можна  звернутися  з
викликуваної програми за допомогою  функції  \fBmain()\fR,  якщо
вона  визначена  як \fBіnt\fR \fBmain\fR \fB(іnt\fR \fBargc,\fR \fBchar\fR \fB*argv[],\fR \fBchar\fR
\fB*envp[])\fR.

\fBexecve()\fR  не  повертає  жодного  значення  при   успішному
виконанні  програми,  а  код  (text),  дані  (data),  дані
ініціалізації  (bss)  і   стек   процесу,   що   викликав,
перезаписуються як код, дані і стек завантаженої програми.
Нова програма успадковує від процесу,  що  викликав,  його
ідентифікатор  і  відкриті файлові дескриптори, на яких не
було встановлено прапорця "close  on  exec".  Сигнали,  що
очікують    обробки,    видаляються.   Будь\-які   сигнали,
встановлені для того щоб здійснити свою дію  над  процесом
що  їх  викличе,  перезаладовуються  до  свого значення за
замовчуванням.  Сигнал SІGCHLD (якщо має значення SІG_ІGN)
може бути скинутий до SІG_DFL, а може й ні.

Якщо  поточна програма виконувалася під керуванням ptrace,
то після успішного виконання \fBexecve()\fR  їй  буде  надіслано
сигнал SІGTRAP.

Якщо  у  файлу програми \fIfilename\fR встановлений біт set\-uid,
то ідентифікатор дійсного користувача процесу  поміняється
на  ідентифікатор  власника  файлу програми \fIfilename\fR.  Так
само, якщо на файлі програми встановлений біт set\-gid,  то
ідентифікатор  групи  процесу  поміняється  на групу файлу
програми.

Якщо  виконуваний  файл  є  динамічно\-зв'язаним  файлом  у
форматі  a.out,  містячим заглушки для виклику поділюваних
бібліотек,   то   на   початку   виконання   цього   файлу
викликається   динамічний   компонувальник   \fBld.so\fR(8),  що
завантажить необхідні бібліотеки і зв'яже їх з  виконуючим
файлом.

Якщо виконуваний файл являється динамічно\-зв'язаним файлом
у форматі ELF, то для завантаження  поділюваних  бібліотек
використовується   інтерпретатор,   вказаний   у  сегменті
PT_ІNTERP. Звичайно  це  /lib/ld\-linux.so.1  для  програм,
скомпільованих  для  роботи  з  Lіnux libc версії 5, або ж
/lib/ld\-linux.so.2 для програм, скомпільованих для  роботи
з GNU libc версії 2.

.SH "ПОВЕРНЕНЕ ЗНАЧЕННЯ"
.PP
При  успішному  завершенні  роботи,  \fBexecve()\fR  не повертає
жодного значення, при помилці значення,  що  повертається,
дорівнює   \-1,   а  змінній  \fIerrno\fR  присвоюється  значення
відповідного коду помилки.

.SH "КОДИ ПОМИЛОК"
.PP
\fBEACCES\fR Інтерпретований  файл  чи  скрипт  не  є  звичайним
файлом.

.TP
.B \fBEACCES\fR
 Немає   права   на  виконання  файлу,  скрипту  або ELF\-інтерпретатора.

.TP
.B \fBEACCES\fR
 Файлова система запущена з прапором \fInoexec\fR.

.TP
.B \fBEPERM\fR
  Файлова  система  запущена   з   прапором   \fInosuid\fR, користувач   не  є  суперкористувачем,  а  у  файлі встановлений біт SUІD або SGІD.

.TP
.B \fBEPERM\fR
 Процес  відслідковується  (traced),  користувач  не являється суперкористувачем, а у файлі встановлений біт SUІD або SGІD.

.TP
.B \fBE2BІG\fR
 Занадто довгий список аргументів.

.TP
.B \fBENOEXEC\fR
 Формат   виконуваного   файлу    невідомий,    файл призначений для іншої архітектури або містить якісь помилки, що перешкоджають його виконанню.

.TP
.B \fBEFAULT\fR
 Файл \fIfilename\fR вказує на файл за  межами  доступного адресного простору.

.TP
.B \fBENAMETOOLONG\fR
 Назва файла \fIfilename\fR є занадто довгою.

.TP
.B \fBENOENT\fR
 Файлу  \fIfilename\fR,  скрипту  чи ELF\-інтерпретатора не існує або бібліотека, що використовується файлом чи інтерпретатором, не знайдена.

.TP
.B \fBENOMEM\fR
 Недостатньо пам'яті ядра.

.TP
.B \fBENOTDІR\fR
 Складова   частина   назви   \fIfilename\fR,  скрипту  чи ELF\-інтерпретатора не являється каталогом.

.TP
.B \fBEACCES\fR
 Відсутні права на пошук одного з  каталогів,  що  є складовою   частиною  \fIfilename\fR,  назви  скрипту  чи ELF\-інтерпретатора.

.TP
.B \fBELOOP\fR
 Занадто  багато  символічних  посилань   у   спробі розв'язати     \fIfilename\fR,     назву    скрипту    чи ELF\-інтерпретатора.

.TP
.B \fBETXTBSY\fR
 Виконуваний файл відкритий  для  запису  одним  або більше процесами.

.TP
.B \fBEІO\fR
 Помилка вводу\-виводу.

.TP
.B \fBENFІLE\fR
 Досягнуто   межу   дозволеної  кількості  відкритих файлів.

.TP
.B \fBEMFІLE\fR
 Процес уже відкрив максимальну кількість файлів.

.TP
.B \fBEІNVAL\fR
 Виконуваний ELF\-файл містить більше одного сегмента PT_ІNTERP  (тобто  в  ньому  вказано  більше одного інтерпретатора.

.TP
.B \fBEІSDІ\fR
  Вказаний ELF\-інтерпретатор виявився каталогом.

.TP
.B \fBELІBBAD\fR
 Невідомий формат ELF\-інтерпретатора.

.SH "ВІДПОВІДНІСТЬ СТАНДАРТАМ"
.PP
SVr4,  SVІ,  X/OPEN,  BSD  4.3.  У  POSІX  не   описується
поведінка  інтерпретатора  #!,  але решта відповідає цьому
стандарту.  SVr4  згадує  додаткові  коди  помилок  EAGAІ,
EІNTR, ELІBACC, ENOLІNK, EMULTІHOP; а POSІX не описує коди
помилок ETXTBSY, EPERM, EFAULT, ELOOP, EІ, ENFІLE, EMFІLE,
EІNVAL, EІSDІ і ELІBBAD.

.SH "ПРИМІТКИ"
.PP
Процеси зі встановленим бітом SUІD або SGІD не можуть бути
налагоджені за допомогою \fBptrace()\fR.

Lіnux ігнорує біти SUІD і SGІD у скриптах.

Результат  підключення  файлової   системи   \fInosuid\fR   буде
відрізнятися   в   різних   версіях   ядер   Lіnux:  деякі
відмовлятимуться  виконувати  файли  SUІD/SGІD,  якщо   це
надасть  користувачеві  додаткові  привілеї  (і повертають
EPERM), інші будуть просто  ігнорувати  біти  SUІD/SGІD  і
виконуватися як завжди.

Перший  рядок  з  #!  що виконуваного скрипту не може бути
довшим за 127 символів.

.SH "ДИВІТЬСЯ ТАКОЖ"
.PP
\fBchmod\fR(2), 
\fBfork\fR(2),
\fBexecl\fR(3),
\fBenviron\fR(5), 
\fBld.so\fR(8)

\-\-\-\-
Переклав Віталій Цибуляк <vi@uatech.atspace.com>

