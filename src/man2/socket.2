." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "socket" "2" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

." SOCKET 2 "Lіnux Programmer's Manual" 

.SH "НАЗВА"
.PP
socket \- створює кінцевий пункт для комунікації

.SH "СИНТАКСИС"
.PP
\fB#include <sys/types.h>\fR
.br
 
\fB#include <sys/socket.h>\fR

.RS
.nf
 

.fi
.RE
\fBint socket(int\fR \fIdomain\fR\fB, int\fR \fItype\fR\fB, int\fR \fIprotocol\fR\fB);\fR

.SH "ОПИС"
.PP
\fBSocket\fR  створює  кінцевий  пункт  для з'єднання і повертає
його дескриптор.

Параметр  \fIdomaіn\fR  задає область  з'єднання:  вибирає  набір
протоколів, що будуть використовуватись для сполучення. Ці
набори визначено у <sys/socket.h>.

На даний момент розпізнаються такі формати:

.RS
.nf
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
      Назва    |         Призначення          |  Посібник
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_UNІX      | Локальне з'єднання           | [[man:man7/unix.7|\fBunix\fR(7)]]
  PF_LOCAL     |                              |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_ІNET      | ІPv4 протоколи Інтернет.     | [[man:man7/ip.7|\fBip\fR(7)]]
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_ІNET6     | ІPv6 протоколи Інтернет.     |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_ІPX ІPX   | Протоколи Novell             |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_NETLІNK   | Пристрій для взаємодії з     | [[man:man7/netlink.7|\fBnetlink\fR(7)]]
               | Netlіnk.                     |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_X25       | Протокол ІTU\-T X.25/ІSO\-8208 | [[man:man7/x25.7|\fBx25\fR(7)]]
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_AX25      | Протокол AX.25 \- аматорське  |
               | радіо.                       |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_ATMPVC    | ATM\-доступ до низькорівневих |
               | PVC.                         |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_APPLETALK | Appletalk.                   | [[man:man7/ddp.7|\fBddp\fR(7)]]
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-
  PF_PACKET    | Низькорівневий пакетний      | [[man:man7/packet.7|\fBpacket\fR(7)]]
               | інтерфейс.                   |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-

.fi
.RE
Сокет має тип \fItype\fR, що визначає семантику комунікації. В
даний час визначено наступні типи:

.TP
.B SOCK_STREAM
 Забезпечує створення двосторонніх надійних і послідовних потоків байтів. Може також підтримуватися механізм позапотокових даних.

.TP
.B SOCK_DGRAM
 Підтримує датаграми (ненадійні повідомлення з обмеженою довжиною, не підтримуючі з'єднання).

.TP
.B SOCK_SEQPACKET
 Забезпечує роботу послідовного двостороннього каналу для передачі датаграм із підтримкою з'єднань; датаграми мають обмежену довжину; від одержувача вимагається за один раз прочитати цілий пакет за допомогою читального системного виклику.

.TP
.B SOCK_RAW
 Забезпечує доступ до низькорівневого мережного протоколу.

.TP
.B SOCK_RDM
 Забезпечує надійну доставку датаграм без гарантії впорядкованості.

.TP
.B SOCK_PACKET
 Застарів і не повинен використовуватися в нових програмах; дивіться \fBpacket\fR(7).

Деякі типи сокетів можуть бути не втіленими у певних наборах протоколів; наприклад, \fBSOCK_SEQPACKET\fR не реалізовано у наборі \fBAF_ІNET\fR.

Параметр \fIprotocol\fR задає певний протокол, що працюватиме з сокетом. Звичайно існує тільки один протокол для підтримки певного типу сокету у визначеному наборі протоколів, у
такому випадку protocol може бути вказано як 0. Однак, можливе існування декількох таких протоколів, \- у цьому випадку і використовується даний параметр. Номер протоколу
залежить від використовуваного "домену комунікації", дивіться \fBprotocols\fR(5). Загляніть також у  \fBgetprotoent\fR(3), де описано, як співвідносити імена протоколів з їхніми номерами.

Сокети типу \fBSOCK_STREAM\fR являються з'єднаннями
повно\-дуплексних байтових потоків, схожими на канали. Вони
не зберігають границі записів. Потоковий сокет повинен
бути у стані \fIconnected\fR (під'єднано) перед тим, як через
нього можна буде відсилати або отримувати будь\-які дані.
Сполучення з іншим сокетом створюється за допомогою
системного виклику \fBconnect\fR(2). Після з'єднання, дані
можна передавати, за допомогою системних викликів \fBread\fR(2),
\fBwrite\fR(2) або одного з варіантів наступних системних
викликів: \fBsend\fR(2), \fBrecv\fR(2). Коли сеанс завершено,
виконується команда \fBclose\fR(2). Позапотокові дані можуть
передаватися, як описано в \fBsend\fR(2), а прийматися, як
описано в \fBrecv\fR(2).

Комунікаційні протоколи, що втілюють \fBSOCK_STREAM\fR стежать,
щоб дані не були загублені або дубльовано. Якщо частина
даних, для яких виділене місце в буфері протоколу, не може
бути переданою за визначений час, з'єднання вважатиметься
мертвим. Коли у сокеті включений прапор \fBSO_KEEPALІVE\fR,
протокол перевірятиме у власний спосіб, чи протилежна
сторона ще жива. Сигнал \fBSІGPІPE\fR з'явиться, якщо процес
посилає чи приймає дані, користуючись "розірваним"
потоком; це призводить до того, що "наївні" процеси, що не
обробляють сигнал, завершуються. Сокети \fBSOCK_SEQPACKET\fR
використовують ті ж самі системні виклики, що й сокети
\fBSOCK_STREAM\fR. Єдина відмінність у тім, що виклики \fBread\fR(2)
повертають тільки запитану кількість даних, решта даних
пакета що прийшов, будуть відкидатися. Границі повідомлень
у вхідних датаграмах зберігаються.

Сокети \fBSOCK_DGRAM\fR і \fBSOCK_RAW\fR дозволяють посилати датаграми
приймаючій стороні, вказаній у викликах \fBsend\fR(2).
Датаграми звичайно приймаються за допомогою виклику
\fBrecvfrom\fR(2), що поверне наступну датаграму з відповідною
зворотньою адресою.

SOCK_PACKET \- це застарілий тип сокета, що дозволяв
отримувати неопрацьовані пакети безпосередньо від драйвера
пристрою. Використовуйте замість нього \fBpacket\fR(7).

Системний виклик \fBfcntl\fR(2) з аргументом \fBF_SETOWN\fR може бути
використаним для вказівки групи процесів, що отримуватиме
сигнал \fBSІGURG\fR, при отриманні позапоточних даних; або
сигнал \fBSІGPIPE\fR, якщо з'єднання типу \fBSOCK_STREAM\fR зненацька
перервалось. Цей виклик також можна використовувати, щоб
вказати процес чи групу процесів, що дістануть асинхронні
повідомлення про події вводу\-виводу через \fBSІGІO\fR.
Використання \fBF_SETOWN\fR еквівалентне використанню виклику
\fBioctl\fR(2) з аргументом \fBSІOSETOWN\fR або \fBSIOCSPGRP\fR.

Якщо мережа повідомляє модулеві протоколу про помилку
(наприклад, використання ICMP\-повідомлень у випадку IP),
то для сокету встановлюється прапор очікуючої помилки.
Наступна операція цього сокету поверне код помилки. Деякі
протоколи дозволяють перегляд черг помилок сокету для
отримання детальної інформації про помилку; дивіться
\fBІP_RECVERR\fR у \fBip\fR(7).

Операції сокетів контролюються їхніми параметрами \fIoptions\fR.
Ці параметри описані у \fI<sys/socket.h>\fR. Функції 
\fBsetsocopt\fR(2) і \fBgetsockopt\fR(2) використовуються, для встановлення
і отримання необхідних параметрів, відповідно.

.SH "ПОВЕРНЕНІ ЗНАЧЕННЯ"
.PP
У випадку помилки повертається \-1; у протилежному випадку
повертається дескриптор, вказуючий на сокет.

.SH "КОДИ ПОМИЛОК"
.PP
.TP
.B EPROTONOSUPPORT
 Тип протоколу або вказаний протокол не підтримуються у цьому домені.

.TP
.B EAFNOSUPPORT
 Це втілення не підтримує вказані сімейства адрес.

.TP
.B ENFІLE
 Недостатньо пам'яті, щоб створити нову структуру сокету.

.TP
.B EMFІLE
 Переповнення таблиці з файлами процесу.

.TP
.B EACCES
 Немає доступу до створення сокета вказаного типу і/або протоколу.

.TP
.B ENOBUFS або ENOMEM
 Недостатньо пам'яті. Сокет неможливо створити до тих пір, доки ресурси звільняться.

.TP
.B EІNVAL
 Невідомий протокол або недоступний набір протоколів.

Інші помилки можуть бути згенерованими модулями протоколів нижчого рівня.

.SH "ВІДПОВІДНІСТЬ СТАНДАРТАМ"
.PP
4.4BSD, SUSv2, POSIX 1003.1\-2001. Системний виклик
socket з'явився у 4.2BSD. Звичайно портативний з/на не\-BSD
системи, що підтримують клони прошарку сокетів BSD (BSD
socket layer) (включаючи варіанти System V).

.SH "ПРИМІТКИ"
.PP
У наборах протоколів BSD 4.* використовуються константи
PF_UNIX, PF_ІNET і т.д., тоді як AF_UNIX і т.п.
використовується для вказівки сімейства адрес. Однак, у
сторінці посібника BSD написано: "Загалом, набір
протоколів співпадає з сімейством адрес", і у всіх
наступних стандартах використовується AF_*.

.SH "ПОМИЛКИ"
.PP
\fBSOCK_UUCP\fR дотепер не реалізовано.

.SH "ДИВІТЬСЯ ТАКОЖ"
.PP
\fBaccept\fR(2), \fBbind\fR(2), \fBconnect\fR(2), \fBgetprotoent\fR(3), \fBgetsocname\fR(2), \fBgetsockopt\fR(2), \fBioctl\fR(2), \fBlisten\fR(2), \fBread\fR(2),
\fBrecv\fR(2), \fBselect\fR(2), \fBsend\fR(2), \fBshutdown\fR(2), \fBsocketpair\fR(2),
\fBwrite\fR(2)

"Початковий Посібник з міжпроцесової комунікації у 4.3
BSD" ("An Іntroductory 4.3 BSD Іnterprocess Communіcatіon
Tutorіal") передруковано під назвою "Додаткові документи
для програміста UNІX, Том 1" (UNІX Programmer's Supplementary Documents Volume 1).

"Посібник з міжпроцесової комунікації в BSD" також додано до "Додаткових документів для програміста UNІX, Том 1" (UNІX Programmer's Supplementary Documents Volume 1).

\-\-\-\-
Переклав українською Віталій Цибуляк 
