." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "system" "3" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

." SYSTEM 3 2006-06-22 "" "Linux Programmer's Manual" 

.SH "Назва"
.PP
system \- виконує оболонкову команду 

.SH "Огляд"
.PP
\fB#include <stdlib.h>\fR 

\fBint system(const char *\fR\fIланцюжок\fR\fB);\fR 

.SH "Опис"
.PP
\fBsystem()\fR виконує команду, вказану як \fIланцюжок\fR, через виклик \fB/bin/sh \-c \fR\fIланцюжок\fR і повертається до основної програми після завершення команди. Під час виконання команди, \fBSIGCHLD\fR блоковано, а \fBSIGINT\fR із \fBSIGQUIT\fR ігноруються. 

.SH "Повернені значення"
.PP
У випадку помилки, повертається \-1 (тобто відгалуження зазнало невдачі) і значення повернення команди в протилежному випадку. Останній статус повернення відбувається у форматі, вказаному \fBwait\fR(2). Таким чином, код виходу команди буде \fBWEXITSTATUS(\fR\fIstatus\fR\fB)\fR. У випадку, якщо \fB/bin/sh\fR неможливо виконати, статус виходу буде той самий, що й команди \fBexit(127)\fR. 

Якщо \fIланцюжок\fR дорівнює NULL, \fBsystem()\fR поверне ненульове значення, акщо оболонка доступна і нуль, якщо ні. 

\fBsystem()\fR не впливає на статус очікування додатківих дочірніх процесів. 

.SH "Відповідність стандартам"
.PP
ANSI C, POSIX.2, BSD 4.3 

.SH "Примітки"
.PP
Як було зказано, \fBsystem()\fR ігнорує \fBSIGINT\fR і \fBSIGQUIT\fR. Це може призвести до того, що програми, які викликають цю функцію з циклу можуть виявитись неперрервними, хіба вони попіклуються самі перевірити статус виходу дочірнього процесу. Тобто, 

.RS
.nf
        while(something) {
            int ret = system("foo");
    
            if (WIFSIGNALED(ret) &&
               (WTERMSIG(ret) == SIGINT || WTERMSIG(ret) == SIGQUIT))
                break;
        }

.fi
.RE
Не вживайте \fBsystem()\fR з програм з привілеями suid або sgid, оскільки незвичні значення деяких змінних середовища можуть бути використаними для компрометації системної цілосності. Використайте сімейство функцій \fBexec\fR(3) натомість, але не \fBexeclp\fR(3) або \fBexecvp\fR(3). Власне, \fBsystem()\fR не працюватиме належним чином з програм з привілеями suid або sgid на системах, де встановлено \fBbash\fR(1) 2\-ї версії, оскільки bash 2 зкидає привілеї при запуску. (Debian викориатовує модифіковану версію bash, яка не робить цього, якщо викликано як \fBsh\fR.) 

Перевірка на наявність \fB/bin/sh\fR, власне, не відбувається; передбачається, що ця оболонка завжди присутня. ISO C вказує перевіряти, тоді як POSIX.2 відзначає, що повернене значення перевірки на наявність оболонки завжди повинне бути ненульовим, оскільки система баз оболонки не відповідає стандартові, і саме таким чином це втілено. 

Є можливість, що оболонкова команда поверне 127, тож цей код не є надійним вказівником того, що \fBexecve()\fR зазнав невдачі. 

.SH "Дивіться також"
.PP
\fBsh\fR(1), \fBsignal\fR(2), \fBwait\fR(2), \fBexec\fR(3)  

