." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "clock" "3" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

.SH " НАЗВА "
.PP
clock \- визначає процесорний час, використаний програмою 

.SH " ОГЛЯД "
.PP

.RS
.nf
  <b>#include <time.h></b> 

  <b>clock_t clock(void);</b> 

.fi
.RE

.SH " ОПИС "
.PP
Функція \fBclock()\fR повертає приблизний час, використаний програмою. 

.SH " ПОВЕРНЕНІ ЗНАЧЕННЯ "
.PP
Значення, що повертається, є використаним до даного моменту часом процесору типу \fBclock_t\fR; щоб отримати кількість використаних секунд, поділіть на \fBCLOCKS_PER_SEC\fR. Якщо процесорний час недоступний або його значення неможливо відпбразити, функція поверне значення (\efBclock_t\ef)\-1. 

.SH " ВІДПОВІДНІСТЬ СТАНДАРТАМ "
.PP
ANSI C. POSIX вимагає, щоб \fBCLOCKS_PER_SEC\fR дорівнювало 1000000, незалежно від дійсної частоти. 

.SH " ПРИМІТКИ "
.PP
Стандарт C дозволяє довільні значення напочатку програми; відніміть значення, повернене викликом \fBclock()\fR напочатку програми для того, щоб добитися максимальної портабельності. 

Зауважте, що час може переводитись на початок, так, скажімо, на 32\-бітних системах, де \fBCLOCKS_PER_SEC\fR дорівнює 1000000, ця функція поверне те саме значення, приблизно, кожні 72 хвилини. 

На деяких інших втіленнях, значення, повернене \fBclock()\fR, також включає час дочірних процесів, чий статус отримано через \fBwait()\fR (або подібний виклик). Лінукс не включає час очікуваних дочірніх процесів у значення, повернене \fBclock()\fR. Функція \fBtimes()\fR, яка відверто повертає (окрему) інформацію про програму\-викликача і її дочірні процеси, можливо підійде краще в цьому випадку. 

.SH " ПРИКЛАД "
.PP

.RS
.nf

#include<time.h>
#include<stdio.h>

int main(void)
{
    clock_t ticks1, ticks2;

    ticks1=clock();
    ticks2=ticks1;
    while((ticks2/CLOCKS_PER_SEC\-ticks1/CLOCKS_PER_SEC)<1)
        ticks2=clock();

    printf("Took %ld ticks to wait one second.\en",ticks2\-ticks1);
    printf("It should be the same as CLOCKS_PER_SEC which is %ld.\en",
            CLOCKS_PER_SEC);
    return 0;
}

.fi
.RE
 

.SH " ДИВІТЬСЯ ТАКОЖ "
.PP
\fBgetrusage\fR(2), \fBtimes\fR(2)  

