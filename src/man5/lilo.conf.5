." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "lilo.conf" "5" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"
{{TODO}}
{{Оновити}}

.SH "НАЗВА"
.PP
lilo.conf \- файл настройки lilo 

.SH "ОПИС"
.PP

Цей файл, звично \fI/etc/lilo.conf\fR , читає встановник завантажника (boot loader) 'lilo' (дивіться \fBlilo\fR(8) ). 

Файл може виглядати так: 

.SS 
.RS
.nf

#lilo.conf
#
#  ґлобальні опції:
boot=/dev/hda
prompt
timeout=150
lba32
compact
vga=normal
root=/dev/hda1
read\-only
menu\-title=" Комп'ютер Василя "
#
#  образи ядра для вантаження:
image=/boot/zImage\-1.5.99
     label=try
image=/boot/zImage\-1.0.9
     label=1.0.9
image=/tamu/vmlinuz
     label=tamu
     root=/dev/hdb2
     vga=ask
#
#  інші операційні системи:
other=/dev/hda3
     label=dos
other=/dev/hdb5
     label=os2
     loader=/boot/os2_d.b
     table=E:

.fi
.RE

Цей файл настройки задає, що lilo вживає Головний  Запис Вантаження (MBR) на /dev/hda. (Для обговорення різних шляхів вжитку lilo, і взаємодії з іншими операційними системами, дивіться user.tex з документації lilo.) 

При вантаженні, завантажник видає запрошення   \fIboot:\fR і чекає поки ви наберете мітку ядра (і будь\-які опції), яке ви хочете завантажити. В будь\-який момент натисніть [Tab] для списку міток ядер та інших систем. Або, якщо встановлено завантажник \fBboot\-menu.b\fR, ви отримаєте  меню для вибору варіантів вантаження. Заголовок цього меню перевизначається в цьому файлі настройки. Якщо ви нічого не введете, звичний образ ядра, перший вказаний, (/boot/zImage\-1.5.99) завантажиться після затримки у 15 секунд (150 децисекунд). В lilo.conf можна вказати до 16 образів. 

Як ви вже бачили, файл настройки починається з ґлобальний опцій (верхні 9 рядків прикладу), далі йдуть описи різних образів. Опція в описі образу скасовує ґлобальну опцію. 

Рядки коментарів починаються символом "#", їх можна писати будь\-де.  

.SH "ҐЛОБАЛЬНІ ОПЦІЇ"
.PP

Є кілька допустимих ключових слів. Опис нижче майже дослівно з user.tex (лише трохи скорочений). 

.SS "backup=" \fI<файл\-резерву>\fR

.PP

Копіювати початковий завантажник до \fIфайлу\-резерву\fR (що може бути й пристроєм, наприклад \fI/dev/null\fR ), а не до \fI/boot/boot.NNNN\fR . 

.SS "boot=" \fI<пристрій\-вантаження>\fR

.PP

Задає назву пристрою (наприклад розділ жорсткого диску) що містить завантажник. Якщо  ключове слово опущене, завантажник читається з (і, можливо, пишеться на) пристрій нині змонтований коренем. 

.SS "change\-rules"

.PP

Визначає зміни номерів розділів при завантаженні ('ховання'). 

.RS
.nf

change\-rules
   reset
   type=DOS12
      normal=1
      hidden=0x11
   type=DOS16_small
      normal=4
      hidden=0x14
   type=DOS16_big
      normal=0x06
      hidden=0x16

.fi
.RE

Цей
витяг з файлу настройки вказує, що всі звичні \fIправила\-зміни (change\-rules)\fR видаляються ("reset"), і задає правила зміни для трьох типів  розділів.  Без \fIreset\fR, ці три типи додалися б до існуючих звичних правил зміни. Переважно, звичних правил  досить.  Рядки, що задають типи розділів вжиті в секції \fIchange\fR (див. далі), мають суфікси "_normal" або "_hidden". Дивіться частину "Partition type change rules" у user.tex для подробиць. 

.SS "compact"

.PP

Вказує спробувати об'єднати запити читання суміжних секторів у   один запит. Це значно покращує час завантаження і зменшує мапу.   Особливо варто вживати 'compact' при завантаженні з дискети.  

.SS "default=" \fI<назва>\fR

.PP

Зробити вказаний образ образом для звичного вантаження. Якщо 'default' опущено, використовується перший образ у файлі настройки. 

.SS "delay=" \fI<дсек>\fR

.PP

Вказує яку кількість десятих частин секунди завантажник буде  чекати перед вантаженням звичного образу. Це важливо на системах, що  одразу вантажаться з жорсткого диску. Завантажник не чекає, якщо 'delay' опущено чи виставлено нулем, але на його поведінку може впливати задання опцій \fIprompt\fR  і  \fItimeout\fR.

.SS "disk=" \fI<назва\-пристрою>\fR

.PP

Задає нетипові параметри для вказаного диска. Дивіться частину "Disk geometry" в user.tex для подробиць. Особливо корисний параметр 'bios='. BIOS нумерує ваші диски 0x80, 0x81 тощо, і неможливо визначити який диск Linux відповідає якому диску BIOS  (оскільки це залежить від типу та настройки BIOS), тому, якщо у вас незвична настройка, ви маєте задати відповідність між дисками Linux та дисками BIOS. Наприклад, 
." .sp 

.RS
.nf

       disk=/dev/sda
            bios=0x80
       disk=/dev/hda
            bios=0x81

.fi
.RE

." .sp 

вказує, що ваш диск SCSI є першим диском  BIOS, а ваш (перший головний \- primary master) диск IDE є другим диском BIOS. 

.SS "disktab=" \fI<disktab\-файл>\fR

.PP

Задає таблицю параметрів диску.  При опущенні використовується \fI/etc/disktab\fR .  Користати цю опцію не радиться. 

.SS "fix\-table"

.PP

Дозволяє lilo виставляти 3 В(имірні) адреси в таблицях розділів. Кожний  запис розділу містить  3В (сектор/голівка/циліндр) та лінійну  адреси першого та останнього сектору розділу. Якщо  розділ не вирівняний на границю доріжки і якщо деякі інші операційні системи  (наприклад PC/MS\-DOS чи OS/2) вживають цей диск, вони можуть змінити  3В адресу. lilo може зберігати свій сектор завантаження лише на розділах з  відповідністю між обома адресами. lilo виправляє невірні початкові 3В   адреси якщо виставлено 'fix\-table'.  ПОПЕРЕДЖЕННЯ: Це не гарантує, що інша операційна система не  пробуватиме знову встановити адресу. Теж, ймовірно, це виправлення може мати  іншу, неочікувану, побічну дію. Вірне поладження \-   перерозділити диск програмою, що вирівнює розділи відносно доріжок.  Також, з певними дисками (наприклад, деякими великим дисками EIDE з включеним перетворенням адреси), за певних умов, неминуче мати  суперечливі записи таблиці розділів. 

.SS "force\-backup=" \fI<файл\-резерву>\fR

.PP

Як 'backup', але перезаписати існуючий старий файл резерву. 

.SS "ignore\-table"

.PP

Каже lilo іґнорувати хибні таблиці розділів.  

.SS "install=" \fI<завантажник>\fR

.PP

Встановити вказаний файл новим завантажником. Починаючи з версії 21.5, є два завантажника: \fIboot\-text.b\fR та \fIboot\-menu.b\fR, і \fIboot.b\fR є символьним посиланням до останнього. Обидва завантажника однаково дозволяють опції командного рядка ядра. Обидва мають повну  підтримку послідовного порту (serial line) (див. \fBserial=\fR далі), хоча можливість меню не доступна на послідовному терміналі. Попередній наявний для строгої сумісності з попередніми версіями LILO. При опущенні 'install', \fI/boot/boot.b\fR вибирається за замовчанням. 

.SS "lba32"

.PP

Створювати 32\-бітні Логічні Адреси Блоку (LBA) замість адрес сектор/голівка/циліндр.  Якщо BIOS підтримує пакетне адресування, пакетні виклики можуть бути використані  для доступу до диску. Це дозволяє завантаження з будь\-якого розділу диску, що має більш ніж 1024 циліндри. Якщо  BIOS не підтримує пакетне адресування, адреси 'lba32'  перетворюються в C:H:S, як і лінійні ('linear'). Всі посилання на дискету залишаються в формі C:H:S.  Радиться вживати  'lba32' на всіх системах після 1998. 

.SS "linear"

.PP

Створювати лінійні адреси секторів замість адрес сектор/голівка/циліндр. Лінійні адреси перетворюються під час запуску і не  залежать від геометрії диску. Вживаючи 'linear' на великих дисках, \fI/sbin/lilo\fR може створити посилання до недоступних зон диску, оскільки 3В адреси сектора не відомі до завантаження. 'lba32' уникає багатьох таких пасток вживаючи пакетне адресування, але потребує сучасний BIOS. 

.SS "lock"

.PP

Вмикає автоматичий запис командних рядків завантаження як  звичних для наступних завантажень. Таким чином, lilo "замикає" вибір   поки він не буде перевизначений руками. 

.SS "map=" \fI<файл\-мапи>\fR

.PP

Вказує положення файлу мапи. Якщо  'map' опущено, вживається \fI/boot/map\fR.  

.SS "menu\-title=" \fI<рядок\-заголовку>\fR

.PP

Вказує рядок заголовку (до 37 символів) для меню завантаження. Цей заголовок замінює звичний рядок заголовку "LILO Boot Menu" . Якщо \fIboot\-menu.b\fR не встановлений завантажником (Див. опцію \fIinstall=\fR) , цей рядок не має дії. 

.SS "menu\-scheme=" \fI<кольоровий\-мотив>\fR

.PP

Звичний кольоровий мотив меню завантаження може бути перевизначений на VGA дисплеях цією опцією. (Кольоровий мотив MDA дисплеїв сталий.) Загалом, рядок \fIкольоровий\-мотив\fR має таку форму: 
." .sp 

.RS
.nf

     <текст>:<підсвітка>:<рамка>:<заголовок>

.fi
.RE

." .sp 

де кожна складова є двома символами що визначають  колір тексту і тла. Лише перша складова обов'язкова.  Звично підсвітка зворотня до кольору тексту;  колір тексту є звичним кольором для рамки та заголовку. Кольори визначаються літерами \fBkbgcrmyw\fR, \fBK\fR \- чорний, \fBB\fR \- синій, \fBG\fR \- зелений, \fBC\fR \- голубий, \fBR\fR \- червоний, \fBM\fR пурпурний, \fBY\fR \- жовтий та  \fBW\fR \- білий: великими для  яскравого (лише текст), малими для тьмяного. Приклади кольорових мотивів 
." .sp 

.RS
.nf

    menu\-scheme=Wm     яскравий білий на пурпурному
    menu\-scheme=wr:bw:wr:Yr    звичний мотив LILO
    menu\-scheme=Yk:kw    яскраво\-жовтий на чорному

.fi
.RE

." .sp 

Якщо \fIboot\-menu.b\fR не встановлений завантажником , цей рядок не має дії. 

.SS "message=" \fI<файл\-повідомлення>\fR

.PP

Задає файл з повідомленням, що відображається перед  запрошенням завантаження. Повідомлення не виводиться, при очікуванні  натиску shift після виводу "LILO ". У повідомленні, символ FF ([Ctrl L]) очищує локальний екран. Це небажано, коли встановлено завантажник  \fIboot\-menu.b\fR .   Довжина повідомлення  обмежена 65535 байтами. Необхідно оновити файл мапи, якщо  файл повідомлення змінено чи перенесено. 

.SS "nowarn"

.PP

Вимикає попередження про можливі майбутні небезпеки. 

.SS "optional"

.PP

Опція для образу 'optional' (див. далі) застосована до всіх образів. 

.SS "password=" \fI<password>\fR

.PP

Опція для образу 'password=...' (див. далі) застосована до всіх образів. 

.SS "prompt"

.PP

Завантажник видасть запрошення \fIboot:\fR і чекатиме дій користувача (див. \fItimeout\fR далі). перевантаження без втручання неможливі при виставленому 'prompt'  і не виставленому 'timeout'. 

.SS "restricted"

.PP

Опція для образу 'restricted' (див. далі) застосована до всіх образів. 

.SS "serial=" \fI<параметри>\fR

.PP

Дозволяє керування через послідовний порт. Заданий послідовний порт ініціалізується і завантажник приймає ввід з нього та з  клавіатури ПК. Посилання розриву (break) послідовним портом відповідає  натисненню клавіші shift в консолі для отримання уваги завантажника.  Всі образи завантаження повинні бути захищені паролем якщо доступ послідовним портом  небезпечніший за консоль, наприклад, якщо порт з'эднаний з модемом.  Рядок параметра має наступний синтакс: 
." .sp 

.RS
.nf

    <порт>[,<bps>[<парність>[<біти>]]]

.fi
.RE

." .sp 

<порт>:  номер послідовного порту, починаючи з нуля. 0 відповідає псевдоніму COM1 \- /dev/ttyS0, тощо. Можна вживати всі 4 порти (при наявності). 
." .sp 

<bps>:  швидкість в бодах послідовного порту. Підтримуються наступні :  110, 150, 300, 600, 1200, 2400(звична), 4800, 9600, та  додаткові 19200, 38400 і 57600(56000).  115200 дозволено, але може не працювати з кожним залізом COM портів. 
." .sp 

<парність>:  Парність вживана для послідовного порту. Завантажник іґнорує  парність вводу і відкидає 8\-ий біт. Наступні (великі чи малі)  літери описують парність:  "n" без парності, "e"  перевірка на парність і "o" перевірка на непарність. 
." .sp 

<біти>:  Кількість бітів у символі. Підтримується лише 7 та 8.  Звично 8 , якщо немає парності, 7, якщо перевіряється парність  чи непарність.  
." .sp 

Якщо задано 'serial', значення 'delay' автоматично збільшується до 20. 
." .sp 

Приклад: "serial=0,2400n8" ініціалізує COM1 звичними параметрами. 

.SS "timeout=" \fI<дсек>\fR

.PP

встановлює затримку (в десятих частинах секунди) очікування вводу у запрошенні  \fIboot:\fR.   "timeout" має смисл лише при вказаному  "prompt". Якщо за вказаний час не натиснута клавіша, завантажується  звичний образ. Також, ввід паролю обривається, якщо користувач   не діє задовго. Звична затримка необмежена. 

.SS "verbose=" \fI<число>\fR

.PP

Вмикає багато повідомлень. Більші числа дають докладніший вивід.  Якщо  \-v  додатково вказаний в командному рядку lilo, рівень збільшується відповідно. Максимальний рівень докладності 5.  

Також можна вказати такі параметри настойки ядра : \fBappend\fR ,  \fBramdisk\fR ,  \fBread\-only\fR ,  \fBread\-write\fR ,  \fBroot\fR і \fBvga\fR у секції ґлобальних опцій. Вони вживаються як звичні, якщо не вказані у секціях настройки відповідних образів ядра.  

.SH "СЕКЦІЇ ДЛЯ КОЖНОГО ОБРАЗУ"
.PP

Секція образу починається рядком 
." .sp 

.RS
.nf

    image=<назва_шляху>

.fi
.RE

." .sp 

що вказує файл чи пристрій, що містить образ завантаження ядра Linux,  або рядком 
." .sp 

.RS
.nf

    other=<пристрій>

.fi
.RE

." .sp 

що вказує завантаження довільної системи. 

В першому випадку, якщо рядок \fBimage\fR вказує завантаження з пристою, необхідно вказати проміжок секторів для відображення за  допомогою 
." .sp 

.RS
.nf

    range=<початок>\-<кінець>
    range=<початок>+<кількість_секторів>
    range=<сектор>

.fi
.RE

в третьому випадку, кількість секторів покладається одиниці.  

.SH "ІНША СИСТЕМА"
.PP

У випадку завантаження іншої системи є такі опції: 

.SS "loader=" \fI<ланцюговий\-завантажник>\fR

.PP

Вказує, який вжити ланцюговий завантажник (chain loader). Звично вживається \fI/boot/chain.b\fR .   Цей ланцюговий завантажник не передає дані про розділ  сектору завантаження.  Інший ланцюговий завантажник, \fI/boot/os2_d.b\fR передає дані про диск та розділ у форматі придатному для OS/2 та DOS (див.  \fItable=<letter>\fR далі). 

.SS "table=" \fI<пристрій>\fR

.PP

Вказує пристрій, що містить таблицю розділів.  Завантажник передасть звичні дані про розділ завантаженій  операційній системі, якщо ця змінна опущена. (Деякі операційні системи не мають інших засобів взнати з якого розділу вони завантажені. Наприклад, MS\-DOS звичайно зберігає геометрію диску чи розділу завантаження в своєму секторі завантаження.) Зауважте, що /sbin/lilo треба знов запустити якщо таблиця розділів  на яку посилається 'table' змінена. 

.SS "table=" \fI<буква\-диску>\fR

.PP

Особливий випадок для ланцюгового завантажника \fIos2_d.b\fR.   Визначає літеру диску DOS для розділу, що буде завантажений.   Це \fIобов'язково\fR при завантаженні OS/2, встановленої на розширеному розділі. Букву диску можна вказати як з кінцевою двокрапкою, так і  без неї. 

.SS "change"

.PP

Це ключове слово починає секцію, що описує, як змінюються ідентифікатори основних  розділів, та як основні розділи активуються і деактивуються.  Якщо \fBchange\fR опущено, правила зміни створюються, як при вказаному ключовому слові  \fIautomatic\fR. Наприклад, 

.RS
.nf

   other=/dev/hda2
      label=dos
      table=/dev/hda
      change
        automatic
        partition=/dev/hda1
           set=DOS12_hidden
           deactivate
        partition=/dev/hda2
           set=DOS16_big_normal
           activate

.fi
.RE

вказує,
що при завантаженні /dev/hda2,  будуть задіяні автоматичні правила зміни; додатково, розділ 1, розділ DOS12, буде схований та деактивований.  Також, розділ 2, буде зроблено нормальним та активовано.  Активація ставить прапорець завантаження в  таблиці розділів.  Ключове слово  \fIautomatic\fR може конфліктувати зі звичними правилами зміни, тож рядки \fIset=\fR вище можуть бути зайвими. 

.SS "map\-drive=" \fI<номер>\fR

.PP

Відображає виклики BIOS для вказаного диску до номера диску вказаного  в наступному рядку \fBto=\fR<номер>.  Це  відображення вживане для завантаження операційних систем, таких як DOS, з другого жорсткого диску.  Наступне обмінює диски C: і D:, 
." .sp 

.RS
.nf

   map\-drive=0x80
      to=0x81
   map\-drive=0x81
      to=0x80

.fi
.RE

.SS "unsafe"

.PP

Не звертатись до сектора завантаження при створенні мапи. Це вимикає  деякі перевірки правильності, включно з перевіркою таблиці розділів. Якщо сектор завантаження на пристрої гнучких дисків фіксованого формату, UNSAFE дозволяє  уникнути потреби класти диск, що читається, до пристрою при встановленні мапи.  'unsafe' і 'table' взаємовиключні.  

.SH "СПІЛЬНІ ОПЦІЇ (image= & other=)"
.PP

В обох випадках, \fBimage=\fR  та  \fBother=,\fR  діють наступні опції. 

.SS "label=" \fI<назва>\fR

.PP

Завантажувач використовує назву файлу (без шляху) кожного опису образу для визначення цього образу. Можна задати іншу назву встановивши змінну 'label'. 

.SS "alias=" \fI<назва>\fR

.PP

Друга назва (псевдонім) для того ж елементу задається 'alias'. 

.SS "lock"

.PP

(Див. вище) 

.SS "optional"

.PP

Пропустити образ, якщо він не доступний при створенні мапи. Корисно для пробних ядер, що не завжди можуть бути присутні. 

.SS "password=" \fI<пароль>\fR

.PP

Захистити образ паролем. 

.SS "restricted"

.PP

Для образу потрібний пароль тільки коли в командному рядку  вказані параметри (наприклад 'single'). 

.SH "ОПЦІЇ ЯДРА (image=)"
.PP

Якщо образ завантаження \- ядро Linux, можна передати йому параметри в командному рядку. 

.SS "append=" \fI<рядок>\fR

.PP

Додає вказані опції до рядку параметрів, що передається ядру. Це звично вживається для вказування параметрів заліза, що не може бути  повністю самовизначене, або визначення якого може бути небезпечним. Приклад: 
." .sp 

.RS
.nf

     append="hd=576,64,32"

.fi
.RE

." .sp 

.SS "initrd=" \fI<назва>\fR

.PP

Вказує образ початкового диску в оперативній пам'яті (ramdisk) для завантаження з ядром. Образ міститиме модулі, потрібні під час завантаження, такі як драйвери сітки та scsi.  Дивіться сторінку допомоги для \fImkinitrd(8)\fR. 

.SS "literal=" \fI<рядок>\fR

.PP

Як 'append', але видаляє всі інші опції (наприклад установку кореневого  пристрою). Оскільки 'literal' може ненароком видалити важливі опції, її не можна вказувати в секції ґлобальних опцій. 

.SS "ramdisk=" \fI<розмір>\fR

.PP

Вказує розмір (наприклад, "4096k") необов'язкового RAM диску. Значення  0 вказує, що RAM диск не треба створювати. Якщо ця змінна опущена,  розмір RAM диску настроюється за образом завантаження. 

.SS "read\-only"

.PP

Вказує під'єднувати кореневу файлову систему лише для читання. Звично, процедура завантаження системи потім перепід'єднує кореневу файлову систему  для читання/запису (наприклад, після fsck). 

.SS "read\-write"

.PP

Вказує під'єднувати кореневу файлову систему для читання/запису. 

.SS "root=" \fI<кореневий\-пристрій>\fR

.PP

Вказує пристрій для під'єднання кореневим.  Якщо вказана спеціальна назва \fBcurrent\fR, то кореневий пристрій встановлюється той, що в цей момент під'єднаний кореневим.  Якщо корінь був змінений за допомогою \-r , вживається відповідний пристрій. Якщо змінна 'root' опущена, використовується настройка кореневого пристрою, що міститься в образі ядра. (І встановлюється під час компіляції змінною ROOT_DEV у Makefile ядра, і може бути змінена потім програмою  \fBrdev\fR(8) ). 

.SS "vga=" \fI<режим>\fR

.PP

Вказує  який текстовий режим  VGA вибирати при завантаженні.   Розпізнаються наступні значення (реґістр не має значення):  

\fBnormal\fR : звичайний текстовий режим 80x25.  

\fBextended\fR  (чи  \fBext\fR ): текстовий режим 80x50. 

\fBask\fR : запитати користувача при завантаженні. 

<число>: Вибрати відповідний текстовий режим. Список наявних режимів  можна отримати завантаживши з  \fIvga=ask\fR і натиснувши [Enter].

Якщо ця змінна опущена, використовується настройка VGA режиму, що   міститься в образі ядра. (І встановлюється під час компіляції змінною SVGA_MODE у Makefile ядра, і може бути змінена потім програмою  \fBrdev\fR(8) ).  

.SH "ДИВИСЬ ТАКОЖ"
.PP

\fBlilo\fR(8), \fBmkinitrd\fR(8), \fBrdev\fR(8). 
.br
 
lilo йде з дуже докладною документацією, малу частину якої ви прочитали вище (lilo\-21.6.2)

Переклав Ілля Корнійко  <k_ilya@ukr.net> 

