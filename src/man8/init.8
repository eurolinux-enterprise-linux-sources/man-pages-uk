." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "init" "8" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"

." INIT 8 "Linux System Administrator's Manual" 

.SH "Назва"
.PP
init, telinit \- започатковує контроль над процесами

.SH "Звід"
.PP
\fB/sbin/init\fR [ \fB\-a\fR ] [ \fB\-s\fR ] [ \fB\-b\fR ] [ \fB\-z\fR \fIxxx\fR ] [ \fB0123456Ss\fR ]
.br

\fB/sbin/telinit\fR [ \fB\-t\fR \fIсекунд\fR ] [ \fB0123456sSQqabcUu\fR ]

.SH "Опис"
.PP

.SS "Init"
.PP
\fBInit\fR є батьківським для всіх процесів. Його головне завдання
полягає у створенні інших процесів, перелічених у файлі 
/etc/inittab (див. \fBinittab\fR(5)). Цей файл, як правило, 
містить записи що призводять до запуску багатьох \fBgetty\fR для кожної (комунікаційної) лінії по якій користувачі можуть входити до
системи. Також він керує автономними процесами, необхідними 
кожній окремій системі.

.SH "Робочі рівні"
.PP
\fIРобочі рівні\fR \- це програмна конфігурація системи, яка дозволяє
існування лишень певних груп процесів. Процеси запускаються
\fBinit\fR у відповідності з кожним робочим рівнем, означеним у
\fI/etc/inittab\fR. Init може знаходитись у одному з восьми робочих
рівнів: \fB0\-6\fR і \fBS\fR або \fBs\fR. Робочий рівень може бути змінено якщо
привілейований користувач виконає \fBtelinit\fR, який в свою чергу 
пошле відповідний сигнал \fBinit\fR, вказуючи до якого саме робочого
рівня потрібно перейти.

Робочі рівні \fB0\fR, \fB1\fR і \fB6\fR резервовані. Рівень \fB0\fR використовується для
зупинки системи, \fB6\fR \- для її рестарту, тоді як \fB1\fR \- для того щоб
помістити систему в однокористувацький режим. Робочий рівень \fBS\fR
не є для безпосереднього вжитку, скоріше його створено для
скриптів що буде виконано під час входу до \fB1\fR\-го робочого рівня.
Для додаткової інформації також перегляньте сторінки \fBshutdown\fR(8)
та \fBinittab\fR(5).

Робочі рівні 7\-9 також чинні, але їх не документовано. 
Традиційні варіанти Юніксів не послуговуються ними. Для цікавих,
робочі рівні \fBS\fR і \fBs\fR, насправді, являються одним і тим самим.
Внутрішньо, вони розглядаються як синоніми для того самого 
робочого рівня.  

.SH "Завантаження"
.PP
Останнім кроком завантаження ядра буде виклик \fBinit\fR, який розгляне
\fI/etc/inittab\fR щоб з'ясувати чи присутній там рядок із \fBinitdefault\fR
(див. \fBinittab\fR(5)). Запис \fBinitdefault\fR вказує на робочий рівень 
системи за замовчуванням. Якщо такий рядок відсутній (або немає
\fI/etc/inittab\fR взагалі), робочий рівень необхідно буде ввести у 
системній консолі.

Робочий рівень \fBS\fR призначено для того щоб ввести систему у 
однокористувацький режим і не вимагає файлу \fI/etc/inittab\fR. У 
однокористувацьому режимі буде викликано \fB/sbin/sulogin\fR на
\fI/dev/console\fR.

Під час входу у однокористувацький режим, \fBinit\fR прочитає \fBioctl\fR(2)
консолі з \fI/etc/ioctl.save\fR. Якщо цей файл відсутній, \fBinit\fR 
встановить лінію до 9600 бод із \fBCLOCAL\fR параметрами. Під час
виходу з однокористувацкого режиму, \fBinit\fR збереже \fIioctl\fR\-параметри
консолі у цьому файлі для пізнішого використання у 
однокористувацьких сесіях.

Перший раз входячи у багатокористувацький режим, \fBinit\fR виконає
\fBboot\fR та \fBbootwait\fR пункти (з \fI/etc/inittab\fR) щоб забезпечити монтування
файлових систем до того як користувачі зможуть зареєструватись.
Потім усі пункти що відповідають встановленому робочому рівневі
будуть переглянуті.

Під час започатковування нових процесів, \fBinit\fR перевіряє на наявність 
файлу \fI/etc/initscript\fR. Якщо такий присутній, \fBinit\fR використає його для
запуску процесу.

Кожний раз як дочірній процес завершується, \fBinit\fR занотовує це разом
з причиною чому він припинив свою роботу у \fI/var/run/utmp\fR та 
\fI/var/log/wtmp\fR, за умови що ці файли існують.

.SH "Зміна робочого рівня"
.PP
Після запуску всіх вказаних йому процесів, \fBinit\fR очікує припинення
роботи одного з дочірних процесів, сигналу втрати живлення або
доки \fBtelinit\fR не вкаже змінити системний робочий рівень. Якщо
відбудеться одна з вищевказаних умов, він перегляне знову файл
\fI/etc/inittab\fR. Нові пункти можуть бути доданими до цього файлу у
будь\-який момент, тим не менш, \fBinit\fR очікує одну з трьох вказаних 
нами умов щоб його переглянути. При необхідності негайної реакції,
нам потрібно заставити \fBinit\fR перечитати \fIinittab\fR командою \fBtelinit Q\fR
або \fBtelinit q\fR.

Якщо \fBinit\fR, не знаходячись у однокористувацькому режимі, отримає
сигнал втрати живлення (SIGPWR), він прочитає файл \fI/etc/powerstatus\fR.
Після цього він виконає команду, основуючись на вмістові цього
файлу:

.TP
.B F(AIL)
 Живлення відсутнє, UPS (резервна батарея) підтримує живлення. Буде виконано пункти. \fBpowerwait\fR і \fBpowerfail\fR.

.TP
.B O(K)
 Живлення відновлено, виконає пункт \fBpowerokwait\fR.

.TP
.B L(OW)
 Живлення виходить з ладу і батарея UPS недостатньо заряджена. Буде виконано пункт \fBpowerfailnow\fR.

Якщо \fI/etc/powerstatus\fR відсутній або містить щось інше замість літер
\fBF\fR, \fBO\fR або \fBL\fR, \fBinit\fR поводитиметься так ніби він прочитав літеру \fBF\fR.

Використання \fBSIGPWR\fR і \fI/etc/powerstatus\fR не заохочується. Якщо
необхідна взаємодія з \fBinit\fR, краще скористатися 
контрольним каналом \fI/dev/initctl\fR (подивіться вихідний код пакету sysvinit щодо
документації).

Коли від \fBinit\fR вимагають поміняти робочий рівень, він посилає
попереджувальний сигнал \fBSIGTERM\fR всім процесам, не означеним у
новому рівні. Після цього почекає 5 секунд до того як примусово
припинити ці процеси з допомогою \fBSIGKILL\fR. Зауважте що \fBinit\fR 
припускає що всі ці процеси (і їхні нащадки) знаходяться у тій
самій групі процесів що була створена для них \fBinit\fR. Якщо якийсь процес
змінить власну належність до групи, він не отримає цих сигналів.
Такі процеси необхідно завершити окремо. 

.SH "Telinit"
.PP
\fI/sbin/telinit\fR є лише посиланням на \fI/sbin/init\fR. \fBtelinit\fR візьме лише
один знак як аргумент і вкаже \fBinit\fR здійснити відповідну дію. Наступні
аргументи служать вказівкою \fBtelinit\fR:

.TP
.B 0,1,2,3,4,5 або 6
 Вкаже \fBinit\fR перейти до відповідного робочого рівня.

.TP
.B a,b,c
 Вкаже \fBinit\fR обробити лише ті пункти з \fI/etc/inittab\fR що мають робочий
рівень як \fIa\fR, \fIb\fR або \fIc\fR. (?)

.TP
.B Q або q
 Вкаже \fBinit\fR перечитати \fI/etc/inittab\fR.

.TP
.B S або s
 Вкаже \fBinit\fR перейти до окднокористувацького режиму.

.TP
.B U або u
 Вказує \fBinit\fR перезапустити самого себе (зберігаючи стан (?)). Перегляд /etc/inittab не відбудеться. Поточний робочий рівень повинен бути одним з \fBSs12345\fR, в протилежному випадку запит буде просто ігноровано.

\fBtelinit\fR може також вказати \fBinit\fR скільки часу потрібно почекати
між посланням сигналів \fBSIGTERM\fR і \fBSIGKILL\fR. За замовчуванням, час
дорівнюватиме 5\-и секундам, але його можна змінити з допомогою
опції \fB\-t\fR \fIсекунд\fR.

\fBtelinit\fR може бути викликаним лише користувачами з відповідними
привілеями.

Бінарій \fBinit\fR перевіряє чи він був викликаний як \fBinit\fR чи \fBtelinit\fR
подивившись на власний \fIідентифікатор процесу\fR (process ID). 
ID справжнього \fBinit\fR завжди дорівнюватиме 1. З цього також слідує
що замість виклику \fBtelinit\fR можна безпечно викликати \fBinit\fR, просто
як синонім\-скорочення.

.SH "Середовище"
.PP
\fBInit\fR встановлює наступні змінні середовища для всіх свої нащадків:

.TP
.B PATH
  \fI/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin\fR

.TP
.B INIT_VERSION
 Зберігає версію \fBinit\fR. Корисне також для вияснення чи певний скрипт
був запущений безпосередньо з \fBinit\fR.

.TP
.B RUNLEVEL
 Поточний робочий рівень системи.

.TP
.B PREVLEVEL
 Попередній робочий рівень (після зміни робочих рівнів).

.TP
.B CONSOLE
 Вказує на системну консоль. Насправді успадковується від ядра; тим не менш, якщо не є встановленою, \fBinit\fR надасть цій змінній значення `/dev/console'.

.SH "Прапорці завантаження"
.PP
У вас є можливість передати певну кількість прапорців \fBinit\fR з
керівника завантаження (напр. LILO). \fBInit\fR розпізнає наступні прапорці:

.TP
.B \-s, S, single
 Завантаження у однокористувацький режим. У цьому режимі, буде прочитано \fI/etc/inittab\fR і відповідні стартові rc\-скрипти буде виконано перед тим як надати оболонку однокористувацького режиму.  

.TP
.B 1\-5
 Робочий рівень у який завантажитись.

.TP
.B \-b, emergency
 Завантажитись безпосередньо у однокористувацьку оболонку без виконання жодних стартових скриптів.

.TP
.B \-a, auto
 LILO автоматично додає слово "\fBauto\fR" як параметр \fBinit\fR на командній лінії, якщо завантаження ядра пройшло без втручання користувача. В такому випадку \fBinit\fR також встановить змінну середовища \fBAUTOBOOT\fR до "yes". Зауважте, це не використовується як засіб безпеки, \- користувач сам може внести "\fBauto\fR" або \fB\-a\fR на командній лінії.  

.TP
.B \-z \fIxxx\fR
 Аргументи до \fB\-z\fR буде ігноровано. Ви можете використовувати це просто щоб продовжити трохи рядок команди, тож вона займе трохи більше місця у стеку. У такому разі \fBinit\fR може маніпулювати командний рядок таким чином щоб \fBps\fR(1) показувала поточний робочий рівень.

.SH "Пристрої"
.PP
Init слухає \fIfifo\fR\-файл з \fI/dev\fR каталогу \- \fI/dev/initctl\fR, на предмет 
повідомлень. \fBtelinit\fR також використовує цей пристрій для
комунікації з \fBinit\fR. Даний інтерфейс недостатньо документовано.
(Ті хто зацікавлений, повинні передивитись файл initreq.h з 
src/ підкаталогу у ієрархії вихідного коду init/)

.SH "Сигнали"
.PP
\fBInit\fR відповідає на наступні сигнали:

.TP
.B SIGHUP
 При отриманні цього сигналу, \fBinit\fR прочитає \fI/etc/initrunlvl\fR і \fI/var/log/initrunlv\fR. Якщо хоч один з цих файлів присутній і містить знак робочого рівня у ASCII формі (звичайний текст), \fBinit\fR перейде до нового рівня. \fBЦя поведінка збережена лише для сумісності зі старшими системами\fR. За нормальних обставин (тобто ці файли відсутні), \fBinit\fR поводитиметься так ніби  \fBtelinit q\fR було виконано.

.TP
.B SIGUSR1
 При отриманні цього сигналу, \fBinit\fR закриє і відкриє назад власний контролюючий \fIfifo\fR\-файл, \fI/dev/initctl\fR. Може  використовуватись із стартовими скриптами у випадку перемонтовування \fI/dev\fR.

.TP
.B SIGINT
 Як правило, ядро пошле цей сигнал \fBinit\fR після притиску клавіш CTRL\-ALT\-DEL. Це активує дію \fBctrlaltdel\fR з \fI/etc/inittab\fR.

.TP
.B SIGWINCH
 Ядро пошле цей сигнал після притиску клавіші \fIKeyboardSignal\fR. Це активує дію \fBkbrequest\fR з \fI/etc/inittab\fR.

.SH "Відповідність"
.PP
\fBInit\fR є сумісним з System V init. Працюватиме разом з скриптами
з \fI/etc/init.d\fR і \fI/etc/rc{рівень}.d\fR каталогів. Якщо ваша система
використовує цю умовність, каталог /etc/init.d повинен містити
файл README, який пояснюватиме як ці скрипти працюють.

.SH "Файли"
.PP
/etc/inittab
.br

/etc/initscript
.br

/dev/console
.br

/etc/ioctl.save
.br

/var/run/utmp
.br

/var/log/wtmp
.br

/dev/initctl

.RS
.nf
 

.fi
.RE

.SH "Попередження"
.PP
\fBInit\fR припускає що процеси і їхні нащадки залишаються у тій 
самій групі процесів яка була для них створена \fBinit\fR. Якщо
процеси поміняють групу, \fBinit\fR не зможе припинити їх і ви
можете опинитись у ситуації коли два різні процеси зчитуватимуть
з тієї самої лінії терміналу. (?)

.SH "Діагностика"
.PP
Якщо \fBinit\fR виявить що він постійно перезапускає один з пунктів
з \fI/etc/inittab\fR більше ніж 10 раз за 2 хвилини, він вважатиме 
що з'явилась помилка у командному рядку. \fBInit\fR виведе повідомлення
про помилку на системній консолі і відмовиться перезапускати
цей рядок на протязі 5\-и хвилин, або до отримання сигналу.
Це запобігає споживанню системних ресурсів у випадку якщо
хтось зробить синтаксичну помилку у \fI/etc/inittab\fR або якась
програма, вказана там, не присутня більше.

.SH "Автор"
.PP
Miquel van Smoorenburg (miquels@cistron.nl), оригінальна сторінка посібника була написана Michael Haardt (u31b3hs@pool.informatik.rwth\-aachen.de).

Переклав Віталій Цибуляк (vi@uatech.atspace.com). 

