." © 2005-2007 DLOU, GNU FDL
." URL: <http://docs.linux.org.ua/index.php/Man_Contents>
." Supported by <docs@linux.org.ua>
."
." Permission is granted to copy, distribute and/or modify this document
." under the terms of the GNU Free Documentation License, Version 1.2
." or any later version published by the Free Software Foundation;
." with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
." 
." A copy of the license is included  as a file called COPYING in the
." main directory of the man-pages-* source package.
."
." This manpage has been automatically generated by wiki2man.py
." This tool can be found at: <http://wiki2man.sourceforge.net>
." Please send any bug reports, improvements, comments, patches, etc. to
." E-mail: <wiki2man-develop@lists.sourceforge.net>.

.TH "mount" "8" "2007-10-27-16:31" "© 2005-2007 DLOU, GNU FDL" "2007-10-27-16:31"
{{TODO}}
{{UPDATE}}

." .\" Всі права застережено (с) Andries Brouwer 

." .\" 

." .\" Ця довідка є частковим відтворенням довідки  

." .\" (с) 1980, 1989, 1991 Регентів Університету штату Каліфорнія 

." .\" яка суттєво змінена Ріком Фейсом (Rik Faith) та мною. 

." .\" (Можливо не залишилось нічого з BSD ліцензії.) 

." .\" Частини тексту було написано Вернером Альмесбергером (Werner Almesberger), 

." .\" Римі Кардом (Remy Card), Стефеном Твіді (Stephen Tweedie), та Еріком  

." .\" Янгдейлом (Eric Youngdale). 

." .\" 

." .\" Це є вільна документація; Ви можете поширювати її та/або змінювати її 

." .\" згідно з умовами Загальної Публічної Ліцензії GNU (GNU General Public  

." .\" License), яка друкується Фундацією Вільного Програмного Забезпечення (Free 

." .\" Software Foundation), версії 2, або будь-якою новішою (на Ваш погляд). 

." .\" 

." .\" Посилання Загальної Публічної Ліцензії GNU (GNU General Public License) на  

." .\" "об'єктний код"(object code) та "файли, що виконуються"(executables)  

." .\" тлумачаться як результат довільного форматування документів або системи 

." .\" типографського набору, яка містить в собі допоміжний та друкований  

." .\" результат. 

." .\" 

." .\" Цей довідник розповсюджується з надією, що він буде корисним, однак БЕЗ 

." .\" ЖОДНИХ ЗАПЕВНЕНЬ; навіть без КУПІВЕЛЬНОГО ЗАПЕВНЕННЯ чи ПРИДАТНОСТІ  

." .\" ІНДИВІДУАЛЬНИМ ЦІЛЯМ. За іншими деталями зверніться до Загальної Публічної 

." .\" Ліцензії GNU (GNU General Public License). 

." .\" 

." .\" Ви повинні були отримати копію Загальної Публічної Ліцензії GNU (GNU General 

." .\" Public License) разом з цим довідником; якщо ж Ви її не отримали, напишіть 

." .\" до Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. 

." .\" 

." .\" 960705, aeb: версія для mount-2.7g 

." .\" 970114, aeb: xiafs та ext є відсутніми; додано підтримку romfs 

." .\" 970623, aeb: параметр -F 

." .\" 970914, reg: параметр -s 

." .\" 981111, K. Гарлофф (K. Garloff): /etc/filesystems 

." .\" 990111, aeb: додано /sbin/mount.smbfs 

." .\" 990730, Ян Дронеауд (Yann Droneaud) <lch@multimania.com>: оновлений довідник 

." .\" 991214, Елронд (Elrond) <Elrond@Wunder-Net.org>: додано трішки документації стосовно devpts 

." .\" 010725, Нікіта Данілов (Nikita Danilov) <NikitaDanilov@Yahoo.COM>: параметри reiserfs 

." .\" 011124, Карл Ейхвалдер (Karl Eichwalder) <ke@gnu.franken.de>: параметри tmpfs 

." .\" 

." .TH MOUNT 8 "14 вересня 1997" "Лінакс 2.0" "Довідник Лінакс Програміста" 

.SH " НАЗВА "
.PP
mount \- приєднати файлову систему

.SH " КОРОТКИЙ ОГЛЯД "
.PP
\fBmount [\-lhV]\fR 

\fBmount \-a [\-fFnrsvw] [\-t \fR \fIтип\fR \fBвфс]\fR 
.br
 \fBmount [\-fnrsvw] [\-o \fR \fIпараметри\fR \fB [,...]] \fR \fIпристрій \fR \fB|\fR \fI тека\fR 
.br
 \fBmount [\-fnrsvw] [\-t \fR \fIтип\fR \fBвфс\fR \fI] [\-o \fR \fBпараметри\fR \fI] \fR \fBпристрій тека\fR 

.SH " ОПИС "
.PP
Усі файли доступні у Unix системах, впорядковані у одне велике дерево, ієрархію файлів, яка починається з \fB/.\fR Ці файли можуть поширюватись на декілька пристроїв. Команда \fBmount\fR приєднує файлову систему, яка знаходиться на пристрої, до великого файлового дерева. А команда \fBumount(8)\fR навпаки, від'єднує її.  Звичайна форма запису команди \fBmount\fR є 

.br
 \fBmount \-t\fR \fI тип пристрій тека\fR 

Дана команда наказує ядру приєднати файлову систему, яка розміщена на \fIпристрої\fR (певного \fIтипу\fR ), до \fIтеки\fR . При цьому попередній вміст теки (якщо такий є) а також власник та вигляд \fIтеки\fR стають невидимими доти, поки ця файлова система залишається під'єднаною, а сама \fIтека\fR є коренем файлової системи на \fIпристрої.\fR Однак існує три форми запиту, які насправді нічого не приєднують  

.br
 \fBmount \-h\fR 

друкує довідкову інформацію 

.br
 \fBmount \-V\fR 

друкує поточну версію команди  \fBmount\fR та 

\fBmount [\-l] [\-t\fR \fI тип\fR\fB]\fR 

перераховує всі файлові системи вказаного \fIтипу\fR . Параметр \-l додає квадратні дужки у список (для файлових систем ext2, ext3 та XF). Дивіться далі.  
." .\" Насправді починаючи з версії 2.3.99. Спочатку синтаксис виглядав таким чином 

." .\" mount -t прив'язка 

Починаючи з Лінакс 2.4.0, з'явилась можливість переприєднати частину ієрархії файлів у інше місце. Синтаксис виглядає так: 

.br
 \fBmount \-\-bind стара_тека нова_тека\fR 

Файлова система \fIproc\fR не пов'язана з жодним пристроєм у Вашій системі, тому при її приєднанні можна використовувати термін \fIproc\fR замість означення пристрою. (Використання звичного терміну \fInone\fR є менш вдалим; повідомлення про помилку 'none busy' (не використовується), яке повертає команда \fBumount\fR може ввести в оману.)  До більшості пристроїв звертаються за іменем файлу (або спеціального блокового пристрою), наприклад \fI/dev/sda1\fR однак з цим пов'язано певні можливості. Наприклад, у випадку приєднання NFS \fIпристрій\fR може виглядати як \fIknuth.cwi.nl:/тека\fR . Також можна вказувати на спеціальний блоковий пристрій, використовуючи позначку його тому чи UUID (дивіться нижче опис параметрів \-L та \-U).  Файл \fI/etc/fstab\fR (детальніше дивіться у \fBfstab(5)),\fR може містити рядки, які описують пристрої, що переважно приєднуються та їх параметри. Цей файл використовується трьома способами: 

(i) Команда 

.br
 \fBmount \-a [\-t \fR \fIтип\fR \fB]\fR

\fI(переважно\fR \fBзастосовується\fR \fIу\fR \fBскрипті\fR \fIзавантаження)\fR \fBприєднує\fR \fIвсі\fR \fBфайлові\fR \fIсистеми\fR перелічені у \fIfstab ,\fR окрім тих, які містять в рядку ключове слово noauto. Додавши параметр \fB\-F ,\fR створимо розгалуження приєднаних пристроїв, таким чином одночасно приєднавши файлові системи. 

(ii) Коли приєднуємо файлову систему, яка перелічена у файлі \fIfstab\fR досить вказати лише пристрій або точку приєднання (за Вашим вибором). 

(iii) Зазвичай приєднувати файлові системи може лише користувач з правами адміністратора. Однак, коли у \fIfstab\fR рядок містить параметр \fBuser ,\fR тоді будь\-хто може приєднувати відповідну систему. 

Тому, завдяки рядку 

.br
 \fB/dev/cdrom	/cd	iso9660	ro,user,auto,unhide\fR 

будь\-який користувач може приєднати файлову систему iso9660 на своєму приводі CDROM, використовуючи команду 

.br
 \fBmount /dev/cdrom\fR 

або 

.br
 \fBmount /cd\fR 

Якщо Вам потрібно більше інформації, зверніться до \fBfstab(5)\fR . Від'єднати файлову систему може лише той користувач, який її приєднав. Якщо ж необхідно щоб будь\-який користувач міг від'єднати дану систему, тоді впишіть \fBusers\fR замість \fBuser\fR до потрібного рядку у \fIfstab .\fR Параметр \fBowner\fR дуже подібний до параметру \fIuser\fR з єдиною заввагою, що користувач повинен бути власником спеціального файлу. Це може бути зручно наприклад для \fI/dev/fd\fR якщо скрипт входження в систему робить користувача власником даного консольного пристрою.  Програми \fBmount\fR та \fBumount\fR зберігають список файлових систем які є приєднаними на даний час у файлі \fI/etc/mtab\fR . Якщо не вказувати жодних аргументів, то  \fBmount\fR відобразить цей список. Коли файлова система \fIproc\fR приєднана (до теки \fI/proc\fR ), вміст файлів \fI/etc/mtab\fR та \fI/proc/mounts\fR є дуже схожим. Однак перший з них має трішки більше інформації про те, які параметри використовуються. Хоча ці дані не завжди є достовірними (дивіться далі інформацію про параметр \fB\-n\fR ). Звичайно ж можна замінити \fI/etc/mtab\fR на символічне посилання до \fI/proc/mounts\fR , однак, тоді ми втратимо деяку інформацію, а специфічна робота з loop пристроями буде менш зручною.

.SH " ПАРАМЕТРИ "
.PP
Повний список параметрів, які використовує \fBmount\fR складається спочатку з параметру для файлової системи, яка згадана у \fIfstab\fR , тоді беруться до уваги параметри вказані аргументом \fB\-o\fR , і лише після цього \fB\-r\fR  або  \fB\-w\fR (якщо вказано).  Параметри, які розуміє \fBmount\fR : 

.SS "\-V"

.PP

Версія програми. 

.SS "\-h"

.PP

Надрукувати довідку. 

.SS "\-v"

.PP

"Багатослівний" режим. 

.SS "\-р " \fInum\fR ''""

.PP

Якщо приєднання вимагає введення паролю, то читати його з файлу \fInum\fR , а не з терміналу. 

.SS "\-a"

.PP

Приєднати всі файлові системи (відомих типів), які згадуються у \fI/etc/fstab.\fR 

.SS "\-F"

.PP

(Використовується разом з \fB\-a\fR .) Не розгалужувати нове створення підчас приєднання кожного пристрою. Цей параметр виконує приєднання одночасно на різних пристроях або  різних NFS серверах. Його перевагою є швидкість; хоча таймаути NFS відбуваються  паралельно. Недоліком є те, що приєднання відбувається у невизначеному порядку. Тому Ви не можете використовувати цей параметр коли хочете приєднати \fI/usr\fR та \fI/usr/spool\fR одночасно. 

.SS "\-f"

.PP

Виконує все, що задано, окрім самого системного виклику; якщо не зрозуміло про що йде мова, то дана команда "імпровізує" приєднання файлової системи. Цей параметр часто використовують разом з параметром \fB\-v\fR , щоб знати, що саме виконує \fBmount\fR . Також це часто використовується для додавання входжень для пристроїв, які було приєднано раніше з параметром  \fB\-n\fR . 

.SS "\-l"

.PP

Додає позначки ext2, ext3 та XFS до результату виконання mount. Mount повинна мати доступ на читання дискових пристроїв (напр. мати права root) для відображення даної інформації. Встановити такі позначки для ext2 та ext3 можна за допомогою програми \fBe2label(8),\fR а для XFS \fBXFS_admin(8).\fR 

.SS "\-n"

.PP

Приєднати без запису до \fI/etc/mtab\fR . Це необхідно, коли \fI/etc\fR знаходиться на файловій системі, яка доступна лише для читання. 

.SS "\-s"

.PP

Дозволити оминати параметри приєднання до виникнення помилки. Даний параметр  вказує на ігнорування тих параметрів приєднання, які не підтримуються файловою  системою. Однак не всі файлові системи дозволяють використовувати даний  параметр. Цей параметр існує для підтримки autofs\-подібного самоприєднальника. 

.SS "\-r"

.PP

Приєднати файлову систему у режимі "лише для читання". Синонімом є \fB\-o ro\fR . 

.SS "\-w"

.PP

Приєднати файлову систему в режимі "читання/запис". Використовується за  замовчуванням. Синонімом є \fB\-o rw\fR . 

.SS "\-L  мітка"

.PP

Монтує розділ, який позначений \fIміткою\fR . 

.SS "\-U" \fI універсальний унікальний ідентифікатор (УУІД)\fR

.PP

Монтує розділ, який означено \fIУУІДом\fR . Ці два параметри вимагають наявності файлу \fI/proc/partitions\fR (доступний з версії Лінакс 2.1.116) 

.SS "\-t" \fI тип ВФС\fR

.PP

Аргумент, після \fB\-t\fR , використовується для означення типу файлової системи. На сьогодні  підтримуються такі типи: \fIadfs\fR , \fIaffs\fR , \fIautofs\fR , \fIcoda\fR , \fIcoherent\fR , \fIcramfs\fR , \fIdevpts\fR , \fIefs\fR , \fIext\fR , \fIext2\fR , \fIext3\fR , \fIhfs\fR , \fIhfs\fR , \fIhpfs\fR , \fIiso9660\fR , \fIjfs\fR , \fIminix\fR , \fImsdos\fR , \fIncpfs\fR , \fInfs\fR , \fIntfs\fR , \fIproc\fR , \fIqnx4\fR , \fIreiserfs\fR , \fIromfs\fR , \fIsmbfs\fR , \fIsysv\fR , \fItmpfs\fR , \fIudf\fR , \fIufs\fR , \fIumsdos\fR , \fIvfat\fR , \fIxenix\fR , \fIxfs\fR , \fIxiafs\fR . Завважте, що coherent, sysv та xenix є рівноправними, а \fIxenix\fR та \fIcoherent\fR з певних причин будуть видалені з майбутніми. Використовуйте замість них \fIsysv\fR . Починаючи з версії ядра 2.1.21, не підтримуються \fIext\fR та \fIxiafs\fR .  Для більшості типів \fBmount\fR викликає простий системний виклик \fImount(2),\fR не вимагаючи жодної інформації про файлову систему. Однак для певних файлових систем (таких, як nfs, smbfs, ncpfs) необхідна  наявність спеціального коду. Спеціальний код для nfs вбудовано, а для smbfs та  ncpfs існують спеціальні програми. Для доступності обробки всіх типів файлових  систем одним і тим самим шляхом, приєднання виконає програма \fI/sbin/mount.ТИП\fR , (якщо така існує) у випадку вказання \fIТИПУ\fR файлової системи. Так, як різні версії \fIsmbmount\fR мають різні умовності, \fI/sbin/mount.smb\fR може бути скриптом, який завантажує необхідний виклик.  Тип \fIiso9660\fR використовується за замовчуванням. Якщо не вказано параметр \fB\-t\fR , або задано тип \fBauto\fR , суперблок перевіряється на тип файлової системи ( на даний час доступні \fIadfs\fR \fIbfs\fR , \fIcramfs\fR , \fIext\fR , \fIext2\fR , \fIext3\fR , \fIhfs\fR , \fIhpfs\fR , \fIiso9660\fR , \fIjfs\fR , \fIminix\fR , \fIntfs\fR , \fIqnx4\fR , \fIreiserfs\fR , \fIromfs\fR , \fIufs\fR , \fIvxfs\fR , \fIxfs\fR , \fIxiafs\fR ). Якщо перевірка завершиться невдачею, то mount спробує прочитати інформацію з \fI/etc/filesystems\fR , а якщо такого файлу не виявиться, то з \fI/proc/filesystems\fR . Далі буде опробовано всі файлові системи перелічені у тому файлі, окрім тих,  які позначені як nodev (наприклад \fIdevpts\fR , \fIproc\fR або \fInfs\fR ).  Зверніть увагу на те, що тип \fBauto\fR можна використовувати для приєднання гнучких дисків. Створення файлу \fI/etc/filesystems\fR дозволить змінити порядок перевірки файлової системи (наприклад перевіряти чи  даний тип є vfat до того як відбудеться перевірка на тип msdos) або використовувати модуль автоматичного завантажування,  який знаходиться у ядрі. Заввага: перевірка використовує евристичний аналіз (найближчим відповідником  є термін 'магія'), і може помилитися у визначенні типу файлової системи.  Для визначення більш ніж одного типу можна створити список, який  розділяється комами. Список типів файлових систем може починатися з префіксу \fBno\fR для означення типів файлових систем, дії над якими виконуватись не будуть.  (Це може мати значення при заданні параметру \fI\-a\fR \fB).\fR  Наприклад, команда: 

\fBmount \-a \-t nomsdos, ext\fR 

приєднує всі файлові системи, окрім \fImsdos\fR та \fIext.\fR 

.SS "\-o"

.PP

Після вказання параметру \fB\-o\fR параметри, які йдуть після нього розділяються комами. Однак деякі з цих змінних використовуються лише тоді, коли вказані у \fI/etc/fstab\fR . Наступні параметри застосовуються до будь\-яких файлових систем, які є  приєднаними (однак не кожна файлова система справді працює з ними.  Наприклад параметр \fBsync\fR сьогодні використовується лише з ext2, ext3 та ufs): 

.SS "async"

.PP

Всі операції вводу/виводу повинні бути асинхронними. 

.SS "atime"

.PP

Оновлювати час доступу до іноду при кожному звертанні. Використовується за замовчуванням. 

.SS "auto"

.PP

Може бути приєднане з параметром \fB\-a\fR . 

.SS "defaults"

.PP

Використовувати наступні параметри за замовчуванням: \fBrw\fR ,  \fBsuid\fR ,  \fBdev\fR ,  \fBexec\fR ,  \fBauto\fR ,  \fBnouser\fR  та  \fBasync.\fR 

.SS "dev"

.PP

Інтерпретувати символьні або спеціальні блокові пристрої на файловій системі. 

.SS "noatime"

.PP

Не оновлювати час доступу до іноду на заданій файловій системі (наприклад для швидшого доступу до новин, для прискорення роботи серверів новин). 

.SS "noauto"

.PP

Процес приєднання можливий лише при вказанні конкретного типу файлової системи  (наприклад, приєднання з параметром \fB\-a\fR проігнорує дану файлову систему). 

.SS "nodev"

.PP

Не інтерпретувати символьні або спеціальні блокові пристрої на файловій системі. 

.SS "noexec"

.PP

Заборонити виконання двійкових файлів на приєднаній файловій системі. Цей параметр може бути корисним для сервера, який має файлову систему, де знаходяться двійкові файли для архітектур відмінних від даної. 

.SS "nosuid"

.PP

Заборонити дію бітів ідентифікації користувача (SUID) та ідентифікації групи  (GID). (Це може бути безпечно, однак насправді краще залишити небезпечно, якщо у Вас встановлено suidperl(1) .) 

.SS "nouser"

.PP

Заборонити звичайному користувачеві (без прав суперкористувача) приєднувати  файлову систему. Використовується за замовчуванням. 

.SS "remount"

.PP

Спробувати перепід'єднати під'єднану файлову систему. Це часто  використовується для зміни параметрів під'єднання для файлових систем, переважно застосовується для зміни доступу з режиму "лише для читання" на "читання/запис". Даний параметр не впливає на зміну пристрою чи точки приєднання. 

.SS "ro"

.PP

Приєднати систему в режимі "лише для читання". 

.SS "rw"

.PP

Приєднати систему в режимі "читання/запис". 

.SS "suid"

.PP

Дозволяти дію ідентифікатора користувача та ідентифікатора групи. 

.SS "sync"

.PP

Всі операції вводу/виводу на файловій системі повинні бути синхронними. 

.SS "user"

.PP

Дозволити звичайному користувачеві приєднувати файлову систему. Ім'я користувача, який приєднує файлову систему записується до mtab, щоб він міг від'єднати файлову систему знову. Параметр містить в собі поєднання таких параметрів, як \fBnoexec\fR  ,  \fBnosuid\fR  та \fBnodev\fR (поки не переписані такі параметри у рядку налаштувань \fBuser\fR , \fBexec\fR , \fBdev\fR , \fBsuid\fR ). 

.SS "users"

.PP

Дозволяє будь\-якому користувачеві приєднати та від'єднати файлову систему. Цей параметр місить в собі поєднання параметрів \fBnoexec\fR , \fBnosuid\fR ,  та \fBnodev\fR (поки не переписані наступні параметри у рядку налаштувань \fBusers\fR , \fBexec\fR , \fBdev\fR , \fBsuid\fR ). 

.SS "encryption"

.PP

Вказує на  потрібний алгоритм шифрування. Використовується разом з параметром \fBloop\fR . 

.SS "keybits"

.PP

Визначає розмір ключа для алгоритму шифрування. Використовується разом з  параметрами \fBloop\fR  та \fBencryption\fR .  

.SH " ПАРАМЕТРИ ПРИЄДНАННЯ СПЕЦИФІЧНИХ ФАЙЛОВИХ СИСТЕМ "
.PP
Наступні парметри використовуються лише з певними видами файлових систем. Ми їх відсортуємо за типами файлових систем. Усі вони вказуються після  параметру \fB\-o\fR . 

.SS " Параметри приєднання для adfs "
.PP

.SS "uid="\fIзначення\fR та "gid="\fIзначення\fR

.PP

Встановити власника та групу для файлів на файловій системі. (За замовчуванням uid=gid=0). 

.SS "ownmask="\fIзначення\fR та "othmask="\fIзначення\fR

.PP

Встановити вказаним чином маску прав для прав власника adfs та для прав "інших" користувачів. (За замовчуванням: 0700 та 0077) Дивіться також до \fI/usr/src/linux/Documentation/filesystems/adfs.txt\fR або ж до теки, де у Вас знаходяться вихідні тексти ядра Лінакс. 

.SS " Параметри приєднання для affs "
.PP

.SS "uid="\fIзначення\fR та "gid="\fIзначення\fR 

.PP

Встановити власника та групу кореневої файлової системи. (За замовчуванням uid=gid=0. Якщо ж \fBuid\fR або \fBgid\fR вказано без значень, тоді значення gid та uid беруться з поточного процесу.) 

.SS "setuid="\fIзначення\fR та "setgid="\fIзначення\fR

.PP

Вказати власника та групу для всіх файлів. 

.SS "mode=" \fIзначення\fR

.PP

Встановити вид всіх файлів, як \fIзначення\fR  & 0777,  не зважаючи на поточні права доступу. Додати право пошуку у каталогах, на які можна прочитати. Значення задається у вісімковому форматі. 

.SS "protect"

.PP

Заборонити внесення будь\-яких змін до бітів захисту файлової системи. 

.SS "usemp"

.PP

Встановити gid та uid суперкористувача файлової системи як gid та uid точки приєднання при першій синхронізації чи від'єднанні, а після цього очистити цей параметр. Хм... 

.SS "verbose"

.PP

Друкувати повідомлення при кожному успішному приєднанні. 

.SS "prefix=" \fIрядок\fR

.PP

Префікс використовується перед іменем розділу, коли звертаються за посиланням. 

.SS "volume=" \fIрядок\fR

.PP

Префікс (максимальна довжина 30 символів) використовується перед "/", коли звертаються за посиланням. 

.SS "root=" \fIзначення\fR

.PP

Задає точне місце знаходження кореневого блоку. 

.SS "bs=" \fIзначення\fR

.PP

Задає розмір блоку. Допустимі значення 512, 1024, 2048, 4096. 

.SS "grpquota"  /  "noquota"  /  "quota"  /  "usrquota"

.PP

Ці параметри допустимі, хоча й ігноруються. (Однак, програми для роботи з  обмеженнями на місце можуть реагувати на дані рядки у  \fI/etc/fstab\fR .)  

.SS " Параметри приєднання для coherent "
.PP
Жодних.  

.SS " Параметри приєднання для devpts "
.PP
Файлова система devpts це псевдофайлова система, яка традиційно приєднується до \fI/dev/pts\fR . При доступі до псевдотерміналу, процес відкриває \fI/dev/ptmx\fR ; після цього номер терміналу стає доступним для процесу, а до  підпорядкованого йому псевдотерміналу можна отримати доступ звернувшись до \fI/dev/pts/<номер\fR   \fIтерміналу>.\fR 

.SS "uid="\fIзначення\fR та "gid="\fIзначення\fR

.PP

Присвоює вказані значення власнику та групі для новостворених PTY. Якщо значення не вказані, то їх отримують з значень материнського процесу. Наприклад, якщо існує tty група із значенням GID = 5, тоді, вказавши \fBgid=5\fR додамо створений PTY до групи tty. 

.SS "mode=" \fIзначення\fR

.PP

Встановлює режим доступу для новостворених терміналів, використовуючи вказане \fBзначення\fR \fI.\fR За замовчуванням використовується 0600. Якщо вказано значення для \fBmode=620\fR та \fBgid=5\fR \fI,\fR то це рівносильно використанню "mesg y", за замовчуванням для новостворених PTY.  

.SS " Параметри приєднання для ext "
.PP
Нема. Зверніть увагу на те, що 'ext' є застарілою файловою системою.  Не використовуйте її. Починаючи з Лінакс 2.1.21 extfs не є частиною ядра.  

.SS " Параметри приєднання для ext2 "
.PP
Файлова система 'ext2' є стандартною для Лінакс. Завдяки помилці у ядрі її  можна було приєднувати з довільним числом параметрів (виправлено у Лінакс 2.0.4). 

.SS "bsddf"  /  "minixdf"

.PP

Встановлює режим роботи системних викликів для  \fIstatfs\fR . Режим роботи \fBminixdf\fR повертає загальне число блоків для файлової системи до \fIf_blocks\fR , в той час, як \fIbsddf\fR (використовується за замовчуванням) вичитує зовнішні блоки, які  використовуються ext2, і непридатні для зберігання файлів. Тому 

.RS
.nf

% mount /k \-o minixdf; df /k; umount /k
Filesystem   1024\-blocks  Used Available Capacity Mounted on
/dev/sda6      2630655   86954  2412169      3%   /k
% mount /k \-o bsddf; df /k; umount /k
Filesystem   1024\-blocks  Used Available Capacity Mounted on
/dev/sda6      2543714      13  2412169      0%   /k

.fi
.RE
(Зверніть увагу на те, що даний приклад показує що можна додавати параметри  до тих, які вже є у  \fI/etc/fstab\fR .)  

.SS "check"  /  "check=normal"  /  "check=strict"

.PP

Встановлює рівень перевірки. Коли хоч один з цих параметрів встановлено (за замовчуванням використовується \fBcheck=normal\fR ) іноди та бітмапи блоків перевіряються при приєднанні (що може зайняти 30 секунд і довше, залежно від об'єму диску і часто є невиправданим). Якщо використовуємо \fBcheck=strict\fR , то переміщення блоків перевіряється чи є блок у зоні даних. 

.SS "check" = "none"  /  "nocheck"

.PP

Перевірка не відбувається. І це прискорює роботу. Останні ядра взагалі не  підтримують перевірки, натомість використовуйте \fBe2fsck(8)\fR . 

.SS "debug"

.PP

Друкувати інформацію необхідну для відлагодження при кожному (пере)під'єднанні. 

.SS "errors=continue"  /  "errors=remount\-ro"  /  "errors=panic"

.PP

Встановлює подальшу поведінку при виникненні помилок. (Можна обрати один з наступних варіантів: ігнорувати помилки та позначити  файлову систему як систему з помилками, а після цього продовжити виконання; перепід'єднати систему в режимі "лише для читання"; показати повідомлення про помилку та зупинити систему.) Значення за замовчуванням записується до суперблоку файлової системи та може бути зміненим за допомогою \fBtune2fs(8).\fR 

.SS "gripd"  або  "bsdgroups"  /  "nogripd"  або  "sysvgroups"

.PP

Ці параметри визначають до якої групи входитимуть новостворені файли. Вказавши \fBgripd\fR , файли будуть членами тієї ж групи, що й тека у якій їх створено; в іншому  випадку (за замовчуванням) береться fsgid поточного процесу, поки тека не має встановленого setgid. У цьому випадку gid отримується з батьківської теки, а також встановлюється setgid, коли створюємо теку. 

.SS ."resgid="\fIn\fR

.PP

та \fBresuid=\fR\fIn\fR Файлова система ext2 резервує певний об'єм вільного місця (за замовчуванням 5%, детальніше дивіться \fBmke2fs(8)\fR та \fBtune2fs(8)\fR ). Дані параметри дозволяють визначити, хто може використовувати зарезервовані  блоки. (Іншими словами: когось, хто має певний uid, або належить до певної  групи.) 

.SS "sb=" \fIn\fR

.PP

Замість суперблоку 1,  у ролі суперблоку використовувати блок \fIn\fR . Може бути корисним, коли файлова система пошкоджена. (Раніше копії суперблоку могли розміщуватись лише після 8192 блоків; тобто на 1, 8193, 16385... блоках (і мати сотні і тисячі копій на великій файловій системі.) Починаючи з версії 1.08, \fBmke2fs\fR має параметр \-s (довільного суперблоку) для зменшення числа копій суперблоку, який починаючи з версії 1.15 використовується за замовчуванням. Однак це  означає, що створена попередніми версіями \fBmke2fs\fR не може бути приєднаною в режимі "читання/запису" при використанні  Лінакс 2.0.*.) Тут номер блоку використовує 1k юнітів. Тому, якщо Ви бажаєте використовувати 32678 логічний блок на файловій системі з 4k блоками,  вживайте як параметр "sb=131072" (4*32768=131072) 

.SS "grpquota"  /  "noquota"  /  "quota"  /  "usrquota"

.PP

Ці параметри є допустимими , хоча й ігноруються.  

.SS "nouid32"

.PP

Заборонити 32\-бітні UID та GID. Використовується для сумісності з старими ядрами, які спроектовані для зберігання та опрацювання 16\-бітних значень.  

.SS " Параметри приєднання для ext3 "
.PP
Файлова система 'ext3' є наступним поколінням файлової системи ext2, яка  використовує підтримку протоколів. Вона підтримує ті ж параметри, що й ext2, а разом з ними й деякі інші: 
." .\" .TP 

." .\" .BR abort 

." .\" Приєднати файлову систему у помилковому режимі при виникненні 

." .\" фатальної помилки. 

.SS "journal=update"

.PP

Оновити журнал файлової системи ext3 до поточного формату. 

.SS "journal=значення"

.PP

Якщо журнал вже існує, даний параметр ігнорується. В іншому випадку, від задає номер іноду, який представлятиме журнал файлової системи; ext3 створить новий журнал, перезаписуючи старий вміст файлу з номером іноду, який має дане \fIзначення\fR . 

.SS "noload"

.PP

Не завантажувати підчас приєднання журнал файлової системи. 

.SS "data=journal"  /  "data=ordered"  /  "data=writeback"

.PP

Визначає режим журналювання даних файлу. Метадані завжди записуються до журналу. 

.SS "journal"

.PP

Усі дані передаються у попередній журнал, для запису до головної файлової  системи. 

.SS "ordered"

.PP

Використовується за замовчуванням. Всі дані передаються безпосередньо до  головної файлової системи, з попередньою передачею метаданих до журналу. 

.SS "writeback"

.PP

Порядок даних не зберігається \- дані можуть бути записаними безпосередньо до головної файлової системи після запису метаданих до журналу. Йде мова про те, що це є найвживаніший параметр. Він забезпечує цілісність файлової системи,  хоча й дозволяє старим даним з'являтись у файлах після неполадок та відновлення роботи журналу.  

.SS " Параметри приєднання для fat "
.PP
(Примітка: \fIfat\fR є не окремою файловою системою, а спільною частиною таких файлових систем, як \fImsdos\fR , \fIumsdos\fR та \fIvfat.)\fR 

.SS "blocksize=512"  /  "blocksize=1024"  /  "blocksize=2048"

.PP

Встановити розмір блоку (за замовчуванням 512). 

.SS "uid="\fIзначення\fR та "gid="\fIзначення\fR

.PP

Встановити власника та групу для всіх файлів. (За замовчуванням береться uid та gid поточного процесу). 

.SS "mask=" \fIзначення\fR

.PP

Встановити немаску (маску бітів прав дозволу, які \fBзаборонені\fR ). За замовчуванням використовується немаска поточного процесу. Задається  вісімковим значенням. 

.SS "check=" \fIзначення\fR

.PP

Можна обрати три різні рівні представлення даних: 

.SS "r[elaxed]"

.PP

Верхній та нижній регістри приймаються та є еквівалентними, довгі імена  скорочуються (наприклад: \fIverylongname.foobar\fR побачимо, як \fIverylong.foo\fR ), перші та вставлені пробіли приймаються в кожній частині назви (імені та  розширенні). 

.SS "n[ormal]"

.PP

Подібний до "relaxed", але багато спеціальних символів (*, ?, <, пробіли тощо) заборонено. Використовується за замовчуванням. 

.SS "s[trict]"

.PP

Подібний до "normal", однак імена можуть не містити довгої частини та  спеціальних символів, які іноді вживаються у Лінакс, але не прийняті,  а у  MS\-DOS заборонені (+, =, пробіли тощо). 

.SS "codepage=" \fIзначення\fR

.PP

Встановити кодову сторінку для конвертації символів імен у файлових системах  FAT та VFAT. За замовчуванням використовуємо 437 кодову сторінку. 

.SS "conv=b[inary]"  /  "conv=t[ext]"  /  "conv=a[uto]"

.PP

Файлова система \fIfat\fR може виконувати перетворення CRLF<\-\->NL (з текстового формату MS\-DOS до  текстового формату UNIX) на рівні ядра. Доступні такі режими перетворень: 

.SS "binary"

.PP

трансляції не відбувається. Використовується за замовчуванням. 

.SS "text"

.PP

трансляція CRLF<\-\->NL виконується для всіх файлів. 

.SS "auto"

.PP

трансляція CRLF<\-\->NL виконується для всіх файлів, які не мають "відомих  двійкових" розширень. Список відомих розширень можна знайти на початку файлу \fIfs/fat/misc.c\fR (для ядра 2.4.19 список є таким (принаймні у моєму ядрі): txt, me, htm, 1st,  log,    , c, h, cpp, lis, pas, for, f, mak, inc, bas, bat, sh, ini, pbm, pgm,  dxf, tex). 

Програмам, які підраховують входження, не подобаються перетворення текстів на  рівні ядра. Тому будьте обережними! Деякі люди вже втратили свої дані завдяки цим перетворенням.  Для файлових систем приєднаних у двійковому режимі існують програми для перетворення (fromdos/todos). 

.SS "cvf_format=" \fIмодуль\fR

.PP

Змушує драйвер використовувати CVF (Compressed Volume File) (Файл Компресії  Розділу) модуль cvf_module замість автовизначення. Якщо ядро підтримує kmod, тоді параметр cvf_module=xxx  також контролює при потребі завантаження CVF модуля. 

.SS "cvf_option=" \fIпараметр\fR

.PP

Параметр відноситься до CVF модуля. 

.SS "debug"

.PP

Включає режим \fIвідлагодження\fR . Буде надруковано версію та список параметрів системи (ці дані також буде  надруковано, якщо параметри виявляться несумісними). 

.SS "fat=12"  /  "fat=16"  /  "fat=32"

.PP

Встановлює приналежність до 12, 16 чи 32\-бітної fat. Цей параметр перезаписує результати автоматичного визначення. Обережно використовуйте! 

.SS "iocharset=" \fIзначення\fR

.PP

Набір символів для використання при конвертації з 8\-бітних символів у 16\-бітні Юнікод (Unicode) символи. За замовчуванням використовується iso8859\-1. Довгі імена зберігаються у Юнікод форматі. 

.SS "quiet"

.PP

Включити  \fIтихий\fR режим. Спробувати змінити власника або права доступу на файли, не повертаючи  повідомлення про помилки при їх виникненні. Використовувати обережно! 

.SS "sys_immutable, showexec, dots, nodots, dotsOK=[yes,no]"

.PP

Різні спроби вимушених перетворень Unix чи DOS на файловій системі FAT.  

.SS " Параметри приєднання для hpfs "
.PP

.SS "uid="\fIзначення\fR та \fIзначення\fR

.PP

Встановити власника та групу для всі файлів. (За замовчуванням береться uid  та gid поточного процесу). 

.SS "umask=" \fIзначення\fR

.PP

Встановити немаску (маска прав доступу, які \fBзаборонені\fR ). За замовчуванням беруться значення поточного процесу. Значення задається у  вісімковому форматі. 

.SS "case=lower"  /  "case=asis"

.PP

Перетворити всі імена до нижнього регістру, або ж залишити все без змін. (За замовчуванням використовується: case=lower.) 

.SS "conv=binary"  /  "conv=text"  /  "conv=auto"

.PP

При використанні \fBconv=text\fR знищуються декілька довільних зсувів каретки (carrier Left (CR)) (насправді,  будуть видалятися усі, які йдуть після NL) при читанні файлу. \fBconv=auto\fR дозволяє вибрати більш\-менш довільну кількість зсувів між \fBconv=binary\fR  та  \fBconv=text\fR . А \fBconv=binary\fR просто зчитує вміст файлу. Цей режим використовується за замовчуванням. 

.SS "nocheck"

.PP

Не переривати приєднання при виникненні помилки в процесі перевірки.  

.SS " Параметри приєднання для iso9660 "
.PP
Зазвичай імена файлів у \fIiso9660\fR представляються у форматі 8.3 (тобто DOS\-подібні заборони на довжину файлів), а ще вони всі записуються у великими літерами. Також тут нема полів для запису власника файлу, захисту, кількості посилань, заготовки для символьних/блокових пристроїв тощо.  Рок Рідж (Rock Ridge) є розширенням iso9660, яке забезпечує усі ці  Юнікс\-похідні риси. Базовими є розширення до запису кожного каталогу, які  забезпечують усю необхідну інформацію. Тому при використанні Рок Рідж, файлову систему не відрізнити від звичайної файлової системи Юнікс (не беручи до уваги той факт, що вона доступна в режимі "лише для читання"). 

.SS "norock"

.PP

Заборонити використання розширень Рок Рідж, навіть якщо вони доступні. Див.  \fBmap\fR . 

.SS "nojoliet"

.PP

Заборонити використання розширень Microsoft Joliet, навіть якщо вони доступні.  Див. \fBmap\fR . 

.SS "check=r[elaxed]"  /  "check=s[trict]"

.PP

При використанні \fBcheck=relaxed\fR , імена файлів перед переглядом переводяться у маленькі літери. Можливо це має значення при вживанні разом з \fBnorock\fR та \fBmap=normal.\fR (За замовчуванням  \fBmap=strict\fR ). 

.SS "uid="\fIзначення\fR та "gid="\fIзначення\fR

.PP

Встановити для всіх файлів даної файлової системи ідентифікатори користувача або групи, що призведе до нехтування інформацією, яка знаходиться у розширенні Рок Рідж. (За замовчуванням: \fBuid=0\fR ,  \fBgid=0\fR ). 

.SS "map=n[ormal]"  /  "map=o[ff]"  /  "map=a[corn]"

.PP

Для розділів відмінних від Рок Рідж, нормальна трансляція імен переводить великі букви в маленькі (за ASCII), пропускає слід ';l' та перетворює ';'  на '.'. При використанні \fBmap=off\fR Трансляція імен відсутня. Детальніше дивіться \fBnorock\fR . (За замовчуванням використовується: \fBmap=normal\fR ). \fBmap=acorn\fR подібне на .BК map=normal , однак дозволяє використовувати за наявності розширення Acorn. 

.SS "mode=" \fIзначення\fR

.PP

Для розділів відмінних від Рок Рідж, задає всім файлам вказаний режим доступу. (За замовчуванням: всі мають право на читання файлів). Починаючи з версії  Лінакс 2.1.37, зникла потреба вказувати режим доступу у десятковій системі. (Вісімкова система вимагається керуючим нулем ). 

.SS "unhide"

.PP

Показувати приховані та асоційовані файли. 

.SS "block=[512|1024|2048]"

.PP

Встановити розмір блоку рівним заданому значенню. (За замовчуванням: \fBblock=1024\fR ). 

.SS "conv=a[uto]"  /  "conv=b[inary]"  /  "conv=m[text]"  /  "conv=t[ext]"

.PP

(За замовчуванням використовується: \fBconv=binary\fR ). Починаючи з Лінакс 1.3.54 цей параметр більше не працює. (А недвійкові  налаштування є дуже небезпечними, і можуть призвести до втрати даних). 

.SS "cruft"

.PP

Якщо старший байт довжини файлу містить непотрібну інформацію, встановлення  цього параметру приєднання призведе до ігнорування старшого порядку бітів в  довжині файлу. Це значить, що файл не може бути більшим аніж 16 МБ.  Параметр 'cruft' встановлюється автоматично, якщо компакт диск має дивний розмір (від'ємний або більший 800 МБ). Також він використовується, коли ряд номерів розділу інший ніж 0 або 1. 

.SS "session=x"

.PP

Вибрати номер сесії на багатосесійному диску. (Доступне з версії 2.3.4.) 

.SS "sbsector=xxx"

.PP

Сесія починається з сектору ххх. (Доступне з версії 2.3.4.)  

.SS " Параметри приєднання для minix "
.PP
Жодних.  

.SS " Параметри приєднання для msdos "
.PP
Дивіться параметри приєднання для fat. Якщо файлова система \fBmsdos\fR виявить несумісність, вона видасть звіт про помилку, та переведе систему в  режим "лише для читання". Щоб мати змогу знову записувати на файлову систему, перепід'єднайте її.  

.SS " Параметри приєднання для ncp "
.PP
Подібно до виконання \fInfs\fR ,  \fIncp\fR очікує двійковий аргумент ( \fIstruct ncp_mount_data\fR ) для приєднання системного виклику. Цей аргумент викликається \fBncpmount(8),\fR а дана версія  \fBmount\fR (2.6h) нічого не знає про ncp.  

.SS " Параметри приєднання для nfs "
.PP
Замість текстового рядкового параметру, який аналізується ядром, файлова  система \fBnfs\fR очікує двійковий аргумент типу \fIstruct nfs_mount_data\fR . Програма \fBmount\fR самостійно аналізує наступні параметри, за формою 'бирка=значення', і розміщує їх у згаданій структурі: \fBrsize=\fR \fIn,\fR \fBwsize=\fR \fIn,\fR \fBtimeo=\fR \fIn,\fR \fBretrans=\fR \fIn,\fR \fBacregmin=\fR \fIn,\fR \fBacregmax=\fR \fIn,\fR \fBacdirmin=\fR \fIn,\fR \fBacdirmax=\fR \fIn,\fR \fBacrtimeo=\fR \fIn,\fR \fBretry=\fR \fIn,\fR \fBport=\fR \fIn,\fR \fBmountport=\fR \fIn,\fR \fBmounthost=\fR \fIім'я,\fR \fBmountprog=\fR \fIn,\fR \fBmountvers=\fR \fIn,\fR \fBnfsprog=\fR \fIn,\fR \fBnfsvers=\fR \fIn,\fR \fBnamelen=\fR \fIn.\fR Параметр \fBaddr=\fR \fIn\fR дозволений, однак він ігнорується. Розпізнаються також наступні логічні типи, з можливою часткою \fBno\fR : \fBbg\fR , \fBfg\fR , \fBsoft\fR , \fBhard\fR , \fBintr\fR , \fBposix\fR , \fBcto\fR , \fBac\fR , \fBtcp\fR , \fBudp\fR , \fBlock\fR . Детальніше дивіться у  \fBnfs(5).\fR  Найчастіше використовуються такі параметри: 

.SS "rsize=8192,wsize=8192"

.PP

Дані параметри пришвидшать зв'язок, використовуючи більший об'єм буферу, ніж 1024, який задано за замовчуванням (NFS версії 2 не працює з більшими  значеннями \fBrsize\fR та \fBwsize\fR ). 

.SS "hard"

.PP

При зупинці серверу, програма яка працює з файлом на змонтованій файловій системі NFS "зависне". Процес не можна буде ані зупинити, ані вбити, якщо ви не задали параметр \fBintr\fR . Коли ж NFS сервер продовжить роботу, програма спокійно повернеться до того місця, на якому зупинилась. Можливо це саме те, що Вам потрібно. 

.SS "soft"

.PP

Цей параметр дозволяє ядру зупинити процес, якщо NFS сервер мовчить певний  період часу. Час зупинки можна задати параметром \fBtimeo=час\fR . Цей параметр може бути корисним, якщо Ваш NFS сервер іноді не відповідає на запити або перезавантажується при спробі процесу отримати доступ до файлу на сервері. Переважно даний параметр викликає багато незручностей. 

.SS "nolock"

.PP

Заборонити замкнення. Не завантажувати lockd.  

.SS " Параметри приєднання для ntfs "
.PP

.SS "iocharset=" \fIім'я\fR

.PP

Вказує на мапу символів, яку необхідно використовувати при відображенні імен файлів. На відміну від VFAT, NTFS забороняє використання імен, які містять символи, що не підлягають конвертуванню. 

.SS "utf8"

.PP

Використовувати UTF\-8 для конвертації імен файлів. 

.SS "uni_xlate=[0|1|2]"

.PP

Використовуючи 0 ("ні" або "неправда"), Ви забороняєте використання ескейп  послідовностей для невідомих символів Юнікоду. Використання 1 ("так" або "правда") чи 2, дозволяє використання 4\-байтних vfat\-подібних ескейп  послідовностей, які починаються з ";". Тут 2 означає little\-endian кодування, а 1 кодування bigendian. 

.SS "posix=[0|1]"

.PP

Якщо параметр доступний (posix=1), файлова система розрізняє великі та малі літери. Імена формату 8.3 є жорсткими прив'язками, однак не заборонені. 

.SS "uid="\fIзначення\fR, "gid="\fIзначення\fR, "umask="\fIзначення\fR

.PP

Встановлює права доступу до файлів на файловій системі. За замовчуванням, доступ до файлів має лише адміністратор.  

.SS " Параметри приєднання для proc "
.PP

.SS "uid="\fIзначення\fR та "gid="\fIзначення\fR

.PP

Ці параметри розпізнаються, однак я не помітив їх жодного впливу.  

.SS " Параметри приєднання для reiserfs "
.PP
Дані параметри повніше описані за адресою \fIhttp://www.namesys.com/mount\-options.html\fR . 

.SS "conv"

.PP

Повідомляє програмне забезпечення reiserfs версії 3.6 про приєднанні файлової системи версії 3.5 і використання нового формату при створенні об'єктів. Ця файлова система не буде більше сумісною з програмами для роботи з reiserfs версії 3.5. 

.SS "hash=rupasov"  /  "hask=tea"  /  "hash=r5"  /  "hash=detect"

.PP

Встановлює функцію хешування, яку reiserfs буде використовувати для пошуку файлів в середині тек. 

.SS "rupasov"

.PP

Функція хешування створена Юрієм Ю. Рупасовим (Yury Yu. Rupasov). Вона є  швидкою та локальною, позначаючи лексикографічно близькі імена файлів та  значення хешу. Цей параметр не варто вживати, оскільки він дає високу  ймовірність виникнення хеш колізій. 

.SS "tea"

.PP

Функція Дейвіса\-Мейєра (Davic Meyer) реалізована Джеремі Фітжердінгом (Jeremy Fitzherdinge). Вона використовує представлення бітів хешу в імені. Маючи високу вибірковість, відповідно існує низька ймовірність виникнення хешованих колізій при збільшенні процесорного часу. Може використовуватись, коли помилки  EHASHCOLLISION з'являються при використанні алгоритму хешування r5.  

.SS "r5"

.PP

Змінена версія функції Рупасова. Використовується за замовчуванням і є найкращим вибором поки файлова система містить великі теки та незвичайні шаблони імен файлів. 

.SS "detect"

.PP

Наказує \fImount\fR визначити, яка функція хешування використовується, за допомогою аналізу файлової системи, яка приєднана та записати цю інформацію до суперблоку reiserfs. Може бути корисною лише при першому приєднанні файлової системи старого формату. 

.SS "hashed_relocation"

.PP

Включає аналізатор місця знаходження блоку. В певних ситуаціях призводить до  прискорення виконання. 

.SS "no_unhashed_relocation"

.PP

Включає аналізатор місця знаходження блоку. В певних ситуаціях призводить до прискорення виконання. 

.SS "noborder"

.PP

Відключає алгоритм межі місця знаходження написаний Юрієм Ю. Рупасовим (Yury Yu. Rupasov). В певних випадках призводить до прискорення виконання. 

.SS "nolog"

.PP

Відключити журналювання. Даний параметр забезпечує незначне прискорення виконання, але його ціною є втрата швидкого відновлення reiserfs при аварії. Навіть при використанні цього параметру reiserfs виконує всі операції журналювання, за винятком дійсного запису у зону журналювання. Реалізація параметру \fInolog\fR все ще на стадії розробки. 

.SS "notail"

.PP

За замовчуванням reiserfs зберігає маленькі файли та 'хвостики файлів' безпосередньо в дереві. Деякі програми, такі як \fBLILO(8)\fR не можуть цього зрозуміти. Цей параметр використовується для заборони запису файлів безпосередньо в дерево. 

.SS "replayonly"

.PP

Відтворити протоколи, які містяться в журналі, не приєднуючи файлову систему. Переважно використовується \fIreiserfs\fR . 

.SS "resize=" \fIчисло\fR

.PP

Параметр переприєднання, який дозволяє розширити розділ reiserfs, коли він під'єднаний. Змушує reiserfs присвоювати пристрою задане \fIчисло\fR блоків. Цей параметр створено для роботи з пристроями, які використовують обслуговування логічних розділів (logical volume management (LVM)). Існує спеціальна програма \fIresizer\fR , який можна отримати на \fIftp://ftp.namesys.com/pub/reiserfsprogs\fR .  

.SS " Параметри приєднання для romfs "
.PP
Жодних.  

.SS " Параметри приєднання для smbfs "
.PP
Подібно до \fInfs\fR , програма під'єднання smb очікує двійковий аргумент ( \fIstruct smb_mount_data\fR ) для приєднання системних викликів. Цей аргумент надсилається \fBsmbmoutn(8),\fR і поточна версія \fBmount\fR (2.9w) нічогісінько не знає про smb.  

.SS " Параметри приєднання для sysv "
.PP
Жодних.  

.SS " Параметри приєднання для tmpfs "
.PP
Наступні параметри допускають наявність суфіксу \fBk\fR , \fBm\fR або \fBg\fR для двійкових Ki, Mi, Gi (двійкові кіло, мега, гіга) і можуть бути змінені при приєднанні. 

.SS "size=" \fIчисло_байт\fR

.PP

Переписує розмір за замовчуванням файлової системи. Розмір задається в байтах і округлюється до цілих значень. За замовчуванням використовується половина пам'яті. 

.SS "nr_blocks="

.PP

Встановлює число блоків. 

.SS "nr_inodes="

.PP

Встановлює число інодів. 

.SS "mode="

.PP

Встановлює початкові права доступу на кореневий каталог.  

.SS " Параметри приєднання для udf "
.PP

.SS "gid="

.PP

Встановлює групу за замовчуванням. 

.SS "umask="

.PP

Встановлює немаску за замовчуванням. 

.SS "uid="

.PP

Встановлює користувача за замовчуванням. 

.SS "unhide"

.PP

Показує приховані файли. 

.SS "undelete"

.PP

Показує список видалених файлів. 

.SS "strict"

.PP

Встановлює точну відповідність (не використовується). 

.SS "utf8"

.PP

(не використовується). 

.SS "iocharset"

.PP

(не використовується). 

.SS "bs= розмір"

.PP

Встановити розмір блоку рівний заданому \fIрозміру\fR . (Може не працювати, якщо не рівне 2048). 

.SS "novrs"

.PP

Пропустити порядок розпізнавання розділу. 

.SS "session="

.PP

Встановити підрахунок сесій компакт диску відмінне від нуля. За замовчуванням використовується остання сесія. 

.SS "anchor="

.PP

Переписати стандартне місце знаходження зв'язки. За замовчуванням 256. 

.SS "volume="

.PP

Переписати місце знаходження опису розділу (VolumeDesc). 

.SS "partition="

.PP

переписати місце знаходження опису тому (PartitionDesc). 

.SS "lastblock="

.PP

Встановити останній блок файлової системи. 

.SS "fileset="

.PP

Переписати місце знаходження fileset блоку. (не використовується) 

.SS "rootdir="

.PP

Перписати місце знаходження кореневої теки. (не використовується)  

.SS " Параметри приєднання для ufs "
.PP

.SS "ufs=" \fIзначення\fR

.PP

UFS є файловою системою, яка широко розповсюджена у різних операційних системах. Проблемою є відмінності в її реалізації. Властивості деяких реалізацій є недокументованими, тому автоматично розпізнати тип udf є дуже важко. Ось чому користувач повинен власноручно вказувати на udf тип у параметрах приєднання. Можливими параметрами є: 

.SS "old"

.PP

Старий формат udf, використовується за замовчуванням. Система приєднується в режимі "лише для читання". 

.SS "44bsd"

.PP

Файлова система створена на базі BSD\-подібних систем (NetBSD, FreeBSD, OpenBSD). 

.SS "sun"

.PP

Файлова система створена на базі SunOS або Solaris для Sparc. 

.SS "sunx86"

.PP

Файлова система створена на базі Solaris для платформ х86. 

.SS "nextstep"

.PP

Файлова система створена на NeXTStep (для станцій NeXT) (доступна в режимі "лише для читання"). 

.SS "nextstep\-cd"

.PP

Для компакт дисків NeXTStep (розмір блоку = 2048), режим "лише для читання". 

.SS "openstep"

.PP

Файлова система створена на базі OpenStep (наразі доступний режим "лише для читання"). 

.SS "onerror=" \fIзначення\fR

.PP

Встановити подальшу роботу програми при виникненні помилки: 

.SS "panic"

.PP

При виникненні помилки, зупинити роботу ядра. 

.SS "[lock|umount|repair]"

.PP

Ці параметри приєднання нічого не роблять; при виникненні помилки відображається повідомлення про помилку. 

.SS " Параметри приєднання для umsdos "
.PP
Дивіться розділ довідки, який стосується параметрів msdos. Параметр \fBdotsOK\fR заборонено вживати для \fBumsdos\fR .  

.SS " Параметри приєднання для vfat "
.PP
По перше, використовуються ті ж параметри, що й у  \fIfat\fR . Параметр \fBdotsOK\fR забрано з \fIvfat\fR . Окрім того, існують такі параметри: 

.SS "uni_xlate"

.PP

Перетворювати незрозумілі символи Юнікоду у спеціальні ескейп послідовності. Це дозволить зробити резервні копії та відновити імена файлів, які створюються довільними символами Юнікоду. Без цього параметру, символи, які не можна перетворити відображаються за допомогою "?". Розділювальним символом є ":", оскільки в іншому випадку вона буде недопустимим символом на файловій системі vfat. Ескейп послідовності які отримують використовують, коли u є символом Юнікоду, у таких випадках: (u &0x3f), ((u>>6) & 0x3f), (u >> 12). 

.SS "posix"

.PP

Дозволити існування двох файлів, які відрізняються лише реєстром. 

.SS "nonumtail"

.PP

Спочатку спробувати зробити коротке ім'я без числа послідовності, перед спробою створення \fIname\-num.ext\fR . 

.SS "utf8"

.PP

UTF8 є безпечне 8\-бітне Юнікод кодування файлової системи, яке використовується консоллю. Воно може бути дозволеним для файлової системи завдяки цьому параметру. Якщо ж встановлено параметр 'uni_xlate', тоді UTF8 заборонено.  

.SS " Параметри приєднання для xenix "
.PP
Жодних.  

.SS " Параметри приєднання для xfs "
.PP

.SS "biosize=" \fIрозмір\fR

.PP

Встановлює бажаний \fIрозмір\fR буферу вводу/виводу (за замовчуванням 64К). \fIРозмір\fR повинен бути виражений логарифмом (base2) бажаного розміру вводу/виводу. Правильних значень для цього параметру є 14 з 16, включаючи саме себе (Наприклад 16КБ, 32КБ, і 64КБ). Для комп'ютерів з розміром сторінки 4КБ, 13 (8КБ) також є правильним \fIрозміром\fR . Бажаний розмір буферованого вводу/виводу можна змінювати на базі окремого файлу, використовуючи системну функцію \fBioctl(2).\fR 

.SS "dmapi  /  xdsm"

.PP

Дозволити виклики DMAPI (Data Management API (Управління Даними АПІ)). 

.SS "logbufs=" \fIзначення\fR

.PP

Встановити кількість  вбудованих в пам'ять протокольних буферів. Дійсний діапазон чисел 2\-8. За замовчуванням використовується 8 буферів для файлової системи з розміром блоку 64КБ, 4 буферами для файлової системи з розміром блоку 32КБ, 3 буферами для файлової системи з розміром блоку 16КБ та 2 буферами у всіх інших випадках. Збільшення числа буферів може прискорити виконання на деяких робочих місцях за рахунок пам'яті, яка використовується для додаткових протокольних буферів та їх асоційованих контрольних структур. 

.SS "logbsize= значення"

.PP

Встановити розмір кожного вбудованого блоку пам'яті. Дійсними значеннями є 16384 (16КБ) та 32768 (32КБ). За замовчуванням, на комп'ютерах з об'ємом понад 32МБ пам'яті використовується 32768, а на всіх інших 16384. 

.SS "logdev="\fIпристрій\fR та "rtdev="\fIпристрій\fR

.PP

Використовувати зовнішній протокол (журнал метаданих) та/або пристрій реального часу. Файлова система XFS має три частини: розділ даних, розділ протоколу та розділ реального часу. Розділ реального часу є необов'язковим, а розділ протоколу може зберігатись окремо від розділу даних, або разом. Детальніше це все описано у \fBxfs(5).\fR 

.SS "noalign"

.PP

Розміщення даних не буде спрямовуватись на межі вирівнювання блоків. 

.SS "noatime"

.PP

Не оновлювати час доступу при читанні файлу. 

.SS "norecovery"

.PP

Файлова система буде приєднана без запуску протоколу відновлення. Якщо файлова система не була успішно від'єднана, то не варто приєднувати її з параметром \fBnorecovery\fR . У зв'язку з цим, деякі файли та теки можуть бути недоступними. Файлові системи приєднані з параметром \fBnorecovery\fR повинні бути приєднані в режимі "лише для читання" або ж процес приєднання зазнає невдачі. 

.SS "osyncisdsync"

.PP

Записує до файлів відкритих з параметром O_SYNC так, наче використовується параметр O_DSYNC. Вживання даного параметру дає прискорення в роботі, без загрози втрати даних. Однак, якщо даний параметр використовується, записи  оновлення часу доступу до файлів, які беруться з O_SYNC, можуть бути втрачені при аварії системи. 

.SS "quota"  /  "usrquota"  /  "uqnoenforce"

.PP

Дозволити ведення системних записів обмеження місця відведеного для користувача, та примусове обмеження (необов'язково). 

.SS "qrpquota"  /  "gqnoenforce"

.PP

Дозволити ведення системних записів обмеження місця відведеного для групи, та примусове обмеження (необов'язково). 

.SS unit=\fIзначення\fR та "swidth="\fIзначення\fR

.PP

Використовується для визначення шаблону юніту та ширини RAID пристрою, або шаблону тому. \fIзначення\fR повинне бути записане блоком 512\-байтних юнітів. Якщо параметру не задано значення і файлова система створена на шаблонному томі, або шаблонна ширина чи юніт для RAID пристрою було вказано під час створення файлової системи, тоді системний виклик приєднання отримає значення з суперблоку. Для файлових систем, які створювались безпосередньо на RAID пристроях, ці параметри можна використовувати для зміни інформації у суперблоці, якщо параметри основного диску було змінено після створення файлової системи. Параметр \fBswidth\fR необхідно вказати, якщо Ви вказали параметр \fBsunit\fR , і він повинен бути кратним значенню \fBsunit\fR .  

.SS " Параметри приєднання для xiafs "
.PP
Жодного. Хоча з даною файловою системою і не відбувається чогось особливого, вона не набула широкого використання та підтримки. Навряд чи Ви колись будете її використовувати. Починаючи з Лінакс 2.1.21 xiafs не підтримується ядром.  

.SH " ПРИСТРОЇ ЛОКАЛЬНОЇ ПЕРЕДАЧІ ДАНИХ (LOOP) "
.PP
Ще одним можливим методом є приєднання з використанням пристрою локальної передачі даних. Наприклад, команда 
.RS
.nf
 mount /tmp/fdimage /mnt \-t msdos \-o loop=dev/loop3,blocksize=1024 
.fi
.RE
 встановить пристрій локальної передачі даних \fI/dev/loop3\fR для передачі інформації до файлу \fItmp/fdimage\fR , а опісля приєднає цей пристрій до \fI/mnt\fR . Цей тип приєднання знає три параметри, які відомі як \fBloop\fR ,  \fBoffset\fR ,  \fBencryption\fR , які насправді є параметрами \fBlosetup(8).\fR Якщо приєднання вимагає паролю, Вас попросять його ввести. або ж Ви вкажете звідки отримати необхідний пароль, використовуючи параметр \fB\-\-pass\-fd\fR . Якщо ж не задано жодного конкретного пристрою локальної передачі даних  (а лише параметр \-o loop), тоді \fBmount\fR спробує знайти пристрої локальної передачі даних, які не використовуються та використати їх. Якщо ж Ви досить розумні і не зробили \fI/etc/mtab\fR символьним посиланням на \fI/proc/mounts\fR , тоді будь\-який пристрій локальної передачі даних приєднаний командою \fBmount\fR можна від'єднати завдяки \fBumount\fR . Також потрібний пристрій можна від'єднати вручну, використовуючи 'losetup \-d', детальніше цей процес описано у \fBlosetup(8).\fR

.SH " ФАЙЛИ "
.PP
\fI/etc/fstab\fR таблиця файлової системи 
.br
 \fI/etc/mtab\fR таблиця приєднаних файлових систем 
.br
 \fI/etc/mtab\-\fR закритий файл 
.br
 \fI/etc/mtab.tmp\fR тимчасовий файл. 

.SH " ДИВІТЬСЯ ТАКОЖ "
.PP
\fBmount(2)\fR, \fBumount(2)\fR, \fBfstab(5)\fR, \fBumount(8)\fR, \fBswapon(8)\fR, \fBnfs(5)\fR, \fBxfs(5)\fR, \fBe2label(8)\fR, \fBxfs_admin(8)\fR, \fBmountd(8)\fR, \fBnfsd(8)\fR, \fBmke2fs(8)\fR, \fBtune2fs(8)\fR, \fBlosetup(8)\fR

.SH " ПОМИЛКИ "
.PP
Для пошкодженої файлової системи існує ймовірність виникнення аварії. 

Деякі файлові системи Linux не підтримують \fB\-o sync\fR (файлові системи ext2 та ext3 \fIпідтримують\fR синхронні оновлення (а\-ля BSD) коли приєднуються з параметром \fBsync\fR ). 

\fB\-o remount\fR не завжди має змогу змінити параметри приєднання (усі \fIext2fs\-сумісні\fR параметри, окрім \fBsb\fR, можна змінити за допомогою перемонтування, але, наприклад, Ви не можете змінити \fBgid\fR  або  \fBumask\fR для \fIfatfs\fR ).

.SH " ІСТОРІЯ "
.PP
Команда \fBmount\fR існувала ще у п'ятій версії AT&T UNIX.

